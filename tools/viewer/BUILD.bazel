load("//bazel:skia_rules.bzl", "skia_cc_binary")

package(
    default_applicable_licenses = ["//:license"],
)

licenses(["notice"])

skia_cc_binary(
    name = "viewer",
    testonly = True,
    srcs = [
        "AnimTimer.h",
        "BisectSlide.cpp",
        "BisectSlide.h",
        "GMSlide.cpp",
        "GMSlide.h",
        "ImGuiLayer.cpp",
        "ImGuiLayer.h",
        "ImageSlide.cpp",
        "ImageSlide.h",
        "MSKPSlide.cpp",
        "MSKPSlide.h",
        "SKPSlide.cpp",
        "SKPSlide.h",
        "SkSLDebuggerSlide.cpp",
        "SkSLDebuggerSlide.h",
        "SkSLSlide.cpp",
        "SkSLSlide.h",
        "Slide.h",
        "SlideDir.cpp",
        "SlideDir.h",
        "StatsLayer.cpp",
        "StatsLayer.h",
        "SvgSlide.cpp",
        "SvgSlide.h",
        "TouchGesture.cpp",
        "TouchGesture.h",
        "Viewer.cpp",
        "Viewer.h",
        "//bench:gpu_tools",
        "//gm:gm_subset",
        "//tools:gpu_tool_utils",
        "//tools/fonts:test_font_manager_srcs",
        "//tools/trace",
    ],
    deps = [
        "//:core",
        "//:fontmgr_directory_freetype",
        "//:fontmgr_empty_fontations",
        "//gm",
        "//modules/sksg",
        "//src/sksl/tracing:player",
        "//tools:codec_utils",
        "//tools:mskp_player",
        "//tools:registry",
        "//tools:runtime_blend_utils",
        "//tools/flags:common_flags",
        "//tools/flags:ganesh_flags",
        "//tools/gpu:ganesh_gl_utils",
        "//tools/sk_app",
        "//tools/skui",
        "//tools/timer",
        "@imgui",
    ] + select({
        "@platforms//os:linux": ["@spirv_tools"],
        "//conditions:default": [],
    }),
)
