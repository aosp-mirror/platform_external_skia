    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x41200000 (10.0)
    5. copy_slot_unmasked             $6 = pos(0)
    6. copy_constant                  $7 = colorGreen(1)
    7. max_float                      $6 = max($6, $7)
    8. copy_constant                  $7 = colorGreen(3)
    9. min_float                      $6 = min($6, $7)
   10. copy_constant                  $7 = 0x40A00000 (5.0)
   11. mul_float                      $6 *= $7
   12. copy_slot_unmasked             five = $6
   13. store_condition_mask           $24 = CondMask
   14. store_condition_mask           $44 = CondMask
   15. store_condition_mask           $54 = CondMask
   16. store_condition_mask           $34 = CondMask
   17. store_condition_mask           $80 = CondMask
   18. store_condition_mask           $64 = CondMask
   19. store_condition_mask           $20 = CondMask
   20. store_condition_mask           $74 = CondMask
   21. store_condition_mask           $14 = CondMask
   22. store_condition_mask           $0 = CondMask
   23. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (label 0 at #57)
   24. store_return_mask              $1 = RetMask
   25. copy_slot_unmasked             $2 = five
   26. copy_slot_unmasked             five = $2
   27. copy_slot_unmasked             $2 = kZero
   28. copy_slot_unmasked             i = $2
   29. store_loop_mask                $2 = LoopMask
   30. jump                           jump +15 (label 1 at #45)
   31. label                          label 0x00000002
   32. store_condition_mask           $3 = CondMask
   33. copy_slot_unmasked             $4 = i
   34. copy_slot_unmasked             $5 = five
   35. cmpeq_float                    $4 = equal($4, $5)
   36. merge_condition_mask           CondMask = $3 & $4
   37. copy_slot_unmasked             $5 = i
   38. copy_slot_masked               [return_loop].result = Mask($5)
   39. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   40. load_condition_mask            CondMask = $3
   41. copy_slot_unmasked             $3 = i
   42. copy_constant                  $4 = 0x3F800000 (1.0)
   43. add_float                      $3 += $4
   44. copy_slot_masked               i = Mask($3)
   45. label                          label 0x00000001
   46. copy_slot_unmasked             $3 = i
   47. copy_constant                  $4 = 0x41200000 (10.0)
   48. cmplt_float                    $3 = lessThan($3, $4)
   49. merge_loop_mask                LoopMask &= $3
   50. stack_rewind
   51. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 2 at #31)
   52. load_loop_mask                 LoopMask = $2
   53. zero_slot_unmasked             $2 = 0
   54. copy_slot_masked               [return_loop].result = Mask($2)
   55. load_return_mask               RetMask = $1
   56. copy_slot_unmasked             $1 = [return_loop].result
   57. label                          label 0x00000000
   58. copy_constant                  $2 = 0x40A00000 (5.0)
   59. cmpeq_float                    $1 = equal($1, $2)
   60. zero_slot_unmasked             $15 = 0
   61. merge_condition_mask           CondMask = $0 & $1
   62. branch_if_no_active_lanes      branch_if_no_active_lanes +39 (label 3 at #101)
   63. copy_slot_unmasked             $16 = five
   64. copy_slot_unmasked             five = $16
   65. zero_2_slots_unmasked          sum(0..1) = 0
   66. store_loop_mask                $16 = LoopMask
   67. jump                           jump +20 (label 5 at #87)
   68. label                          label 0x00000006
   69. zero_slot_unmasked             [temporary 0] = 0
   70. store_condition_mask           $17 = CondMask
   71. copy_slot_unmasked             $18 = i
   72. copy_slot_unmasked             $19 = five
   73. cmplt_float                    $18 = lessThan($18, $19)
   74. merge_condition_mask           CondMask = $17 & $18
   75. copy_constant                  $19 = 0xFFFFFFFF
   76. copy_slot_masked               [temporary 0] = Mask($19)
   77. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   78. load_condition_mask            CondMask = $17
   79. copy_2_slots_unmasked          $17..18 = sum(0..1)
   80. add_float                      $17 += $18
   81. copy_slot_masked               sum = Mask($17)
   82. reenable_loop_mask             LoopMask |= [temporary 0]
   83. copy_slot_unmasked             $17 = i
   84. copy_constant                  $18 = 0x3F800000 (1.0)
   85. add_float                      $17 += $18
   86. copy_slot_masked               i = Mask($17)
   87. label                          label 0x00000005
   88. copy_slot_unmasked             $17 = i
   89. copy_slot_unmasked             $18 = kTen
   90. cmplt_float                    $17 = lessThan($17, $18)
   91. merge_loop_mask                LoopMask &= $17
   92. stack_rewind
   93. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 6 at #68)
   94. load_loop_mask                 LoopMask = $16
   95. copy_slot_unmasked             $16 = sum
   96. copy_slot_masked               [continue_loop].result = Mask($16)
   97. label                          label 0x00000004
   98. copy_constant                  $17 = 0x420C0000 (35.0)
   99. cmpeq_float                    $16 = equal($16, $17)
  100. copy_slot_masked               $15 = Mask($16)
  101. label                          label 0x00000003
  102. load_condition_mask            CondMask = $0
  103. zero_slot_unmasked             $75 = 0
  104. merge_condition_mask           CondMask = $14 & $15
  105. branch_if_no_active_lanes      branch_if_no_active_lanes +38 (label 7 at #143)
  106. copy_slot_unmasked             $76 = five
  107. copy_slot_unmasked             five = $76
  108. zero_slot_unmasked             sum = 0
  109. copy_constant                  kOne = 0x3F800000 (1.0)
  110. zero_slot_unmasked             i = 0
  111. store_loop_mask                $76 = LoopMask
  112. jump                           jump +17 (label 9 at #129)
  113. label                          label 0x0000000A
  114. store_condition_mask           $77 = CondMask
  115. copy_slot_unmasked             $78 = five
  116. copy_slot_unmasked             $79 = i
  117. cmplt_float                    $78 = lessThan($78, $79)
  118. merge_condition_mask           CondMask = $77 & $78
  119. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  120. load_condition_mask            CondMask = $77
  121. copy_slot_unmasked             $77 = sum
  122. copy_slot_unmasked             $78 = i
  123. add_float                      $77 += $78
  124. copy_slot_masked               sum = Mask($77)
  125. copy_slot_unmasked             $77 = i
  126. copy_slot_unmasked             $78 = kOne
  127. add_float                      $77 += $78
  128. copy_slot_masked               i = Mask($77)
  129. label                          label 0x00000009
  130. copy_slot_unmasked             $77 = i
  131. copy_constant                  $78 = 0x41200000 (10.0)
  132. cmplt_float                    $77 = lessThan($77, $78)
  133. merge_loop_mask                LoopMask &= $77
  134. stack_rewind
  135. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 10 at #113)
  136. load_loop_mask                 LoopMask = $76
  137. copy_slot_unmasked             $76 = sum
  138. copy_slot_masked               [break_loop].result = Mask($76)
  139. label                          label 0x00000008
  140. copy_constant                  $77 = 0x41700000 (15.0)
  141. cmpeq_float                    $76 = equal($76, $77)
  142. copy_slot_masked               $75 = Mask($76)
  143. label                          label 0x00000007
  144. load_condition_mask            CondMask = $14
  145. zero_slot_unmasked             $21 = 0
  146. merge_condition_mask           CondMask = $74 & $75
  147. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (label 11 at #173)
  148. zero_slot_unmasked             sum = 0
  149. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 13 at #163)
  150. copy_constant                  i = 0x3DFBE76D (0.123)
  151. label                          label 0x0000000E
  152. copy_2_slots_unmasked          $22..23 = sum(0..1)
  153. add_float                      $22 += $23
  154. copy_slot_masked               sum = Mask($22)
  155. copy_slot_unmasked             $22 = i
  156. copy_constant                  $23 = 0x3DE353F8 (0.111)
  157. add_float                      $22 += $23
  158. copy_slot_masked               i = Mask($22)
  159. copy_constant                  $23 = 0x3F19999A (0.6)
  160. cmplt_float                    $22 = lessThan($22, $23)
  161. stack_rewind
  162. branch_if_no_active_lanes_eq   branch -11 (label 14 at #151) if no lanes of $22 == 0x00000000 (0.0)
  163. label                          label 0x0000000D
  164. copy_slot_unmasked             $22 = sum
  165. copy_constant                  $23 = 0x3FDCCCCD (1.725)
  166. sub_float                      $22 -= $23
  167. copy_slot_masked               [float_loop].result = Mask($22)
  168. label                          label 0x0000000C
  169. abs_float                      $22 = abs($22)
  170. copy_constant                  $23 = 0x3CCCCCCD (0.025)
  171. cmplt_float                    $22 = lessThan($22, $23)
  172. copy_slot_masked               $21 = Mask($22)
  173. label                          label 0x0000000B
  174. load_condition_mask            CondMask = $74
  175. zero_slot_unmasked             $65 = 0
  176. merge_condition_mask           CondMask = $20 & $21
  177. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 15 at #206)
  178. copy_constant                  $66 = 0x41100000 (9.0)
  179. swizzle_4                      $66..69 = ($66..69).xxxx
  180. copy_4_slots_unmasked          result = $66..69
  181. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 17 at #194)
  182. copy_constant                  i = 0x3F800000 (1.0)
  183. label                          label 0x00000012
  184. copy_4_slots_unmasked          $66..69 = result
  185. copy_4_slots_masked            result = Mask($66..69)
  186. copy_slot_unmasked             $66 = i
  187. copy_constant                  $67 = 0x3F800000 (1.0)
  188. add_float                      $66 += $67
  189. copy_slot_masked               i = Mask($66)
  190. copy_constant                  $67 = 0x40400000 (3.0)
  191. cmple_float                    $66 = lessThanEqual($66, $67)
  192. stack_rewind
  193. branch_if_no_active_lanes_eq   branch -10 (label 18 at #183) if no lanes of $66 == 0x00000000 (0.0)
  194. label                          label 0x00000011
  195. copy_4_slots_unmasked          $66..69 = result
  196. copy_constant                  $70 = 0x41100000 (9.0)
  197. copy_constant                  $71 = 0x3F800000 (1.0)
  198. copy_constant                  $72 = 0x40000000 (2.0)
  199. copy_constant                  $73 = 0x40400000 (3.0)
  200. cmpeq_4_floats                 $66..69 = equal($66..69, $70..73)
  201. bitwise_and_2_ints             $66..67 &= $68..69
  202. bitwise_and_int                $66 &= $67
  203. copy_slot_masked               [loop_operator_le].result = Mask($66)
  204. label                          label 0x00000010
  205. copy_slot_masked               $65 = Mask($66)
  206. label                          label 0x0000000F
  207. load_condition_mask            CondMask = $20
  208. zero_slot_unmasked             $81 = 0
  209. merge_condition_mask           CondMask = $64 & $65
  210. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 19 at #239)
  211. copy_constant                  $82 = 0x41100000 (9.0)
  212. swizzle_4                      $82..85 = ($82..85).xxxx
  213. copy_4_slots_unmasked          result = $82..85
  214. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 21 at #227)
  215. copy_constant                  i = 0x3F800000 (1.0)
  216. label                          label 0x00000016
  217. copy_4_slots_unmasked          $82..85 = result
  218. copy_4_slots_masked            result = Mask($82..85)
  219. copy_slot_unmasked             $82 = i
  220. copy_constant                  $83 = 0x3F800000 (1.0)
  221. add_float                      $82 += $83
  222. copy_slot_masked               i = Mask($82)
  223. copy_constant                  $83 = 0x40800000 (4.0)
  224. cmplt_float                    $82 = lessThan($82, $83)
  225. stack_rewind
  226. branch_if_no_active_lanes_eq   branch -10 (label 22 at #216) if no lanes of $82 == 0x00000000 (0.0)
  227. label                          label 0x00000015
  228. copy_4_slots_unmasked          $82..85 = result
  229. copy_constant                  $86 = 0x41100000 (9.0)
  230. copy_constant                  $87 = 0x3F800000 (1.0)
  231. copy_constant                  $88 = 0x40000000 (2.0)
  232. copy_constant                  $89 = 0x40400000 (3.0)
  233. cmpeq_4_floats                 $82..85 = equal($82..85, $86..89)
  234. bitwise_and_2_ints             $82..83 &= $84..85
  235. bitwise_and_int                $82 &= $83
  236. copy_slot_masked               [loop_operator_lt].result = Mask($82)
  237. label                          label 0x00000014
  238. copy_slot_masked               $81 = Mask($82)
  239. label                          label 0x00000013
  240. load_condition_mask            CondMask = $64
  241. zero_slot_unmasked             $35 = 0
  242. merge_condition_mask           CondMask = $80 & $81
  243. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 23 at #273)
  244. copy_constant                  $36 = 0x41100000 (9.0)
  245. swizzle_4                      $36..39 = ($36..39).xxxx
  246. copy_4_slots_unmasked          result = $36..39
  247. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 25 at #261)
  248. copy_constant                  i = 0x40400000 (3.0)
  249. label                          label 0x0000001A
  250. copy_4_slots_unmasked          $36..39 = result
  251. copy_4_slots_masked            result = Mask($36..39)
  252. copy_slot_unmasked             $36 = i
  253. copy_constant                  $37 = 0x3F800000 (1.0)
  254. sub_float                      $36 -= $37
  255. copy_slot_masked               i = Mask($36)
  256. copy_constant                  $36 = 0x3F800000 (1.0)
  257. copy_slot_unmasked             $37 = i
  258. cmple_float                    $36 = lessThanEqual($36, $37)
  259. stack_rewind
  260. branch_if_no_active_lanes_eq   branch -11 (label 26 at #249) if no lanes of $36 == 0x00000000 (0.0)
  261. label                          label 0x00000019
  262. copy_4_slots_unmasked          $36..39 = result
  263. copy_constant                  $40 = 0x41100000 (9.0)
  264. copy_constant                  $41 = 0x40400000 (3.0)
  265. copy_constant                  $42 = 0x40000000 (2.0)
  266. copy_constant                  $43 = 0x3F800000 (1.0)
  267. cmpeq_4_floats                 $36..39 = equal($36..39, $40..43)
  268. bitwise_and_2_ints             $36..37 &= $38..39
  269. bitwise_and_int                $36 &= $37
  270. copy_slot_masked               [loop_operator_ge].result = Mask($36)
  271. label                          label 0x00000018
  272. copy_slot_masked               $35 = Mask($36)
  273. label                          label 0x00000017
  274. load_condition_mask            CondMask = $80
  275. zero_slot_unmasked             $55 = 0
  276. merge_condition_mask           CondMask = $34 & $35
  277. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 27 at #307)
  278. copy_constant                  $56 = 0x41100000 (9.0)
  279. swizzle_4                      $56..59 = ($56..59).xxxx
  280. copy_4_slots_unmasked          result = $56..59
  281. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 29 at #295)
  282. copy_constant                  i = 0x40400000 (3.0)
  283. label                          label 0x0000001E
  284. copy_4_slots_unmasked          $56..59 = result
  285. copy_4_slots_masked            result = Mask($56..59)
  286. copy_slot_unmasked             $56 = i
  287. copy_constant                  $57 = 0x3F800000 (1.0)
  288. sub_float                      $56 -= $57
  289. copy_slot_masked               i = Mask($56)
  290. zero_slot_unmasked             $56 = 0
  291. copy_slot_unmasked             $57 = i
  292. cmplt_float                    $56 = lessThan($56, $57)
  293. stack_rewind
  294. branch_if_no_active_lanes_eq   branch -11 (label 30 at #283) if no lanes of $56 == 0x00000000 (0.0)
  295. label                          label 0x0000001D
  296. copy_4_slots_unmasked          $56..59 = result
  297. copy_constant                  $60 = 0x41100000 (9.0)
  298. copy_constant                  $61 = 0x40400000 (3.0)
  299. copy_constant                  $62 = 0x40000000 (2.0)
  300. copy_constant                  $63 = 0x3F800000 (1.0)
  301. cmpeq_4_floats                 $56..59 = equal($56..59, $60..63)
  302. bitwise_and_2_ints             $56..57 &= $58..59
  303. bitwise_and_int                $56 &= $57
  304. copy_slot_masked               [loop_operator_gt].result = Mask($56)
  305. label                          label 0x0000001C
  306. copy_slot_masked               $55 = Mask($56)
  307. label                          label 0x0000001B
  308. load_condition_mask            CondMask = $34
  309. zero_slot_unmasked             $45 = 0
  310. merge_condition_mask           CondMask = $54 & $55
  311. branch_if_no_active_lanes      branch_if_no_active_lanes +21 (label 31 at #332)
  312. copy_constant                  $46 = 0x41100000 (9.0)
  313. swizzle_4                      $46..49 = ($46..49).xxxx
  314. copy_4_slots_unmasked          result = $46..49
  315. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 33 at #320)
  316. copy_constant                  i = 0x3F800000 (1.0)
  317. label                          label 0x00000022
  318. copy_4_slots_unmasked          $46..49 = result
  319. copy_4_slots_masked            result = Mask($46..49)
  320. label                          label 0x00000021
  321. copy_4_slots_unmasked          $46..49 = result
  322. copy_constant                  $50 = 0x41100000 (9.0)
  323. copy_constant                  $51 = 0x41100000 (9.0)
  324. copy_constant                  $52 = 0x41100000 (9.0)
  325. copy_constant                  $53 = 0x3F800000 (1.0)
  326. cmpeq_4_floats                 $46..49 = equal($46..49, $50..53)
  327. bitwise_and_2_ints             $46..47 &= $48..49
  328. bitwise_and_int                $46 &= $47
  329. copy_slot_masked               [loop_operator_eq].result = Mask($46)
  330. label                          label 0x00000020
  331. copy_slot_masked               $45 = Mask($46)
  332. label                          label 0x0000001F
  333. load_condition_mask            CondMask = $54
  334. zero_slot_unmasked             $25 = 0
  335. merge_condition_mask           CondMask = $44 & $45
  336. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 35 at #365)
  337. copy_constant                  $26 = 0x41100000 (9.0)
  338. swizzle_4                      $26..29 = ($26..29).xxxx
  339. copy_4_slots_unmasked          result = $26..29
  340. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 37 at #353)
  341. copy_constant                  i = 0x3F800000 (1.0)
  342. label                          label 0x00000026
  343. copy_4_slots_unmasked          $26..29 = result
  344. copy_4_slots_masked            result = Mask($26..29)
  345. copy_slot_unmasked             $26 = i
  346. copy_constant                  $27 = 0x3F800000 (1.0)
  347. add_float                      $26 += $27
  348. copy_slot_masked               i = Mask($26)
  349. copy_constant                  $27 = 0x40800000 (4.0)
  350. cmpne_float                    $26 = notEqual($26, $27)
  351. stack_rewind
  352. branch_if_no_active_lanes_eq   branch -10 (label 38 at #342) if no lanes of $26 == 0x00000000 (0.0)
  353. label                          label 0x00000025
  354. copy_4_slots_unmasked          $26..29 = result
  355. copy_constant                  $30 = 0x41100000 (9.0)
  356. copy_constant                  $31 = 0x3F800000 (1.0)
  357. copy_constant                  $32 = 0x40000000 (2.0)
  358. copy_constant                  $33 = 0x40400000 (3.0)
  359. cmpeq_4_floats                 $26..29 = equal($26..29, $30..33)
  360. bitwise_and_2_ints             $26..27 &= $28..29
  361. bitwise_and_int                $26 &= $27
  362. copy_slot_masked               [loop_operator_ne].result = Mask($26)
  363. label                          label 0x00000024
  364. copy_slot_masked               $25 = Mask($26)
  365. label                          label 0x00000023
  366. load_condition_mask            CondMask = $44
  367. copy_4_constants               $6..9 = colorRed
  368. merge_condition_mask           CondMask = $24 & $25
  369. copy_4_constants               $10..13 = colorGreen
  370. copy_4_slots_masked            $6..9 = Mask($10..13)
  371. label                          label 0x00000027
  372. load_condition_mask            CondMask = $24
  373. copy_4_slots_unmasked          [main].result = $6..9
  374. load_src                       src.rgba = [main].result
