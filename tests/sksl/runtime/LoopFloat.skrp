    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x41200000 (10.0)
    5. copy_slot_unmasked             $6 = pos(0)
    6. copy_constant                  $7 = colorGreen(1)
    7. max_float                      $6 = max($6, $7)
    8. copy_constant                  $7 = colorGreen(3)
    9. min_float                      $6 = min($6, $7)
   10. copy_constant                  $7 = 0x40A00000 (5.0)
   11. mul_float                      $6 *= $7
   12. copy_slot_unmasked             five = $6
   13. store_condition_mask           $25 = CondMask
   14. store_condition_mask           $45 = CondMask
   15. store_condition_mask           $55 = CondMask
   16. store_condition_mask           $35 = CondMask
   17. store_condition_mask           $81 = CondMask
   18. store_condition_mask           $65 = CondMask
   19. store_condition_mask           $20 = CondMask
   20. store_condition_mask           $75 = CondMask
   21. store_condition_mask           $14 = CondMask
   22. store_condition_mask           $0 = CondMask
   23. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (#55)
   24. store_return_mask              $1 = RetMask
   25. copy_slot_unmasked             $2 = five
   26. copy_slot_unmasked             five = $2
   27. copy_slot_unmasked             $2 = kZero
   28. copy_slot_unmasked             i = $2
   29. store_loop_mask                $2 = LoopMask
   30. jump                           jump +14 (#44)
   31. store_condition_mask           $3 = CondMask
   32. copy_slot_unmasked             $4 = i
   33. copy_slot_unmasked             $5 = five
   34. cmpeq_float                    $4 = equal($4, $5)
   35. merge_condition_mask           CondMask = $3 & $4
   36. copy_slot_unmasked             $5 = i
   37. copy_slot_masked               [return_loop].result = Mask($5)
   38. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   39. load_condition_mask            CondMask = $3
   40. copy_slot_unmasked             $3 = i
   41. copy_constant                  $4 = 0x3F800000 (1.0)
   42. add_float                      $3 += $4
   43. copy_slot_masked               i = Mask($3)
   44. copy_slot_unmasked             $3 = i
   45. copy_constant                  $4 = 0x41200000 (10.0)
   46. cmplt_float                    $3 = lessThan($3, $4)
   47. merge_loop_mask                LoopMask &= $3
   48. stack_rewind
   49. branch_if_any_active_lanes     branch_if_any_active_lanes -18 (#31)
   50. load_loop_mask                 LoopMask = $2
   51. zero_slot_unmasked             $2 = 0
   52. copy_slot_masked               [return_loop].result = Mask($2)
   53. load_return_mask               RetMask = $1
   54. copy_slot_unmasked             $1 = [return_loop].result
   55. copy_constant                  $2 = 0x40A00000 (5.0)
   56. cmpeq_float                    $1 = equal($1, $2)
   57. zero_slot_unmasked             $15 = 0
   58. merge_condition_mask           CondMask = $0 & $1
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (#95)
   60. copy_slot_unmasked             $16 = five
   61. copy_slot_unmasked             five = $16
   62. zero_2_slots_unmasked          sum(0..1) = 0
   63. store_loop_mask                $16 = LoopMask
   64. jump                           jump +19 (#83)
   65. zero_slot_unmasked             [for-loop continue mask 0] = 0
   66. store_condition_mask           $17 = CondMask
   67. copy_slot_unmasked             $18 = i
   68. copy_slot_unmasked             $19 = five
   69. cmplt_float                    $18 = lessThan($18, $19)
   70. merge_condition_mask           CondMask = $17 & $18
   71. copy_constant                  $19 = 0xFFFFFFFF
   72. copy_slot_masked               [for-loop continue mask 0] = Mask($19)
   73. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   74. load_condition_mask            CondMask = $17
   75. copy_2_slots_unmasked          $17..18 = sum(0..1)
   76. add_float                      $17 += $18
   77. copy_slot_masked               sum = Mask($17)
   78. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   79. copy_slot_unmasked             $17 = i
   80. copy_constant                  $18 = 0x3F800000 (1.0)
   81. add_float                      $17 += $18
   82. copy_slot_masked               i = Mask($17)
   83. copy_slot_unmasked             $17 = i
   84. copy_slot_unmasked             $18 = kTen
   85. cmplt_float                    $17 = lessThan($17, $18)
   86. merge_loop_mask                LoopMask &= $17
   87. stack_rewind
   88. branch_if_any_active_lanes     branch_if_any_active_lanes -23 (#65)
   89. load_loop_mask                 LoopMask = $16
   90. copy_slot_unmasked             $16 = sum
   91. copy_slot_masked               [continue_loop].result = Mask($16)
   92. copy_constant                  $17 = 0x420C0000 (35.0)
   93. cmpeq_float                    $16 = equal($16, $17)
   94. copy_slot_masked               $15 = Mask($16)
   95. load_condition_mask            CondMask = $0
   96. zero_slot_unmasked             $76 = 0
   97. merge_condition_mask           CondMask = $14 & $15
   98. branch_if_no_active_lanes      branch_if_no_active_lanes +35 (#133)
   99. copy_slot_unmasked             $77 = five
  100. copy_slot_unmasked             five = $77
  101. zero_slot_unmasked             sum = 0
  102. copy_constant                  kOne = 0x3F800000 (1.0)
  103. zero_slot_unmasked             i = 0
  104. store_loop_mask                $77 = LoopMask
  105. jump                           jump +16 (#121)
  106. store_condition_mask           $78 = CondMask
  107. copy_slot_unmasked             $79 = five
  108. copy_slot_unmasked             $80 = i
  109. cmplt_float                    $79 = lessThan($79, $80)
  110. merge_condition_mask           CondMask = $78 & $79
  111. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  112. load_condition_mask            CondMask = $78
  113. copy_slot_unmasked             $78 = sum
  114. copy_slot_unmasked             $79 = i
  115. add_float                      $78 += $79
  116. copy_slot_masked               sum = Mask($78)
  117. copy_slot_unmasked             $78 = i
  118. copy_slot_unmasked             $79 = kOne
  119. add_float                      $78 += $79
  120. copy_slot_masked               i = Mask($78)
  121. copy_slot_unmasked             $78 = i
  122. copy_constant                  $79 = 0x41200000 (10.0)
  123. cmplt_float                    $78 = lessThan($78, $79)
  124. merge_loop_mask                LoopMask &= $78
  125. stack_rewind
  126. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (#106)
  127. load_loop_mask                 LoopMask = $77
  128. copy_slot_unmasked             $77 = sum
  129. copy_slot_masked               [break_loop].result = Mask($77)
  130. copy_constant                  $78 = 0x41700000 (15.0)
  131. cmpeq_float                    $77 = equal($77, $78)
  132. copy_slot_masked               $76 = Mask($77)
  133. load_condition_mask            CondMask = $14
  134. zero_slot_unmasked             $21 = 0
  135. merge_condition_mask           CondMask = $75 & $76
  136. branch_if_no_active_lanes      branch_if_no_active_lanes +27 (#163)
  137. zero_slot_unmasked             sum = 0
  138. copy_constant                  i = 0x3DFBE76D (0.123)
  139. store_loop_mask                $22 = LoopMask
  140. jump                           jump +8 (#148)
  141. copy_2_slots_unmasked          $23..24 = sum(0..1)
  142. add_float                      $23 += $24
  143. copy_slot_masked               sum = Mask($23)
  144. copy_slot_unmasked             $23 = i
  145. copy_constant                  $24 = 0x3DE353F8 (0.111)
  146. add_float                      $23 += $24
  147. copy_slot_masked               i = Mask($23)
  148. copy_slot_unmasked             $23 = i
  149. copy_constant                  $24 = 0x3F19999A (0.6)
  150. cmplt_float                    $23 = lessThan($23, $24)
  151. merge_loop_mask                LoopMask &= $23
  152. stack_rewind
  153. branch_if_any_active_lanes     branch_if_any_active_lanes -12 (#141)
  154. load_loop_mask                 LoopMask = $22
  155. copy_slot_unmasked             $22 = sum
  156. copy_constant                  $23 = 0x3FDCCCCD (1.725)
  157. sub_float                      $22 -= $23
  158. copy_slot_masked               [float_loop].result = Mask($22)
  159. abs_float                      $22 = abs($22)
  160. copy_constant                  $23 = 0x3CCCCCCD (0.025)
  161. cmplt_float                    $22 = lessThan($22, $23)
  162. copy_slot_masked               $21 = Mask($22)
  163. load_condition_mask            CondMask = $75
  164. zero_slot_unmasked             $66 = 0
  165. merge_condition_mask           CondMask = $20 & $21
  166. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#196)
  167. copy_constant                  $67 = 0x41100000 (9.0)
  168. swizzle_4                      $67..70 = ($67..70).xxxx
  169. copy_4_slots_unmasked          result = $67..70
  170. copy_constant                  i = 0x3F800000 (1.0)
  171. store_loop_mask                $67 = LoopMask
  172. jump                           jump +7 (#179)
  173. copy_4_slots_unmasked          $68..71 = result
  174. copy_4_slots_masked            result = Mask($68..71)
  175. copy_slot_unmasked             $68 = i
  176. copy_constant                  $69 = 0x3F800000 (1.0)
  177. add_float                      $68 += $69
  178. copy_slot_masked               i = Mask($68)
  179. copy_slot_unmasked             $68 = i
  180. copy_constant                  $69 = 0x40400000 (3.0)
  181. cmple_float                    $68 = lessThanEqual($68, $69)
  182. merge_loop_mask                LoopMask &= $68
  183. stack_rewind
  184. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#173)
  185. load_loop_mask                 LoopMask = $67
  186. copy_4_slots_unmasked          $67..70 = result
  187. copy_constant                  $71 = 0x41100000 (9.0)
  188. copy_constant                  $72 = 0x3F800000 (1.0)
  189. copy_constant                  $73 = 0x40000000 (2.0)
  190. copy_constant                  $74 = 0x40400000 (3.0)
  191. cmpeq_4_floats                 $67..70 = equal($67..70, $71..74)
  192. bitwise_and_2_ints             $67..68 &= $69..70
  193. bitwise_and_int                $67 &= $68
  194. copy_slot_masked               [loop_operator_le].result = Mask($67)
  195. copy_slot_masked               $66 = Mask($67)
  196. load_condition_mask            CondMask = $20
  197. zero_slot_unmasked             $82 = 0
  198. merge_condition_mask           CondMask = $65 & $66
  199. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#229)
  200. copy_constant                  $83 = 0x41100000 (9.0)
  201. swizzle_4                      $83..86 = ($83..86).xxxx
  202. copy_4_slots_unmasked          result = $83..86
  203. copy_constant                  i = 0x3F800000 (1.0)
  204. store_loop_mask                $83 = LoopMask
  205. jump                           jump +7 (#212)
  206. copy_4_slots_unmasked          $84..87 = result
  207. copy_4_slots_masked            result = Mask($84..87)
  208. copy_slot_unmasked             $84 = i
  209. copy_constant                  $85 = 0x3F800000 (1.0)
  210. add_float                      $84 += $85
  211. copy_slot_masked               i = Mask($84)
  212. copy_slot_unmasked             $84 = i
  213. copy_constant                  $85 = 0x40800000 (4.0)
  214. cmplt_float                    $84 = lessThan($84, $85)
  215. merge_loop_mask                LoopMask &= $84
  216. stack_rewind
  217. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#206)
  218. load_loop_mask                 LoopMask = $83
  219. copy_4_slots_unmasked          $83..86 = result
  220. copy_constant                  $87 = 0x41100000 (9.0)
  221. copy_constant                  $88 = 0x3F800000 (1.0)
  222. copy_constant                  $89 = 0x40000000 (2.0)
  223. copy_constant                  $90 = 0x40400000 (3.0)
  224. cmpeq_4_floats                 $83..86 = equal($83..86, $87..90)
  225. bitwise_and_2_ints             $83..84 &= $85..86
  226. bitwise_and_int                $83 &= $84
  227. copy_slot_masked               [loop_operator_lt].result = Mask($83)
  228. copy_slot_masked               $82 = Mask($83)
  229. load_condition_mask            CondMask = $65
  230. zero_slot_unmasked             $36 = 0
  231. merge_condition_mask           CondMask = $81 & $82
  232. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#262)
  233. copy_constant                  $37 = 0x41100000 (9.0)
  234. swizzle_4                      $37..40 = ($37..40).xxxx
  235. copy_4_slots_unmasked          result = $37..40
  236. copy_constant                  i = 0x40400000 (3.0)
  237. store_loop_mask                $37 = LoopMask
  238. jump                           jump +7 (#245)
  239. copy_4_slots_unmasked          $38..41 = result
  240. copy_4_slots_masked            result = Mask($38..41)
  241. copy_slot_unmasked             $38 = i
  242. copy_constant                  $39 = 0x3F800000 (1.0)
  243. sub_float                      $38 -= $39
  244. copy_slot_masked               i = Mask($38)
  245. copy_constant                  $38 = 0x3F800000 (1.0)
  246. copy_slot_unmasked             $39 = i
  247. cmple_float                    $38 = lessThanEqual($38, $39)
  248. merge_loop_mask                LoopMask &= $38
  249. stack_rewind
  250. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#239)
  251. load_loop_mask                 LoopMask = $37
  252. copy_4_slots_unmasked          $37..40 = result
  253. copy_constant                  $41 = 0x41100000 (9.0)
  254. copy_constant                  $42 = 0x40400000 (3.0)
  255. copy_constant                  $43 = 0x40000000 (2.0)
  256. copy_constant                  $44 = 0x3F800000 (1.0)
  257. cmpeq_4_floats                 $37..40 = equal($37..40, $41..44)
  258. bitwise_and_2_ints             $37..38 &= $39..40
  259. bitwise_and_int                $37 &= $38
  260. copy_slot_masked               [loop_operator_ge].result = Mask($37)
  261. copy_slot_masked               $36 = Mask($37)
  262. load_condition_mask            CondMask = $81
  263. zero_slot_unmasked             $56 = 0
  264. merge_condition_mask           CondMask = $35 & $36
  265. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#295)
  266. copy_constant                  $57 = 0x41100000 (9.0)
  267. swizzle_4                      $57..60 = ($57..60).xxxx
  268. copy_4_slots_unmasked          result = $57..60
  269. copy_constant                  i = 0x40400000 (3.0)
  270. store_loop_mask                $57 = LoopMask
  271. jump                           jump +7 (#278)
  272. copy_4_slots_unmasked          $58..61 = result
  273. copy_4_slots_masked            result = Mask($58..61)
  274. copy_slot_unmasked             $58 = i
  275. copy_constant                  $59 = 0x3F800000 (1.0)
  276. sub_float                      $58 -= $59
  277. copy_slot_masked               i = Mask($58)
  278. zero_slot_unmasked             $58 = 0
  279. copy_slot_unmasked             $59 = i
  280. cmplt_float                    $58 = lessThan($58, $59)
  281. merge_loop_mask                LoopMask &= $58
  282. stack_rewind
  283. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#272)
  284. load_loop_mask                 LoopMask = $57
  285. copy_4_slots_unmasked          $57..60 = result
  286. copy_constant                  $61 = 0x41100000 (9.0)
  287. copy_constant                  $62 = 0x40400000 (3.0)
  288. copy_constant                  $63 = 0x40000000 (2.0)
  289. copy_constant                  $64 = 0x3F800000 (1.0)
  290. cmpeq_4_floats                 $57..60 = equal($57..60, $61..64)
  291. bitwise_and_2_ints             $57..58 &= $59..60
  292. bitwise_and_int                $57 &= $58
  293. copy_slot_masked               [loop_operator_gt].result = Mask($57)
  294. copy_slot_masked               $56 = Mask($57)
  295. load_condition_mask            CondMask = $35
  296. zero_slot_unmasked             $46 = 0
  297. merge_condition_mask           CondMask = $55 & $56
  298. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#328)
  299. copy_constant                  $47 = 0x41100000 (9.0)
  300. swizzle_4                      $47..50 = ($47..50).xxxx
  301. copy_4_slots_unmasked          result = $47..50
  302. copy_constant                  i = 0x3F800000 (1.0)
  303. store_loop_mask                $47 = LoopMask
  304. jump                           jump +7 (#311)
  305. copy_4_slots_unmasked          $48..51 = result
  306. copy_4_slots_masked            result = Mask($48..51)
  307. copy_slot_unmasked             $48 = i
  308. copy_constant                  $49 = 0x3F800000 (1.0)
  309. add_float                      $48 += $49
  310. copy_slot_masked               i = Mask($48)
  311. copy_slot_unmasked             $48 = i
  312. copy_constant                  $49 = 0x3F800000 (1.0)
  313. cmpeq_float                    $48 = equal($48, $49)
  314. merge_loop_mask                LoopMask &= $48
  315. stack_rewind
  316. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#305)
  317. load_loop_mask                 LoopMask = $47
  318. copy_4_slots_unmasked          $47..50 = result
  319. copy_constant                  $51 = 0x41100000 (9.0)
  320. copy_constant                  $52 = 0x41100000 (9.0)
  321. copy_constant                  $53 = 0x41100000 (9.0)
  322. copy_constant                  $54 = 0x3F800000 (1.0)
  323. cmpeq_4_floats                 $47..50 = equal($47..50, $51..54)
  324. bitwise_and_2_ints             $47..48 &= $49..50
  325. bitwise_and_int                $47 &= $48
  326. copy_slot_masked               [loop_operator_eq].result = Mask($47)
  327. copy_slot_masked               $46 = Mask($47)
  328. load_condition_mask            CondMask = $55
  329. zero_slot_unmasked             $26 = 0
  330. merge_condition_mask           CondMask = $45 & $46
  331. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#361)
  332. copy_constant                  $27 = 0x41100000 (9.0)
  333. swizzle_4                      $27..30 = ($27..30).xxxx
  334. copy_4_slots_unmasked          result = $27..30
  335. copy_constant                  i = 0x3F800000 (1.0)
  336. store_loop_mask                $27 = LoopMask
  337. jump                           jump +7 (#344)
  338. copy_4_slots_unmasked          $28..31 = result
  339. copy_4_slots_masked            result = Mask($28..31)
  340. copy_slot_unmasked             $28 = i
  341. copy_constant                  $29 = 0x3F800000 (1.0)
  342. add_float                      $28 += $29
  343. copy_slot_masked               i = Mask($28)
  344. copy_slot_unmasked             $28 = i
  345. copy_constant                  $29 = 0x40800000 (4.0)
  346. cmpne_float                    $28 = notEqual($28, $29)
  347. merge_loop_mask                LoopMask &= $28
  348. stack_rewind
  349. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#338)
  350. load_loop_mask                 LoopMask = $27
  351. copy_4_slots_unmasked          $27..30 = result
  352. copy_constant                  $31 = 0x41100000 (9.0)
  353. copy_constant                  $32 = 0x3F800000 (1.0)
  354. copy_constant                  $33 = 0x40000000 (2.0)
  355. copy_constant                  $34 = 0x40400000 (3.0)
  356. cmpeq_4_floats                 $27..30 = equal($27..30, $31..34)
  357. bitwise_and_2_ints             $27..28 &= $29..30
  358. bitwise_and_int                $27 &= $28
  359. copy_slot_masked               [loop_operator_ne].result = Mask($27)
  360. copy_slot_masked               $26 = Mask($27)
  361. load_condition_mask            CondMask = $45
  362. copy_4_constants               $6..9 = colorRed
  363. merge_condition_mask           CondMask = $25 & $26
  364. copy_4_constants               $10..13 = colorGreen
  365. copy_4_slots_masked            $6..9 = Mask($10..13)
  366. load_condition_mask            CondMask = $25
  367. copy_4_slots_unmasked          [main].result = $6..9
  368. load_src                       src.rgba = [main].result
