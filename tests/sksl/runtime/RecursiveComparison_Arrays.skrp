    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  EQ = 0xFFFFFFFF
   34. zero_slot_unmasked             NE = 0
   35. copy_constant                  $0 = colorGreen(0)
   36. copy_constant                  $1 = 0x3F800000 (1.0)
   37. add_float                      $0 += $1
   38. copy_slot_unmasked             _0_one = $0
   39. zero_3_slots_unmasked          _1_a[0](0..2) = 0
   40. copy_slot_unmasked             $0 = F42
   41. copy_slot_unmasked             _1_a[0] = $0
   42. copy_slot_unmasked             $0 = ZM
   43. copy_slot_unmasked             _1_a[1] = $0
   44. copy_slot_unmasked             $0 = ZP
   45. copy_slot_unmasked             _1_a[2] = $0
   46. zero_3_slots_unmasked          _2_b[0](0..2) = 0
   47. copy_slot_unmasked             $0 = F42
   48. copy_slot_unmasked             $1 = _0_one
   49. mul_float                      $0 *= $1
   50. copy_slot_unmasked             _2_b[0] = $0
   51. copy_slot_unmasked             $0 = ZM
   52. copy_slot_unmasked             $1 = _0_one
   53. mul_float                      $0 *= $1
   54. copy_slot_unmasked             _2_b[1] = $0
   55. copy_slot_unmasked             $0 = ZP
   56. copy_slot_unmasked             $1 = _0_one
   57. mul_float                      $0 *= $1
   58. copy_slot_unmasked             _2_b[2] = $0
   59. store_condition_mask           $19 = CondMask
   60. store_condition_mask           $37 = CondMask
   61. store_condition_mask           $46 = CondMask
   62. store_condition_mask           $28 = CondMask
   63. store_condition_mask           $72 = CondMask
   64. store_condition_mask           $55 = CondMask
   65. store_condition_mask           $10 = CondMask
   66. store_condition_mask           $64 = CondMask
   67. store_condition_mask           $8 = CondMask
   68. copy_slot_unmasked             $9 = EQ
   69. copy_4_slots_unmasked          $65..68 = _1_a[0](0..3)
   70. copy_2_slots_unmasked          $69..70 = _2_b[1](0..1)
   71. cmpne_3_floats                 $65..67 = notEqual($65..67, $68..70)
   72. bitwise_or_int                 $66 |= $67
   73. bitwise_or_int                 $65 |= $66
   74. merge_condition_mask           CondMask = $8 & $9
   75. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 0 at #82)
   76. copy_4_slots_unmasked          $66..69 = _1_a[0](0..3)
   77. copy_2_slots_unmasked          $70..71 = _2_b[1](0..1)
   78. cmpeq_3_floats                 $66..68 = equal($66..68, $69..71)
   79. bitwise_and_int                $67 &= $68
   80. bitwise_and_int                $66 &= $67
   81. copy_slot_masked               $65 = Mask($66)
   82. label                          label 0x00000000
   83. load_condition_mask            CondMask = $8
   84. zero_slot_unmasked             $11 = 0
   85. merge_condition_mask           CondMask = $64 & $65
   86. branch_if_no_active_lanes      branch_if_no_active_lanes +54 (label 1 at #140)
   87. copy_slot_unmasked             $12 = NE
   88. copy_slot_unmasked             eq = $12
   89. copy_slot_unmasked             $12 = F42
   90. copy_slot_unmasked             f1 = $12
   91. copy_slot_unmasked             $12 = ZM
   92. copy_slot_unmasked             f2 = $12
   93. copy_slot_unmasked             $12 = ZP
   94. copy_slot_unmasked             f3 = $12
   95. copy_constant                  $12 = colorGreen(0)
   96. copy_constant                  $13 = 0x3F800000 (1.0)
   97. add_float                      $12 += $13
   98. copy_slot_unmasked             one = $12
   99. zero_3_slots_unmasked          a[0](0..2) = 0
  100. copy_slot_unmasked             $12 = f1
  101. copy_slot_masked               a[0] = Mask($12)
  102. copy_slot_unmasked             $12 = f2
  103. copy_slot_masked               a[1] = Mask($12)
  104. copy_slot_unmasked             $12 = f3
  105. copy_slot_masked               a[2] = Mask($12)
  106. zero_3_slots_unmasked          b[0](0..2) = 0
  107. copy_slot_unmasked             $12 = f1
  108. copy_slot_unmasked             $13 = one
  109. mul_float                      $12 *= $13
  110. copy_slot_masked               b[0] = Mask($12)
  111. copy_slot_unmasked             $12 = f2
  112. copy_slot_unmasked             $13 = one
  113. mul_float                      $12 *= $13
  114. copy_slot_masked               b[1] = Mask($12)
  115. copy_slot_unmasked             $12 = f3
  116. copy_slot_unmasked             $13 = one
  117. mul_float                      $12 *= $13
  118. copy_slot_masked               b[2] = Mask($12)
  119. store_condition_mask           $66 = CondMask
  120. copy_slot_unmasked             $67 = eq
  121. copy_4_slots_unmasked          $12..15 = a[0](0..3)
  122. copy_2_slots_unmasked          $16..17 = b[1](0..1)
  123. cmpne_3_floats                 $12..14 = notEqual($12..14, $15..17)
  124. bitwise_or_int                 $13 |= $14
  125. bitwise_or_int                 $12 |= $13
  126. merge_condition_mask           CondMask = $66 & $67
  127. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 3 at #134)
  128. copy_4_slots_unmasked          $13..16 = a[0](0..3)
  129. copy_2_slots_unmasked          $17..18 = b[1](0..1)
  130. cmpeq_3_floats                 $13..15 = equal($13..15, $16..18)
  131. bitwise_and_int                $14 &= $15
  132. bitwise_and_int                $13 &= $14
  133. copy_slot_masked               $12 = Mask($13)
  134. label                          label 0x00000003
  135. load_condition_mask            CondMask = $66
  136. copy_slot_masked               [test_same_arrays].result = Mask($12)
  137. label                          label 0x00000002
  138. bitwise_not_int                $12 = ~$12
  139. copy_slot_masked               $11 = Mask($12)
  140. label                          label 0x00000001
  141. load_condition_mask            CondMask = $64
  142. zero_slot_unmasked             $56 = 0
  143. merge_condition_mask           CondMask = $10 & $11
  144. branch_if_no_active_lanes      branch_if_no_active_lanes +53 (label 4 at #197)
  145. copy_slot_unmasked             $57 = NE
  146. copy_slot_unmasked             eq = $57
  147. copy_slot_unmasked             $57 = F42
  148. copy_slot_unmasked             f1 = $57
  149. copy_slot_unmasked             $57 = NAN1
  150. copy_slot_unmasked             f2 = $57
  151. copy_slot_unmasked             $57 = NAN2
  152. copy_slot_unmasked             f3 = $57
  153. copy_constant                  $57 = colorGreen(0)
  154. copy_constant                  $58 = 0x3F800000 (1.0)
  155. add_float                      $57 += $58
  156. copy_slot_unmasked             one = $57
  157. zero_3_slots_unmasked          a[0](0..2) = 0
  158. copy_slot_unmasked             $57 = f1
  159. copy_slot_masked               a[0] = Mask($57)
  160. copy_slot_unmasked             $57 = f2
  161. copy_slot_masked               a[1] = Mask($57)
  162. copy_slot_unmasked             $57 = f3
  163. copy_slot_masked               a[2] = Mask($57)
  164. zero_3_slots_unmasked          b[0](0..2) = 0
  165. copy_slot_unmasked             $57 = f1
  166. copy_slot_unmasked             $58 = one
  167. mul_float                      $57 *= $58
  168. copy_slot_masked               b[0] = Mask($57)
  169. copy_slot_unmasked             $57 = f2
  170. copy_slot_unmasked             $58 = one
  171. mul_float                      $57 *= $58
  172. copy_slot_masked               b[1] = Mask($57)
  173. copy_slot_unmasked             $57 = f3
  174. copy_slot_unmasked             $58 = one
  175. mul_float                      $57 *= $58
  176. copy_slot_masked               b[2] = Mask($57)
  177. store_condition_mask           $12 = CondMask
  178. copy_slot_unmasked             $13 = eq
  179. copy_4_slots_unmasked          $57..60 = a[0](0..3)
  180. copy_2_slots_unmasked          $61..62 = b[1](0..1)
  181. cmpne_3_floats                 $57..59 = notEqual($57..59, $60..62)
  182. bitwise_or_int                 $58 |= $59
  183. bitwise_or_int                 $57 |= $58
  184. merge_condition_mask           CondMask = $12 & $13
  185. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 6 at #192)
  186. copy_4_slots_unmasked          $58..61 = a[0](0..3)
  187. copy_2_slots_unmasked          $62..63 = b[1](0..1)
  188. cmpeq_3_floats                 $58..60 = equal($58..60, $61..63)
  189. bitwise_and_int                $59 &= $60
  190. bitwise_and_int                $58 &= $59
  191. copy_slot_masked               $57 = Mask($58)
  192. label                          label 0x00000006
  193. load_condition_mask            CondMask = $12
  194. copy_slot_masked               [test_same_arrays].result = Mask($57)
  195. label                          label 0x00000005
  196. copy_slot_masked               $56 = Mask($57)
  197. label                          label 0x00000004
  198. load_condition_mask            CondMask = $10
  199. zero_slot_unmasked             $73 = 0
  200. merge_condition_mask           CondMask = $55 & $56
  201. branch_if_no_active_lanes      branch_if_no_active_lanes +54 (label 7 at #255)
  202. copy_slot_unmasked             $74 = EQ
  203. copy_slot_unmasked             eq = $74
  204. copy_slot_unmasked             $74 = F42
  205. copy_slot_unmasked             f1 = $74
  206. copy_slot_unmasked             $74 = NAN1
  207. copy_slot_unmasked             f2 = $74
  208. copy_slot_unmasked             $74 = NAN2
  209. copy_slot_unmasked             f3 = $74
  210. copy_constant                  $74 = colorGreen(0)
  211. copy_constant                  $75 = 0x3F800000 (1.0)
  212. add_float                      $74 += $75
  213. copy_slot_unmasked             one = $74
  214. zero_3_slots_unmasked          a[0](0..2) = 0
  215. copy_slot_unmasked             $74 = f1
  216. copy_slot_masked               a[0] = Mask($74)
  217. copy_slot_unmasked             $74 = f2
  218. copy_slot_masked               a[1] = Mask($74)
  219. copy_slot_unmasked             $74 = f3
  220. copy_slot_masked               a[2] = Mask($74)
  221. zero_3_slots_unmasked          b[0](0..2) = 0
  222. copy_slot_unmasked             $74 = f1
  223. copy_slot_unmasked             $75 = one
  224. mul_float                      $74 *= $75
  225. copy_slot_masked               b[0] = Mask($74)
  226. copy_slot_unmasked             $74 = f2
  227. copy_slot_unmasked             $75 = one
  228. mul_float                      $74 *= $75
  229. copy_slot_masked               b[1] = Mask($74)
  230. copy_slot_unmasked             $74 = f3
  231. copy_slot_unmasked             $75 = one
  232. mul_float                      $74 *= $75
  233. copy_slot_masked               b[2] = Mask($74)
  234. store_condition_mask           $57 = CondMask
  235. copy_slot_unmasked             $58 = eq
  236. copy_4_slots_unmasked          $74..77 = a[0](0..3)
  237. copy_2_slots_unmasked          $78..79 = b[1](0..1)
  238. cmpne_3_floats                 $74..76 = notEqual($74..76, $77..79)
  239. bitwise_or_int                 $75 |= $76
  240. bitwise_or_int                 $74 |= $75
  241. merge_condition_mask           CondMask = $57 & $58
  242. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 9 at #249)
  243. copy_4_slots_unmasked          $75..78 = a[0](0..3)
  244. copy_2_slots_unmasked          $79..80 = b[1](0..1)
  245. cmpeq_3_floats                 $75..77 = equal($75..77, $78..80)
  246. bitwise_and_int                $76 &= $77
  247. bitwise_and_int                $75 &= $76
  248. copy_slot_masked               $74 = Mask($75)
  249. label                          label 0x00000009
  250. load_condition_mask            CondMask = $57
  251. copy_slot_masked               [test_same_arrays].result = Mask($74)
  252. label                          label 0x00000008
  253. bitwise_not_int                $74 = ~$74
  254. copy_slot_masked               $73 = Mask($74)
  255. label                          label 0x00000007
  256. load_condition_mask            CondMask = $55
  257. zero_slot_unmasked             $29 = 0
  258. merge_condition_mask           CondMask = $72 & $73
  259. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (label 10 at #310)
  260. copy_slot_unmasked             $30 = NE
  261. copy_slot_unmasked             eq = $30
  262. copy_slot_unmasked             $30 = F42
  263. copy_slot_unmasked             f1 = $30
  264. copy_slot_unmasked             $30 = F43
  265. copy_slot_unmasked             f2 = $30
  266. copy_slot_unmasked             $30 = F44
  267. copy_slot_unmasked             f3 = $30
  268. copy_constant                  $30 = colorGreen(0)
  269. copy_constant                  $31 = 0x40000000 (2.0)
  270. add_float                      $30 += $31
  271. copy_slot_unmasked             two = $30
  272. zero_3_slots_unmasked          a[0](0..2) = 0
  273. copy_slot_unmasked             $30 = f1
  274. copy_slot_masked               a[0] = Mask($30)
  275. copy_slot_unmasked             $30 = f2
  276. copy_slot_masked               a[1] = Mask($30)
  277. copy_slot_unmasked             $30 = f3
  278. copy_slot_masked               a[2] = Mask($30)
  279. zero_3_slots_unmasked          b[0](0..2) = 0
  280. copy_slot_unmasked             $30 = f1
  281. copy_slot_unmasked             $31 = two
  282. mul_float                      $30 *= $31
  283. copy_slot_masked               b[0] = Mask($30)
  284. copy_slot_unmasked             $30 = f2
  285. copy_slot_unmasked             $31 = two
  286. mul_float                      $30 *= $31
  287. copy_slot_masked               b[1] = Mask($30)
  288. copy_slot_unmasked             $30 = f3
  289. copy_slot_masked               b[2] = Mask($30)
  290. store_condition_mask           $74 = CondMask
  291. copy_slot_unmasked             $75 = eq
  292. copy_4_slots_unmasked          $30..33 = a[0](0..3)
  293. copy_2_slots_unmasked          $34..35 = b[1](0..1)
  294. cmpne_3_floats                 $30..32 = notEqual($30..32, $33..35)
  295. bitwise_or_int                 $31 |= $32
  296. bitwise_or_int                 $30 |= $31
  297. merge_condition_mask           CondMask = $74 & $75
  298. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 12 at #305)
  299. copy_4_slots_unmasked          $31..34 = a[0](0..3)
  300. copy_2_slots_unmasked          $35..36 = b[1](0..1)
  301. cmpeq_3_floats                 $31..33 = equal($31..33, $34..36)
  302. bitwise_and_int                $32 &= $33
  303. bitwise_and_int                $31 &= $32
  304. copy_slot_masked               $30 = Mask($31)
  305. label                          label 0x0000000C
  306. load_condition_mask            CondMask = $74
  307. copy_slot_masked               [test_diff_arrays].result = Mask($30)
  308. label                          label 0x0000000B
  309. copy_slot_masked               $29 = Mask($30)
  310. label                          label 0x0000000A
  311. load_condition_mask            CondMask = $72
  312. zero_slot_unmasked             $47 = 0
  313. merge_condition_mask           CondMask = $28 & $29
  314. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (label 13 at #366)
  315. copy_slot_unmasked             $48 = EQ
  316. copy_slot_unmasked             eq = $48
  317. copy_slot_unmasked             $48 = F42
  318. copy_slot_unmasked             f1 = $48
  319. copy_slot_unmasked             $48 = F43
  320. copy_slot_unmasked             f2 = $48
  321. copy_slot_unmasked             $48 = F44
  322. copy_slot_unmasked             f3 = $48
  323. copy_constant                  $48 = colorGreen(0)
  324. copy_constant                  $49 = 0x40000000 (2.0)
  325. add_float                      $48 += $49
  326. copy_slot_unmasked             two = $48
  327. zero_3_slots_unmasked          a[0](0..2) = 0
  328. copy_slot_unmasked             $48 = f1
  329. copy_slot_masked               a[0] = Mask($48)
  330. copy_slot_unmasked             $48 = f2
  331. copy_slot_masked               a[1] = Mask($48)
  332. copy_slot_unmasked             $48 = f3
  333. copy_slot_masked               a[2] = Mask($48)
  334. zero_3_slots_unmasked          b[0](0..2) = 0
  335. copy_slot_unmasked             $48 = f1
  336. copy_slot_unmasked             $49 = two
  337. mul_float                      $48 *= $49
  338. copy_slot_masked               b[0] = Mask($48)
  339. copy_slot_unmasked             $48 = f2
  340. copy_slot_unmasked             $49 = two
  341. mul_float                      $48 *= $49
  342. copy_slot_masked               b[1] = Mask($48)
  343. copy_slot_unmasked             $48 = f3
  344. copy_slot_masked               b[2] = Mask($48)
  345. store_condition_mask           $30 = CondMask
  346. copy_slot_unmasked             $31 = eq
  347. copy_4_slots_unmasked          $48..51 = a[0](0..3)
  348. copy_2_slots_unmasked          $52..53 = b[1](0..1)
  349. cmpne_3_floats                 $48..50 = notEqual($48..50, $51..53)
  350. bitwise_or_int                 $49 |= $50
  351. bitwise_or_int                 $48 |= $49
  352. merge_condition_mask           CondMask = $30 & $31
  353. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 15 at #360)
  354. copy_4_slots_unmasked          $49..52 = a[0](0..3)
  355. copy_2_slots_unmasked          $53..54 = b[1](0..1)
  356. cmpeq_3_floats                 $49..51 = equal($49..51, $52..54)
  357. bitwise_and_int                $50 &= $51
  358. bitwise_and_int                $49 &= $50
  359. copy_slot_masked               $48 = Mask($49)
  360. label                          label 0x0000000F
  361. load_condition_mask            CondMask = $30
  362. copy_slot_masked               [test_diff_arrays].result = Mask($48)
  363. label                          label 0x0000000E
  364. bitwise_not_int                $48 = ~$48
  365. copy_slot_masked               $47 = Mask($48)
  366. label                          label 0x0000000D
  367. load_condition_mask            CondMask = $28
  368. zero_slot_unmasked             $38 = 0
  369. merge_condition_mask           CondMask = $46 & $47
  370. branch_if_no_active_lanes      branch_if_no_active_lanes +51 (label 16 at #421)
  371. copy_slot_unmasked             $39 = NE
  372. copy_slot_unmasked             eq = $39
  373. copy_slot_unmasked             $39 = NAN1
  374. copy_slot_unmasked             f1 = $39
  375. copy_slot_unmasked             $39 = ZM
  376. copy_slot_unmasked             f2 = $39
  377. copy_slot_unmasked             $39 = ZP
  378. copy_slot_unmasked             f3 = $39
  379. copy_constant                  $39 = colorGreen(0)
  380. copy_constant                  $40 = 0x40000000 (2.0)
  381. add_float                      $39 += $40
  382. copy_slot_unmasked             two = $39
  383. zero_3_slots_unmasked          a[0](0..2) = 0
  384. copy_slot_unmasked             $39 = f1
  385. copy_slot_masked               a[0] = Mask($39)
  386. copy_slot_unmasked             $39 = f2
  387. copy_slot_masked               a[1] = Mask($39)
  388. copy_slot_unmasked             $39 = f3
  389. copy_slot_masked               a[2] = Mask($39)
  390. zero_3_slots_unmasked          b[0](0..2) = 0
  391. copy_slot_unmasked             $39 = f1
  392. copy_slot_unmasked             $40 = two
  393. mul_float                      $39 *= $40
  394. copy_slot_masked               b[0] = Mask($39)
  395. copy_slot_unmasked             $39 = f2
  396. copy_slot_unmasked             $40 = two
  397. mul_float                      $39 *= $40
  398. copy_slot_masked               b[1] = Mask($39)
  399. copy_slot_unmasked             $39 = f3
  400. copy_slot_masked               b[2] = Mask($39)
  401. store_condition_mask           $48 = CondMask
  402. copy_slot_unmasked             $49 = eq
  403. copy_4_slots_unmasked          $39..42 = a[0](0..3)
  404. copy_2_slots_unmasked          $43..44 = b[1](0..1)
  405. cmpne_3_floats                 $39..41 = notEqual($39..41, $42..44)
  406. bitwise_or_int                 $40 |= $41
  407. bitwise_or_int                 $39 |= $40
  408. merge_condition_mask           CondMask = $48 & $49
  409. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 18 at #416)
  410. copy_4_slots_unmasked          $40..43 = a[0](0..3)
  411. copy_2_slots_unmasked          $44..45 = b[1](0..1)
  412. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
  413. bitwise_and_int                $41 &= $42
  414. bitwise_and_int                $40 &= $41
  415. copy_slot_masked               $39 = Mask($40)
  416. label                          label 0x00000012
  417. load_condition_mask            CondMask = $48
  418. copy_slot_masked               [test_diff_arrays].result = Mask($39)
  419. label                          label 0x00000011
  420. copy_slot_masked               $38 = Mask($39)
  421. label                          label 0x00000010
  422. load_condition_mask            CondMask = $46
  423. zero_slot_unmasked             $20 = 0
  424. merge_condition_mask           CondMask = $37 & $38
  425. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (label 19 at #477)
  426. copy_slot_unmasked             $21 = EQ
  427. copy_slot_unmasked             eq = $21
  428. copy_slot_unmasked             $21 = NAN1
  429. copy_slot_unmasked             f1 = $21
  430. copy_slot_unmasked             $21 = ZM
  431. copy_slot_unmasked             f2 = $21
  432. copy_slot_unmasked             $21 = ZP
  433. copy_slot_unmasked             f3 = $21
  434. copy_constant                  $21 = colorGreen(0)
  435. copy_constant                  $22 = 0x40000000 (2.0)
  436. add_float                      $21 += $22
  437. copy_slot_unmasked             two = $21
  438. zero_3_slots_unmasked          a[0](0..2) = 0
  439. copy_slot_unmasked             $21 = f1
  440. copy_slot_masked               a[0] = Mask($21)
  441. copy_slot_unmasked             $21 = f2
  442. copy_slot_masked               a[1] = Mask($21)
  443. copy_slot_unmasked             $21 = f3
  444. copy_slot_masked               a[2] = Mask($21)
  445. zero_3_slots_unmasked          b[0](0..2) = 0
  446. copy_slot_unmasked             $21 = f1
  447. copy_slot_unmasked             $22 = two
  448. mul_float                      $21 *= $22
  449. copy_slot_masked               b[0] = Mask($21)
  450. copy_slot_unmasked             $21 = f2
  451. copy_slot_unmasked             $22 = two
  452. mul_float                      $21 *= $22
  453. copy_slot_masked               b[1] = Mask($21)
  454. copy_slot_unmasked             $21 = f3
  455. copy_slot_masked               b[2] = Mask($21)
  456. store_condition_mask           $39 = CondMask
  457. copy_slot_unmasked             $40 = eq
  458. copy_4_slots_unmasked          $21..24 = a[0](0..3)
  459. copy_2_slots_unmasked          $25..26 = b[1](0..1)
  460. cmpne_3_floats                 $21..23 = notEqual($21..23, $24..26)
  461. bitwise_or_int                 $22 |= $23
  462. bitwise_or_int                 $21 |= $22
  463. merge_condition_mask           CondMask = $39 & $40
  464. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 21 at #471)
  465. copy_4_slots_unmasked          $22..25 = a[0](0..3)
  466. copy_2_slots_unmasked          $26..27 = b[1](0..1)
  467. cmpeq_3_floats                 $22..24 = equal($22..24, $25..27)
  468. bitwise_and_int                $23 &= $24
  469. bitwise_and_int                $22 &= $23
  470. copy_slot_masked               $21 = Mask($22)
  471. label                          label 0x00000015
  472. load_condition_mask            CondMask = $39
  473. copy_slot_masked               [test_diff_arrays].result = Mask($21)
  474. label                          label 0x00000014
  475. bitwise_not_int                $21 = ~$21
  476. copy_slot_masked               $20 = Mask($21)
  477. label                          label 0x00000013
  478. load_condition_mask            CondMask = $37
  479. copy_4_constants               $0..3 = colorRed
  480. merge_condition_mask           CondMask = $19 & $20
  481. copy_4_constants               $4..7 = colorGreen
  482. copy_4_slots_masked            $0..3 = Mask($4..7)
  483. label                          label 0x00000016
  484. load_condition_mask            CondMask = $19
  485. copy_4_slots_unmasked          [main].result = $0..3
  486. load_src                       src.rgba = [main].result
