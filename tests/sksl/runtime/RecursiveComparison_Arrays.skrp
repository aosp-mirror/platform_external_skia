    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. copy_constant                  $1 = colorGreen(2)
    5. div_float                      $0 /= $1
    6. copy_slot_unmasked             NAN1 = $0
    7. copy_constant                  $0 = colorGreen(2)
    8. copy_constant                  $1 = colorGreen(0)
    9. div_float                      $0 /= $1
   10. copy_slot_unmasked             NAN2 = $0
   11. copy_constant                  $0 = colorGreen(0)
   12. copy_constant                  $1 = colorGreen(2)
   13. mul_float                      $0 *= $1
   14. copy_slot_unmasked             ZP = $0
   15. zero_slot_unmasked             $0 = 0
   16. copy_constant                  $1 = colorGreen(0)
   17. sub_float                      $0 -= $1
   18. copy_constant                  $1 = colorGreen(2)
   19. mul_float                      $0 *= $1
   20. copy_slot_unmasked             ZM = $0
   21. copy_constant                  $0 = colorGreen(1)
   22. copy_constant                  $1 = 0x42280000 (42.0)
   23. mul_float                      $0 *= $1
   24. copy_slot_unmasked             F42 = $0
   25. copy_constant                  $0 = colorGreen(1)
   26. copy_constant                  $1 = 0x422C0000 (43.0)
   27. mul_float                      $0 *= $1
   28. copy_slot_unmasked             F43 = $0
   29. copy_constant                  $0 = colorGreen(1)
   30. copy_constant                  $1 = 0x42300000 (44.0)
   31. mul_float                      $0 *= $1
   32. copy_slot_unmasked             F44 = $0
   33. copy_constant                  EQ = 0xFFFFFFFF
   34. zero_slot_unmasked             NE = 0
   35. copy_constant                  $0 = colorGreen(0)
   36. copy_constant                  $1 = 0x3F800000 (1.0)
   37. add_float                      $0 += $1
   38. copy_slot_unmasked             _0_one = $0
   39. zero_3_slots_unmasked          _1_a[0], _1_a[1], _1_a[2] = 0
   40. copy_slot_unmasked             $0 = F42
   41. copy_slot_unmasked             _1_a[0] = $0
   42. copy_slot_unmasked             $0 = ZM
   43. copy_slot_unmasked             _1_a[1] = $0
   44. copy_slot_unmasked             $0 = ZP
   45. copy_slot_unmasked             _1_a[2] = $0
   46. zero_3_slots_unmasked          _2_b[0], _2_b[1], _2_b[2] = 0
   47. copy_slot_unmasked             $0 = F42
   48. copy_slot_unmasked             $1 = _0_one
   49. mul_float                      $0 *= $1
   50. copy_slot_unmasked             _2_b[0] = $0
   51. copy_slot_unmasked             $0 = ZM
   52. copy_slot_unmasked             $1 = _0_one
   53. mul_float                      $0 *= $1
   54. copy_slot_unmasked             _2_b[1] = $0
   55. copy_slot_unmasked             $0 = ZP
   56. copy_slot_unmasked             $1 = _0_one
   57. mul_float                      $0 *= $1
   58. copy_slot_unmasked             _2_b[2] = $0
   59. store_condition_mask           $19 = CondMask
   60. store_condition_mask           $37 = CondMask
   61. store_condition_mask           $46 = CondMask
   62. store_condition_mask           $28 = CondMask
   63. store_condition_mask           $72 = CondMask
   64. store_condition_mask           $55 = CondMask
   65. store_condition_mask           $10 = CondMask
   66. store_condition_mask           $64 = CondMask
   67. store_condition_mask           $8 = CondMask
   68. copy_slot_unmasked             $9 = EQ
   69. copy_4_slots_unmasked          $65..68 = _1_a[0], _1_a[1], _1_a[2], _2_b[0]
   70. copy_2_slots_unmasked          $69..70 = _2_b[1], _2_b[2]
   71. cmpne_3_floats                 $65..67 = notEqual($65..67, $68..70)
   72. bitwise_or_int                 $66 |= $67
   73. bitwise_or_int                 $65 |= $66
   74. merge_condition_mask           CondMask = $8 & $9
   75. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 0 at #82)
   76. copy_4_slots_unmasked          $66..69 = _1_a[0], _1_a[1], _1_a[2], _2_b[0]
   77. copy_2_slots_unmasked          $70..71 = _2_b[1], _2_b[2]
   78. cmpeq_3_floats                 $66..68 = equal($66..68, $69..71)
   79. bitwise_and_int                $67 &= $68
   80. bitwise_and_int                $66 &= $67
   81. copy_slot_masked               $65 = Mask($66)
   82. label                          label 0x00000000
   83. load_condition_mask            CondMask = $8
   84. zero_slot_unmasked             $11 = 0
   85. merge_condition_mask           CondMask = $64 & $65
   86. branch_if_no_active_lanes      branch_if_no_active_lanes +50 (label 1 at #136)
   87. copy_slot_unmasked             eq = NE
   88. copy_slot_unmasked             f1 = F42
   89. copy_slot_unmasked             f2 = ZM
   90. copy_slot_unmasked             f3 = ZP
   91. copy_constant                  $12 = colorGreen(0)
   92. copy_constant                  $13 = 0x3F800000 (1.0)
   93. add_float                      $12 += $13
   94. copy_slot_unmasked             one = $12
   95. zero_3_slots_unmasked          a[0], a[1], a[2] = 0
   96. copy_slot_unmasked             $12 = f1
   97. copy_slot_masked               a[0] = Mask($12)
   98. copy_slot_unmasked             $12 = f2
   99. copy_slot_masked               a[1] = Mask($12)
  100. copy_slot_unmasked             $12 = f3
  101. copy_slot_masked               a[2] = Mask($12)
  102. zero_3_slots_unmasked          b[0], b[1], b[2] = 0
  103. copy_slot_unmasked             $12 = f1
  104. copy_slot_unmasked             $13 = one
  105. mul_float                      $12 *= $13
  106. copy_slot_masked               b[0] = Mask($12)
  107. copy_slot_unmasked             $12 = f2
  108. copy_slot_unmasked             $13 = one
  109. mul_float                      $12 *= $13
  110. copy_slot_masked               b[1] = Mask($12)
  111. copy_slot_unmasked             $12 = f3
  112. copy_slot_unmasked             $13 = one
  113. mul_float                      $12 *= $13
  114. copy_slot_masked               b[2] = Mask($12)
  115. store_condition_mask           $66 = CondMask
  116. copy_slot_unmasked             $67 = eq
  117. copy_4_slots_unmasked          $12..15 = a[0], a[1], a[2], b[0]
  118. copy_2_slots_unmasked          $16..17 = b[1], b[2]
  119. cmpne_3_floats                 $12..14 = notEqual($12..14, $15..17)
  120. bitwise_or_int                 $13 |= $14
  121. bitwise_or_int                 $12 |= $13
  122. merge_condition_mask           CondMask = $66 & $67
  123. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 3 at #130)
  124. copy_4_slots_unmasked          $13..16 = a[0], a[1], a[2], b[0]
  125. copy_2_slots_unmasked          $17..18 = b[1], b[2]
  126. cmpeq_3_floats                 $13..15 = equal($13..15, $16..18)
  127. bitwise_and_int                $14 &= $15
  128. bitwise_and_int                $13 &= $14
  129. copy_slot_masked               $12 = Mask($13)
  130. label                          label 0x00000003
  131. load_condition_mask            CondMask = $66
  132. copy_slot_masked               [test_same_arrays].result = Mask($12)
  133. label                          label 0x00000002
  134. bitwise_not_int                $12 = ~$12
  135. copy_slot_masked               $11 = Mask($12)
  136. label                          label 0x00000001
  137. load_condition_mask            CondMask = $64
  138. zero_slot_unmasked             $56 = 0
  139. merge_condition_mask           CondMask = $10 & $11
  140. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (label 4 at #188)
  141. copy_slot_unmasked             eq = NE
  142. copy_slot_unmasked             f1 = F42
  143. copy_2_slots_unmasked          f2, f3 = NAN1, NAN2
  144. copy_constant                  $57 = colorGreen(0)
  145. copy_constant                  $58 = 0x3F800000 (1.0)
  146. add_float                      $57 += $58
  147. copy_slot_unmasked             one = $57
  148. zero_3_slots_unmasked          a[0], a[1], a[2] = 0
  149. copy_slot_unmasked             $57 = f1
  150. copy_slot_masked               a[0] = Mask($57)
  151. copy_slot_unmasked             $57 = f2
  152. copy_slot_masked               a[1] = Mask($57)
  153. copy_slot_unmasked             $57 = f3
  154. copy_slot_masked               a[2] = Mask($57)
  155. zero_3_slots_unmasked          b[0], b[1], b[2] = 0
  156. copy_slot_unmasked             $57 = f1
  157. copy_slot_unmasked             $58 = one
  158. mul_float                      $57 *= $58
  159. copy_slot_masked               b[0] = Mask($57)
  160. copy_slot_unmasked             $57 = f2
  161. copy_slot_unmasked             $58 = one
  162. mul_float                      $57 *= $58
  163. copy_slot_masked               b[1] = Mask($57)
  164. copy_slot_unmasked             $57 = f3
  165. copy_slot_unmasked             $58 = one
  166. mul_float                      $57 *= $58
  167. copy_slot_masked               b[2] = Mask($57)
  168. store_condition_mask           $12 = CondMask
  169. copy_slot_unmasked             $13 = eq
  170. copy_4_slots_unmasked          $57..60 = a[0], a[1], a[2], b[0]
  171. copy_2_slots_unmasked          $61..62 = b[1], b[2]
  172. cmpne_3_floats                 $57..59 = notEqual($57..59, $60..62)
  173. bitwise_or_int                 $58 |= $59
  174. bitwise_or_int                 $57 |= $58
  175. merge_condition_mask           CondMask = $12 & $13
  176. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 6 at #183)
  177. copy_4_slots_unmasked          $58..61 = a[0], a[1], a[2], b[0]
  178. copy_2_slots_unmasked          $62..63 = b[1], b[2]
  179. cmpeq_3_floats                 $58..60 = equal($58..60, $61..63)
  180. bitwise_and_int                $59 &= $60
  181. bitwise_and_int                $58 &= $59
  182. copy_slot_masked               $57 = Mask($58)
  183. label                          label 0x00000006
  184. load_condition_mask            CondMask = $12
  185. copy_slot_masked               [test_same_arrays].result = Mask($57)
  186. label                          label 0x00000005
  187. copy_slot_masked               $56 = Mask($57)
  188. label                          label 0x00000004
  189. load_condition_mask            CondMask = $10
  190. zero_slot_unmasked             $73 = 0
  191. merge_condition_mask           CondMask = $55 & $56
  192. branch_if_no_active_lanes      branch_if_no_active_lanes +49 (label 7 at #241)
  193. copy_slot_unmasked             eq = EQ
  194. copy_slot_unmasked             f1 = F42
  195. copy_2_slots_unmasked          f2, f3 = NAN1, NAN2
  196. copy_constant                  $74 = colorGreen(0)
  197. copy_constant                  $75 = 0x3F800000 (1.0)
  198. add_float                      $74 += $75
  199. copy_slot_unmasked             one = $74
  200. zero_3_slots_unmasked          a[0], a[1], a[2] = 0
  201. copy_slot_unmasked             $74 = f1
  202. copy_slot_masked               a[0] = Mask($74)
  203. copy_slot_unmasked             $74 = f2
  204. copy_slot_masked               a[1] = Mask($74)
  205. copy_slot_unmasked             $74 = f3
  206. copy_slot_masked               a[2] = Mask($74)
  207. zero_3_slots_unmasked          b[0], b[1], b[2] = 0
  208. copy_slot_unmasked             $74 = f1
  209. copy_slot_unmasked             $75 = one
  210. mul_float                      $74 *= $75
  211. copy_slot_masked               b[0] = Mask($74)
  212. copy_slot_unmasked             $74 = f2
  213. copy_slot_unmasked             $75 = one
  214. mul_float                      $74 *= $75
  215. copy_slot_masked               b[1] = Mask($74)
  216. copy_slot_unmasked             $74 = f3
  217. copy_slot_unmasked             $75 = one
  218. mul_float                      $74 *= $75
  219. copy_slot_masked               b[2] = Mask($74)
  220. store_condition_mask           $57 = CondMask
  221. copy_slot_unmasked             $58 = eq
  222. copy_4_slots_unmasked          $74..77 = a[0], a[1], a[2], b[0]
  223. copy_2_slots_unmasked          $78..79 = b[1], b[2]
  224. cmpne_3_floats                 $74..76 = notEqual($74..76, $77..79)
  225. bitwise_or_int                 $75 |= $76
  226. bitwise_or_int                 $74 |= $75
  227. merge_condition_mask           CondMask = $57 & $58
  228. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 9 at #235)
  229. copy_4_slots_unmasked          $75..78 = a[0], a[1], a[2], b[0]
  230. copy_2_slots_unmasked          $79..80 = b[1], b[2]
  231. cmpeq_3_floats                 $75..77 = equal($75..77, $78..80)
  232. bitwise_and_int                $76 &= $77
  233. bitwise_and_int                $75 &= $76
  234. copy_slot_masked               $74 = Mask($75)
  235. label                          label 0x00000009
  236. load_condition_mask            CondMask = $57
  237. copy_slot_masked               [test_same_arrays].result = Mask($74)
  238. label                          label 0x00000008
  239. bitwise_not_int                $74 = ~$74
  240. copy_slot_masked               $73 = Mask($74)
  241. label                          label 0x00000007
  242. load_condition_mask            CondMask = $55
  243. zero_slot_unmasked             $29 = 0
  244. merge_condition_mask           CondMask = $72 & $73
  245. branch_if_no_active_lanes      branch_if_no_active_lanes +45 (label 10 at #290)
  246. copy_slot_unmasked             eq₁ = NE
  247. copy_3_slots_unmasked          f1₁, f2₁, f3₁ = F42, F43, F44
  248. copy_constant                  $30 = colorGreen(0)
  249. copy_constant                  $31 = 0x40000000 (2.0)
  250. add_float                      $30 += $31
  251. copy_slot_unmasked             two = $30
  252. zero_3_slots_unmasked          a[0]₁, a[1]₁, a[2]₁ = 0
  253. copy_slot_unmasked             $30 = f1₁
  254. copy_slot_masked               a[0]₁ = Mask($30)
  255. copy_slot_unmasked             $30 = f2₁
  256. copy_slot_masked               a[1]₁ = Mask($30)
  257. copy_slot_unmasked             $30 = f3₁
  258. copy_slot_masked               a[2]₁ = Mask($30)
  259. zero_3_slots_unmasked          b[0]₁, b[1]₁, b[2]₁ = 0
  260. copy_slot_unmasked             $30 = f1₁
  261. copy_slot_unmasked             $31 = two
  262. mul_float                      $30 *= $31
  263. copy_slot_masked               b[0]₁ = Mask($30)
  264. copy_slot_unmasked             $30 = f2₁
  265. copy_slot_unmasked             $31 = two
  266. mul_float                      $30 *= $31
  267. copy_slot_masked               b[1]₁ = Mask($30)
  268. copy_slot_unmasked             $30 = f3₁
  269. copy_slot_masked               b[2]₁ = Mask($30)
  270. store_condition_mask           $74 = CondMask
  271. copy_slot_unmasked             $75 = eq₁
  272. copy_4_slots_unmasked          $30..33 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  273. copy_2_slots_unmasked          $34..35 = b[1]₁, b[2]₁
  274. cmpne_3_floats                 $30..32 = notEqual($30..32, $33..35)
  275. bitwise_or_int                 $31 |= $32
  276. bitwise_or_int                 $30 |= $31
  277. merge_condition_mask           CondMask = $74 & $75
  278. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 12 at #285)
  279. copy_4_slots_unmasked          $31..34 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  280. copy_2_slots_unmasked          $35..36 = b[1]₁, b[2]₁
  281. cmpeq_3_floats                 $31..33 = equal($31..33, $34..36)
  282. bitwise_and_int                $32 &= $33
  283. bitwise_and_int                $31 &= $32
  284. copy_slot_masked               $30 = Mask($31)
  285. label                          label 0x0000000C
  286. load_condition_mask            CondMask = $74
  287. copy_slot_masked               [test_diff_arrays].result = Mask($30)
  288. label                          label 0x0000000B
  289. copy_slot_masked               $29 = Mask($30)
  290. label                          label 0x0000000A
  291. load_condition_mask            CondMask = $72
  292. zero_slot_unmasked             $47 = 0
  293. merge_condition_mask           CondMask = $28 & $29
  294. branch_if_no_active_lanes      branch_if_no_active_lanes +46 (label 13 at #340)
  295. copy_slot_unmasked             eq₁ = EQ
  296. copy_3_slots_unmasked          f1₁, f2₁, f3₁ = F42, F43, F44
  297. copy_constant                  $48 = colorGreen(0)
  298. copy_constant                  $49 = 0x40000000 (2.0)
  299. add_float                      $48 += $49
  300. copy_slot_unmasked             two = $48
  301. zero_3_slots_unmasked          a[0]₁, a[1]₁, a[2]₁ = 0
  302. copy_slot_unmasked             $48 = f1₁
  303. copy_slot_masked               a[0]₁ = Mask($48)
  304. copy_slot_unmasked             $48 = f2₁
  305. copy_slot_masked               a[1]₁ = Mask($48)
  306. copy_slot_unmasked             $48 = f3₁
  307. copy_slot_masked               a[2]₁ = Mask($48)
  308. zero_3_slots_unmasked          b[0]₁, b[1]₁, b[2]₁ = 0
  309. copy_slot_unmasked             $48 = f1₁
  310. copy_slot_unmasked             $49 = two
  311. mul_float                      $48 *= $49
  312. copy_slot_masked               b[0]₁ = Mask($48)
  313. copy_slot_unmasked             $48 = f2₁
  314. copy_slot_unmasked             $49 = two
  315. mul_float                      $48 *= $49
  316. copy_slot_masked               b[1]₁ = Mask($48)
  317. copy_slot_unmasked             $48 = f3₁
  318. copy_slot_masked               b[2]₁ = Mask($48)
  319. store_condition_mask           $30 = CondMask
  320. copy_slot_unmasked             $31 = eq₁
  321. copy_4_slots_unmasked          $48..51 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  322. copy_2_slots_unmasked          $52..53 = b[1]₁, b[2]₁
  323. cmpne_3_floats                 $48..50 = notEqual($48..50, $51..53)
  324. bitwise_or_int                 $49 |= $50
  325. bitwise_or_int                 $48 |= $49
  326. merge_condition_mask           CondMask = $30 & $31
  327. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 15 at #334)
  328. copy_4_slots_unmasked          $49..52 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  329. copy_2_slots_unmasked          $53..54 = b[1]₁, b[2]₁
  330. cmpeq_3_floats                 $49..51 = equal($49..51, $52..54)
  331. bitwise_and_int                $50 &= $51
  332. bitwise_and_int                $49 &= $50
  333. copy_slot_masked               $48 = Mask($49)
  334. label                          label 0x0000000F
  335. load_condition_mask            CondMask = $30
  336. copy_slot_masked               [test_diff_arrays].result = Mask($48)
  337. label                          label 0x0000000E
  338. bitwise_not_int                $48 = ~$48
  339. copy_slot_masked               $47 = Mask($48)
  340. label                          label 0x0000000D
  341. load_condition_mask            CondMask = $28
  342. zero_slot_unmasked             $38 = 0
  343. merge_condition_mask           CondMask = $46 & $47
  344. branch_if_no_active_lanes      branch_if_no_active_lanes +47 (label 16 at #391)
  345. copy_slot_unmasked             eq₁ = NE
  346. copy_slot_unmasked             f1₁ = NAN1
  347. copy_slot_unmasked             f2₁ = ZM
  348. copy_slot_unmasked             f3₁ = ZP
  349. copy_constant                  $39 = colorGreen(0)
  350. copy_constant                  $40 = 0x40000000 (2.0)
  351. add_float                      $39 += $40
  352. copy_slot_unmasked             two = $39
  353. zero_3_slots_unmasked          a[0]₁, a[1]₁, a[2]₁ = 0
  354. copy_slot_unmasked             $39 = f1₁
  355. copy_slot_masked               a[0]₁ = Mask($39)
  356. copy_slot_unmasked             $39 = f2₁
  357. copy_slot_masked               a[1]₁ = Mask($39)
  358. copy_slot_unmasked             $39 = f3₁
  359. copy_slot_masked               a[2]₁ = Mask($39)
  360. zero_3_slots_unmasked          b[0]₁, b[1]₁, b[2]₁ = 0
  361. copy_slot_unmasked             $39 = f1₁
  362. copy_slot_unmasked             $40 = two
  363. mul_float                      $39 *= $40
  364. copy_slot_masked               b[0]₁ = Mask($39)
  365. copy_slot_unmasked             $39 = f2₁
  366. copy_slot_unmasked             $40 = two
  367. mul_float                      $39 *= $40
  368. copy_slot_masked               b[1]₁ = Mask($39)
  369. copy_slot_unmasked             $39 = f3₁
  370. copy_slot_masked               b[2]₁ = Mask($39)
  371. store_condition_mask           $48 = CondMask
  372. copy_slot_unmasked             $49 = eq₁
  373. copy_4_slots_unmasked          $39..42 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  374. copy_2_slots_unmasked          $43..44 = b[1]₁, b[2]₁
  375. cmpne_3_floats                 $39..41 = notEqual($39..41, $42..44)
  376. bitwise_or_int                 $40 |= $41
  377. bitwise_or_int                 $39 |= $40
  378. merge_condition_mask           CondMask = $48 & $49
  379. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 18 at #386)
  380. copy_4_slots_unmasked          $40..43 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  381. copy_2_slots_unmasked          $44..45 = b[1]₁, b[2]₁
  382. cmpeq_3_floats                 $40..42 = equal($40..42, $43..45)
  383. bitwise_and_int                $41 &= $42
  384. bitwise_and_int                $40 &= $41
  385. copy_slot_masked               $39 = Mask($40)
  386. label                          label 0x00000012
  387. load_condition_mask            CondMask = $48
  388. copy_slot_masked               [test_diff_arrays].result = Mask($39)
  389. label                          label 0x00000011
  390. copy_slot_masked               $38 = Mask($39)
  391. label                          label 0x00000010
  392. load_condition_mask            CondMask = $46
  393. zero_slot_unmasked             $20 = 0
  394. merge_condition_mask           CondMask = $37 & $38
  395. branch_if_no_active_lanes      branch_if_no_active_lanes +48 (label 19 at #443)
  396. copy_slot_unmasked             eq₁ = EQ
  397. copy_slot_unmasked             f1₁ = NAN1
  398. copy_slot_unmasked             f2₁ = ZM
  399. copy_slot_unmasked             f3₁ = ZP
  400. copy_constant                  $21 = colorGreen(0)
  401. copy_constant                  $22 = 0x40000000 (2.0)
  402. add_float                      $21 += $22
  403. copy_slot_unmasked             two = $21
  404. zero_3_slots_unmasked          a[0]₁, a[1]₁, a[2]₁ = 0
  405. copy_slot_unmasked             $21 = f1₁
  406. copy_slot_masked               a[0]₁ = Mask($21)
  407. copy_slot_unmasked             $21 = f2₁
  408. copy_slot_masked               a[1]₁ = Mask($21)
  409. copy_slot_unmasked             $21 = f3₁
  410. copy_slot_masked               a[2]₁ = Mask($21)
  411. zero_3_slots_unmasked          b[0]₁, b[1]₁, b[2]₁ = 0
  412. copy_slot_unmasked             $21 = f1₁
  413. copy_slot_unmasked             $22 = two
  414. mul_float                      $21 *= $22
  415. copy_slot_masked               b[0]₁ = Mask($21)
  416. copy_slot_unmasked             $21 = f2₁
  417. copy_slot_unmasked             $22 = two
  418. mul_float                      $21 *= $22
  419. copy_slot_masked               b[1]₁ = Mask($21)
  420. copy_slot_unmasked             $21 = f3₁
  421. copy_slot_masked               b[2]₁ = Mask($21)
  422. store_condition_mask           $39 = CondMask
  423. copy_slot_unmasked             $40 = eq₁
  424. copy_4_slots_unmasked          $21..24 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  425. copy_2_slots_unmasked          $25..26 = b[1]₁, b[2]₁
  426. cmpne_3_floats                 $21..23 = notEqual($21..23, $24..26)
  427. bitwise_or_int                 $22 |= $23
  428. bitwise_or_int                 $21 |= $22
  429. merge_condition_mask           CondMask = $39 & $40
  430. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (label 21 at #437)
  431. copy_4_slots_unmasked          $22..25 = a[0]₁, a[1]₁, a[2]₁, b[0]₁
  432. copy_2_slots_unmasked          $26..27 = b[1]₁, b[2]₁
  433. cmpeq_3_floats                 $22..24 = equal($22..24, $25..27)
  434. bitwise_and_int                $23 &= $24
  435. bitwise_and_int                $22 &= $23
  436. copy_slot_masked               $21 = Mask($22)
  437. label                          label 0x00000015
  438. load_condition_mask            CondMask = $39
  439. copy_slot_masked               [test_diff_arrays].result = Mask($21)
  440. label                          label 0x00000014
  441. bitwise_not_int                $21 = ~$21
  442. copy_slot_masked               $20 = Mask($21)
  443. label                          label 0x00000013
  444. load_condition_mask            CondMask = $37
  445. copy_4_constants               $0..3 = colorRed
  446. merge_condition_mask           CondMask = $19 & $20
  447. copy_4_constants               $4..7 = colorGreen
  448. copy_4_slots_masked            $0..3 = Mask($4..7)
  449. label                          label 0x00000016
  450. load_condition_mask            CondMask = $19
  451. copy_4_slots_unmasked          [main].result = $0..3
  452. load_src                       src.rgba = [main].result
