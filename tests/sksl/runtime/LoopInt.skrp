    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x0000000A (1.401298e-44)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. cast_to_int_from_float         $0 = FloatToInt($0)
   11. copy_constant                  $1 = 0x00000005 (7.006492e-45)
   12. mul_int                        $0 *= $1
   13. copy_slot_unmasked             five = $0
   14. store_condition_mask           $20 = CondMask
   15. store_condition_mask           $40 = CondMask
   16. store_condition_mask           $50 = CondMask
   17. store_condition_mask           $30 = CondMask
   18. store_condition_mask           $76 = CondMask
   19. store_condition_mask           $60 = CondMask
   20. store_condition_mask           $14 = CondMask
   21. store_condition_mask           $70 = CondMask
   22. store_condition_mask           $8 = CondMask
   23. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (label 0 at #55)
   24. store_return_mask              $9 = RetMask
   25. copy_slot_unmasked             five₁ = five
   26. copy_slot_unmasked             i = kZero
   27. store_loop_mask                $10 = LoopMask
   28. jump                           jump +15 (label 1 at #43)
   29. label                          label 0x00000002
   30. store_condition_mask           $11 = CondMask
   31. copy_slot_unmasked             $12 = i
   32. copy_slot_unmasked             $13 = five₁
   33. cmpeq_int                      $12 = equal($12, $13)
   34. merge_condition_mask           CondMask = $11 & $12
   35. copy_slot_unmasked             $13 = i
   36. copy_slot_masked               [return_loop].result = Mask($13)
   37. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   38. load_condition_mask            CondMask = $11
   39. copy_slot_unmasked             $11 = i
   40. copy_constant                  $12 = 0x00000001 (1.401298e-45)
   41. add_int                        $11 += $12
   42. copy_slot_masked               i = Mask($11)
   43. label                          label 0x00000001
   44. copy_slot_unmasked             $11 = i
   45. copy_constant                  $12 = 0x0000000A (1.401298e-44)
   46. cmplt_int                      $11 = lessThan($11, $12)
   47. merge_loop_mask                LoopMask &= $11
   48. stack_rewind
   49. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 2 at #29)
   50. load_loop_mask                 LoopMask = $10
   51. zero_slot_unmasked             $10 = 0
   52. copy_slot_masked               [return_loop].result = Mask($10)
   53. load_return_mask               RetMask = $9
   54. copy_slot_unmasked             $9 = [return_loop].result
   55. label                          label 0x00000000
   56. copy_constant                  $10 = 0x00000005 (7.006492e-45)
   57. cmpeq_int                      $9 = equal($9, $10)
   58. zero_slot_unmasked             $71 = 0
   59. merge_condition_mask           CondMask = $8 & $9
   60. branch_if_no_active_lanes      branch_if_no_active_lanes +38 (label 3 at #98)
   61. copy_slot_unmasked             five₂ = five
   62. zero_2_slots_unmasked          sum, i₁ = 0
   63. store_loop_mask                $72 = LoopMask
   64. jump                           jump +20 (label 5 at #84)
   65. label                          label 0x00000006
   66. zero_slot_unmasked             [temporary 0] = 0
   67. store_condition_mask           $73 = CondMask
   68. copy_slot_unmasked             $74 = i₁
   69. copy_slot_unmasked             $75 = five₂
   70. cmplt_int                      $74 = lessThan($74, $75)
   71. merge_condition_mask           CondMask = $73 & $74
   72. copy_constant                  $75 = 0xFFFFFFFF
   73. copy_slot_masked               [temporary 0] = Mask($75)
   74. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   75. load_condition_mask            CondMask = $73
   76. copy_2_slots_unmasked          $73..74 = sum, i₁
   77. add_int                        $73 += $74
   78. copy_slot_masked               sum = Mask($73)
   79. reenable_loop_mask             LoopMask |= [temporary 0]
   80. copy_slot_unmasked             $73 = i₁
   81. copy_constant                  $74 = 0x00000001 (1.401298e-45)
   82. add_int                        $73 += $74
   83. copy_slot_masked               i₁ = Mask($73)
   84. label                          label 0x00000005
   85. copy_slot_unmasked             $73 = i₁
   86. copy_slot_unmasked             $74 = kTen
   87. cmplt_int                      $73 = lessThan($73, $74)
   88. merge_loop_mask                LoopMask &= $73
   89. stack_rewind
   90. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 6 at #65)
   91. load_loop_mask                 LoopMask = $72
   92. copy_slot_unmasked             $72 = sum
   93. copy_slot_masked               [continue_loop].result = Mask($72)
   94. label                          label 0x00000004
   95. copy_constant                  $73 = 0x00000023 (4.904545e-44)
   96. cmpeq_int                      $72 = equal($72, $73)
   97. copy_slot_masked               $71 = Mask($72)
   98. label                          label 0x00000003
   99. load_condition_mask            CondMask = $8
  100. zero_slot_unmasked             $15 = 0
  101. merge_condition_mask           CondMask = $70 & $71
  102. branch_if_no_active_lanes      branch_if_no_active_lanes +37 (label 7 at #139)
  103. copy_constant                  five₃ = 0x00000005 (7.006492e-45)
  104. zero_slot_unmasked             sum₁ = 0
  105. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  106. zero_slot_unmasked             i₂ = 0
  107. store_loop_mask                $16 = LoopMask
  108. jump                           jump +17 (label 9 at #125)
  109. label                          label 0x0000000A
  110. store_condition_mask           $17 = CondMask
  111. copy_slot_unmasked             $18 = five₃
  112. copy_slot_unmasked             $19 = i₂
  113. cmplt_int                      $18 = lessThan($18, $19)
  114. merge_condition_mask           CondMask = $17 & $18
  115. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  116. load_condition_mask            CondMask = $17
  117. copy_slot_unmasked             $17 = sum₁
  118. copy_slot_unmasked             $18 = i₂
  119. add_int                        $17 += $18
  120. copy_slot_masked               sum₁ = Mask($17)
  121. copy_slot_unmasked             $17 = i₂
  122. copy_slot_unmasked             $18 = kOne
  123. add_int                        $17 += $18
  124. copy_slot_masked               i₂ = Mask($17)
  125. label                          label 0x00000009
  126. copy_slot_unmasked             $17 = i₂
  127. copy_constant                  $18 = 0x0000000A (1.401298e-44)
  128. cmplt_int                      $17 = lessThan($17, $18)
  129. merge_loop_mask                LoopMask &= $17
  130. stack_rewind
  131. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 10 at #109)
  132. load_loop_mask                 LoopMask = $16
  133. copy_slot_unmasked             $16 = sum₁
  134. copy_slot_masked               [break_loop].result = Mask($16)
  135. label                          label 0x00000008
  136. copy_constant                  $17 = 0x0000000F (2.101948e-44)
  137. cmpeq_int                      $16 = equal($16, $17)
  138. copy_slot_masked               $15 = Mask($16)
  139. label                          label 0x00000007
  140. load_condition_mask            CondMask = $70
  141. zero_slot_unmasked             $61 = 0
  142. merge_condition_mask           CondMask = $14 & $15
  143. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 11 at #172)
  144. copy_constant                  $62 = 0x00000009 (1.261169e-44)
  145. swizzle_4                      $62..65 = ($62..65).xxxx
  146. copy_4_slots_unmasked          result = $62..65
  147. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 13 at #160)
  148. copy_constant                  i₃ = 0x00000001 (1.401298e-45)
  149. label                          label 0x0000000E
  150. copy_4_slots_unmasked          $62..65 = result(1..3), i₃
  151. copy_4_slots_masked            result = Mask($62..65)
  152. copy_slot_unmasked             $62 = i₃
  153. copy_constant                  $63 = 0x00000001 (1.401298e-45)
  154. add_int                        $62 += $63
  155. copy_slot_masked               i₃ = Mask($62)
  156. copy_constant                  $63 = 0x00000003 (4.203895e-45)
  157. cmple_int                      $62 = lessThanEqual($62, $63)
  158. stack_rewind
  159. branch_if_no_active_lanes_eq   branch -10 (label 14 at #149) if no lanes of $62 == 0x00000000 (0.0)
  160. label                          label 0x0000000D
  161. copy_4_slots_unmasked          $62..65 = result
  162. copy_constant                  $66 = 0x00000009 (1.261169e-44)
  163. copy_constant                  $67 = 0x00000001 (1.401298e-45)
  164. copy_constant                  $68 = 0x00000002 (2.802597e-45)
  165. copy_constant                  $69 = 0x00000003 (4.203895e-45)
  166. cmpeq_4_ints                   $62..65 = equal($62..65, $66..69)
  167. bitwise_and_2_ints             $62..63 &= $64..65
  168. bitwise_and_int                $62 &= $63
  169. copy_slot_masked               [loop_operator_le].result = Mask($62)
  170. label                          label 0x0000000C
  171. copy_slot_masked               $61 = Mask($62)
  172. label                          label 0x0000000B
  173. load_condition_mask            CondMask = $14
  174. zero_slot_unmasked             $77 = 0
  175. merge_condition_mask           CondMask = $60 & $61
  176. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 15 at #205)
  177. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  178. swizzle_4                      $78..81 = ($78..81).xxxx
  179. copy_4_slots_unmasked          result₁ = $78..81
  180. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 17 at #193)
  181. copy_constant                  i₄ = 0x00000001 (1.401298e-45)
  182. label                          label 0x00000012
  183. copy_4_slots_unmasked          $78..81 = result₁(1..3), i₄
  184. copy_4_slots_masked            result₁ = Mask($78..81)
  185. copy_slot_unmasked             $78 = i₄
  186. copy_constant                  $79 = 0x00000001 (1.401298e-45)
  187. add_int                        $78 += $79
  188. copy_slot_masked               i₄ = Mask($78)
  189. copy_constant                  $79 = 0x00000004 (5.605194e-45)
  190. cmplt_int                      $78 = lessThan($78, $79)
  191. stack_rewind
  192. branch_if_no_active_lanes_eq   branch -10 (label 18 at #182) if no lanes of $78 == 0x00000000 (0.0)
  193. label                          label 0x00000011
  194. copy_4_slots_unmasked          $78..81 = result₁
  195. copy_constant                  $82 = 0x00000009 (1.261169e-44)
  196. copy_constant                  $83 = 0x00000001 (1.401298e-45)
  197. copy_constant                  $84 = 0x00000002 (2.802597e-45)
  198. copy_constant                  $85 = 0x00000003 (4.203895e-45)
  199. cmpeq_4_ints                   $78..81 = equal($78..81, $82..85)
  200. bitwise_and_2_ints             $78..79 &= $80..81
  201. bitwise_and_int                $78 &= $79
  202. copy_slot_masked               [loop_operator_lt].result = Mask($78)
  203. label                          label 0x00000010
  204. copy_slot_masked               $77 = Mask($78)
  205. label                          label 0x0000000F
  206. load_condition_mask            CondMask = $60
  207. zero_slot_unmasked             $31 = 0
  208. merge_condition_mask           CondMask = $76 & $77
  209. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 19 at #239)
  210. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  211. swizzle_4                      $32..35 = ($32..35).xxxx
  212. copy_4_slots_unmasked          result₂ = $32..35
  213. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 21 at #227)
  214. copy_constant                  i₅ = 0x00000003 (4.203895e-45)
  215. label                          label 0x00000016
  216. copy_4_slots_unmasked          $32..35 = result₂(1..3), i₅
  217. copy_4_slots_masked            result₂ = Mask($32..35)
  218. copy_slot_unmasked             $32 = i₅
  219. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  220. sub_int                        $32 -= $33
  221. copy_slot_masked               i₅ = Mask($32)
  222. copy_constant                  $32 = 0x00000001 (1.401298e-45)
  223. copy_slot_unmasked             $33 = i₅
  224. cmple_int                      $32 = lessThanEqual($32, $33)
  225. stack_rewind
  226. branch_if_no_active_lanes_eq   branch -11 (label 22 at #215) if no lanes of $32 == 0x00000000 (0.0)
  227. label                          label 0x00000015
  228. copy_4_slots_unmasked          $32..35 = result₂
  229. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  230. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  231. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  232. copy_constant                  $39 = 0x00000001 (1.401298e-45)
  233. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  234. bitwise_and_2_ints             $32..33 &= $34..35
  235. bitwise_and_int                $32 &= $33
  236. copy_slot_masked               [loop_operator_ge].result = Mask($32)
  237. label                          label 0x00000014
  238. copy_slot_masked               $31 = Mask($32)
  239. label                          label 0x00000013
  240. load_condition_mask            CondMask = $76
  241. zero_slot_unmasked             $51 = 0
  242. merge_condition_mask           CondMask = $30 & $31
  243. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 23 at #273)
  244. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  245. swizzle_4                      $52..55 = ($52..55).xxxx
  246. copy_4_slots_unmasked          result₃ = $52..55
  247. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 25 at #261)
  248. copy_constant                  i₆ = 0x00000003 (4.203895e-45)
  249. label                          label 0x0000001A
  250. copy_4_slots_unmasked          $52..55 = result₃(1..3), i₆
  251. copy_4_slots_masked            result₃ = Mask($52..55)
  252. copy_slot_unmasked             $52 = i₆
  253. copy_constant                  $53 = 0x00000001 (1.401298e-45)
  254. sub_int                        $52 -= $53
  255. copy_slot_masked               i₆ = Mask($52)
  256. zero_slot_unmasked             $52 = 0
  257. copy_slot_unmasked             $53 = i₆
  258. cmplt_int                      $52 = lessThan($52, $53)
  259. stack_rewind
  260. branch_if_no_active_lanes_eq   branch -11 (label 26 at #249) if no lanes of $52 == 0x00000000 (0.0)
  261. label                          label 0x00000019
  262. copy_4_slots_unmasked          $52..55 = result₃
  263. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  264. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  265. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  266. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  267. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  268. bitwise_and_2_ints             $52..53 &= $54..55
  269. bitwise_and_int                $52 &= $53
  270. copy_slot_masked               [loop_operator_gt].result = Mask($52)
  271. label                          label 0x00000018
  272. copy_slot_masked               $51 = Mask($52)
  273. label                          label 0x00000017
  274. load_condition_mask            CondMask = $30
  275. zero_slot_unmasked             $41 = 0
  276. merge_condition_mask           CondMask = $50 & $51
  277. branch_if_no_active_lanes      branch_if_no_active_lanes +21 (label 27 at #298)
  278. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  279. swizzle_4                      $42..45 = ($42..45).xxxx
  280. copy_4_slots_unmasked          result₄ = $42..45
  281. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 29 at #286)
  282. copy_constant                  i₇ = 0x00000001 (1.401298e-45)
  283. label                          label 0x0000001E
  284. copy_4_slots_unmasked          $42..45 = result₄(1..3), i₇
  285. copy_4_slots_masked            result₄ = Mask($42..45)
  286. label                          label 0x0000001D
  287. copy_4_slots_unmasked          $42..45 = result₄
  288. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  289. copy_constant                  $47 = 0x00000009 (1.261169e-44)
  290. copy_constant                  $48 = 0x00000009 (1.261169e-44)
  291. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  292. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  293. bitwise_and_2_ints             $42..43 &= $44..45
  294. bitwise_and_int                $42 &= $43
  295. copy_slot_masked               [loop_operator_eq].result = Mask($42)
  296. label                          label 0x0000001C
  297. copy_slot_masked               $41 = Mask($42)
  298. label                          label 0x0000001B
  299. load_condition_mask            CondMask = $50
  300. zero_slot_unmasked             $21 = 0
  301. merge_condition_mask           CondMask = $40 & $41
  302. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 31 at #331)
  303. copy_constant                  $22 = 0x00000009 (1.261169e-44)
  304. swizzle_4                      $22..25 = ($22..25).xxxx
  305. copy_4_slots_unmasked          result₅ = $22..25
  306. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 33 at #319)
  307. copy_constant                  i₈ = 0x00000001 (1.401298e-45)
  308. label                          label 0x00000022
  309. copy_4_slots_unmasked          $22..25 = result₅(1..3), i₈
  310. copy_4_slots_masked            result₅ = Mask($22..25)
  311. copy_slot_unmasked             $22 = i₈
  312. copy_constant                  $23 = 0x00000001 (1.401298e-45)
  313. add_int                        $22 += $23
  314. copy_slot_masked               i₈ = Mask($22)
  315. copy_constant                  $23 = 0x00000004 (5.605194e-45)
  316. cmpne_int                      $22 = notEqual($22, $23)
  317. stack_rewind
  318. branch_if_no_active_lanes_eq   branch -10 (label 34 at #308) if no lanes of $22 == 0x00000000 (0.0)
  319. label                          label 0x00000021
  320. copy_4_slots_unmasked          $22..25 = result₅
  321. copy_constant                  $26 = 0x00000009 (1.261169e-44)
  322. copy_constant                  $27 = 0x00000001 (1.401298e-45)
  323. copy_constant                  $28 = 0x00000002 (2.802597e-45)
  324. copy_constant                  $29 = 0x00000003 (4.203895e-45)
  325. cmpeq_4_ints                   $22..25 = equal($22..25, $26..29)
  326. bitwise_and_2_ints             $22..23 &= $24..25
  327. bitwise_and_int                $22 &= $23
  328. copy_slot_masked               [loop_operator_ne].result = Mask($22)
  329. label                          label 0x00000020
  330. copy_slot_masked               $21 = Mask($22)
  331. label                          label 0x0000001F
  332. load_condition_mask            CondMask = $40
  333. copy_4_constants               $0..3 = colorRed
  334. merge_condition_mask           CondMask = $20 & $21
  335. copy_4_constants               $4..7 = colorGreen
  336. copy_4_slots_masked            $0..3 = Mask($4..7)
  337. label                          label 0x00000023
  338. load_condition_mask            CondMask = $20
  339. copy_4_slots_unmasked          [main].result = $0..3
  340. load_src                       src.rgba = [main].result
