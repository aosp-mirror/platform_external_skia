    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x0000000A (1.401298e-44)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. cast_to_int_from_float         $0 = FloatToInt($0)
   11. copy_constant                  $1 = 0x00000005 (7.006492e-45)
   12. mul_int                        $0 *= $1
   13. copy_slot_unmasked             five = $0
   14. store_condition_mask           $20 = CondMask
   15. store_condition_mask           $40 = CondMask
   16. store_condition_mask           $50 = CondMask
   17. store_condition_mask           $30 = CondMask
   18. store_condition_mask           $76 = CondMask
   19. store_condition_mask           $60 = CondMask
   20. store_condition_mask           $14 = CondMask
   21. store_condition_mask           $70 = CondMask
   22. store_condition_mask           $8 = CondMask
   23. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (label 0 at #57)
   24. store_return_mask              $9 = RetMask
   25. copy_slot_unmasked             $10 = five
   26. copy_slot_unmasked             five = $10
   27. copy_slot_unmasked             $10 = kZero
   28. copy_slot_unmasked             i = $10
   29. store_loop_mask                $10 = LoopMask
   30. jump                           jump +15 (label 1 at #45)
   31. label                          label 0x00000002
   32. store_condition_mask           $11 = CondMask
   33. copy_slot_unmasked             $12 = i
   34. copy_slot_unmasked             $13 = five
   35. cmpeq_int                      $12 = equal($12, $13)
   36. merge_condition_mask           CondMask = $11 & $12
   37. copy_slot_unmasked             $13 = i
   38. copy_slot_masked               [return_loop].result = Mask($13)
   39. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   40. load_condition_mask            CondMask = $11
   41. copy_slot_unmasked             $11 = i
   42. copy_constant                  $12 = 0x00000001 (1.401298e-45)
   43. add_int                        $11 += $12
   44. copy_slot_masked               i = Mask($11)
   45. label                          label 0x00000001
   46. copy_slot_unmasked             $11 = i
   47. copy_constant                  $12 = 0x0000000A (1.401298e-44)
   48. cmplt_int                      $11 = lessThan($11, $12)
   49. merge_loop_mask                LoopMask &= $11
   50. stack_rewind
   51. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 2 at #31)
   52. load_loop_mask                 LoopMask = $10
   53. zero_slot_unmasked             $10 = 0
   54. copy_slot_masked               [return_loop].result = Mask($10)
   55. load_return_mask               RetMask = $9
   56. copy_slot_unmasked             $9 = [return_loop].result
   57. label                          label 0x00000000
   58. copy_constant                  $10 = 0x00000005 (7.006492e-45)
   59. cmpeq_int                      $9 = equal($9, $10)
   60. zero_slot_unmasked             $71 = 0
   61. merge_condition_mask           CondMask = $8 & $9
   62. branch_if_no_active_lanes      branch_if_no_active_lanes +39 (label 3 at #101)
   63. copy_slot_unmasked             $72 = five
   64. copy_slot_unmasked             five = $72
   65. zero_2_slots_unmasked          sum(0..1) = 0
   66. store_loop_mask                $72 = LoopMask
   67. jump                           jump +20 (label 5 at #87)
   68. label                          label 0x00000006
   69. zero_slot_unmasked             [temporary 0] = 0
   70. store_condition_mask           $73 = CondMask
   71. copy_slot_unmasked             $74 = i
   72. copy_slot_unmasked             $75 = five
   73. cmplt_int                      $74 = lessThan($74, $75)
   74. merge_condition_mask           CondMask = $73 & $74
   75. copy_constant                  $75 = 0xFFFFFFFF
   76. copy_slot_masked               [temporary 0] = Mask($75)
   77. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   78. load_condition_mask            CondMask = $73
   79. copy_2_slots_unmasked          $73..74 = sum(0..1)
   80. add_int                        $73 += $74
   81. copy_slot_masked               sum = Mask($73)
   82. reenable_loop_mask             LoopMask |= [temporary 0]
   83. copy_slot_unmasked             $73 = i
   84. copy_constant                  $74 = 0x00000001 (1.401298e-45)
   85. add_int                        $73 += $74
   86. copy_slot_masked               i = Mask($73)
   87. label                          label 0x00000005
   88. copy_slot_unmasked             $73 = i
   89. copy_slot_unmasked             $74 = kTen
   90. cmplt_int                      $73 = lessThan($73, $74)
   91. merge_loop_mask                LoopMask &= $73
   92. stack_rewind
   93. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (label 6 at #68)
   94. load_loop_mask                 LoopMask = $72
   95. copy_slot_unmasked             $72 = sum
   96. copy_slot_masked               [continue_loop].result = Mask($72)
   97. label                          label 0x00000004
   98. copy_constant                  $73 = 0x00000023 (4.904545e-44)
   99. cmpeq_int                      $72 = equal($72, $73)
  100. copy_slot_masked               $71 = Mask($72)
  101. label                          label 0x00000003
  102. load_condition_mask            CondMask = $8
  103. zero_slot_unmasked             $15 = 0
  104. merge_condition_mask           CondMask = $70 & $71
  105. branch_if_no_active_lanes      branch_if_no_active_lanes +37 (label 7 at #142)
  106. copy_constant                  five = 0x00000005 (7.006492e-45)
  107. zero_slot_unmasked             sum = 0
  108. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  109. zero_slot_unmasked             i = 0
  110. store_loop_mask                $16 = LoopMask
  111. jump                           jump +17 (label 9 at #128)
  112. label                          label 0x0000000A
  113. store_condition_mask           $17 = CondMask
  114. copy_slot_unmasked             $18 = five
  115. copy_slot_unmasked             $19 = i
  116. cmplt_int                      $18 = lessThan($18, $19)
  117. merge_condition_mask           CondMask = $17 & $18
  118. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  119. load_condition_mask            CondMask = $17
  120. copy_slot_unmasked             $17 = sum
  121. copy_slot_unmasked             $18 = i
  122. add_int                        $17 += $18
  123. copy_slot_masked               sum = Mask($17)
  124. copy_slot_unmasked             $17 = i
  125. copy_slot_unmasked             $18 = kOne
  126. add_int                        $17 += $18
  127. copy_slot_masked               i = Mask($17)
  128. label                          label 0x00000009
  129. copy_slot_unmasked             $17 = i
  130. copy_constant                  $18 = 0x0000000A (1.401298e-44)
  131. cmplt_int                      $17 = lessThan($17, $18)
  132. merge_loop_mask                LoopMask &= $17
  133. stack_rewind
  134. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (label 10 at #112)
  135. load_loop_mask                 LoopMask = $16
  136. copy_slot_unmasked             $16 = sum
  137. copy_slot_masked               [break_loop].result = Mask($16)
  138. label                          label 0x00000008
  139. copy_constant                  $17 = 0x0000000F (2.101948e-44)
  140. cmpeq_int                      $16 = equal($16, $17)
  141. copy_slot_masked               $15 = Mask($16)
  142. label                          label 0x00000007
  143. load_condition_mask            CondMask = $70
  144. zero_slot_unmasked             $61 = 0
  145. merge_condition_mask           CondMask = $14 & $15
  146. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 11 at #175)
  147. copy_constant                  $62 = 0x00000009 (1.261169e-44)
  148. swizzle_4                      $62..65 = ($62..65).xxxx
  149. copy_4_slots_unmasked          result = $62..65
  150. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 13 at #163)
  151. copy_constant                  i = 0x00000001 (1.401298e-45)
  152. label                          label 0x0000000E
  153. copy_4_slots_unmasked          $62..65 = result
  154. copy_4_slots_masked            result = Mask($62..65)
  155. copy_slot_unmasked             $62 = i
  156. copy_constant                  $63 = 0x00000001 (1.401298e-45)
  157. add_int                        $62 += $63
  158. copy_slot_masked               i = Mask($62)
  159. copy_constant                  $63 = 0x00000003 (4.203895e-45)
  160. cmple_int                      $62 = lessThanEqual($62, $63)
  161. stack_rewind
  162. branch_if_no_active_lanes_eq   branch -10 (label 14 at #152) if no lanes of $62 == 0x00000000 (0.0)
  163. label                          label 0x0000000D
  164. copy_4_slots_unmasked          $62..65 = result
  165. copy_constant                  $66 = 0x00000009 (1.261169e-44)
  166. copy_constant                  $67 = 0x00000001 (1.401298e-45)
  167. copy_constant                  $68 = 0x00000002 (2.802597e-45)
  168. copy_constant                  $69 = 0x00000003 (4.203895e-45)
  169. cmpeq_4_ints                   $62..65 = equal($62..65, $66..69)
  170. bitwise_and_2_ints             $62..63 &= $64..65
  171. bitwise_and_int                $62 &= $63
  172. copy_slot_masked               [loop_operator_le].result = Mask($62)
  173. label                          label 0x0000000C
  174. copy_slot_masked               $61 = Mask($62)
  175. label                          label 0x0000000B
  176. load_condition_mask            CondMask = $14
  177. zero_slot_unmasked             $77 = 0
  178. merge_condition_mask           CondMask = $60 & $61
  179. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 15 at #208)
  180. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  181. swizzle_4                      $78..81 = ($78..81).xxxx
  182. copy_4_slots_unmasked          result = $78..81
  183. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 17 at #196)
  184. copy_constant                  i = 0x00000001 (1.401298e-45)
  185. label                          label 0x00000012
  186. copy_4_slots_unmasked          $78..81 = result
  187. copy_4_slots_masked            result = Mask($78..81)
  188. copy_slot_unmasked             $78 = i
  189. copy_constant                  $79 = 0x00000001 (1.401298e-45)
  190. add_int                        $78 += $79
  191. copy_slot_masked               i = Mask($78)
  192. copy_constant                  $79 = 0x00000004 (5.605194e-45)
  193. cmplt_int                      $78 = lessThan($78, $79)
  194. stack_rewind
  195. branch_if_no_active_lanes_eq   branch -10 (label 18 at #185) if no lanes of $78 == 0x00000000 (0.0)
  196. label                          label 0x00000011
  197. copy_4_slots_unmasked          $78..81 = result
  198. copy_constant                  $82 = 0x00000009 (1.261169e-44)
  199. copy_constant                  $83 = 0x00000001 (1.401298e-45)
  200. copy_constant                  $84 = 0x00000002 (2.802597e-45)
  201. copy_constant                  $85 = 0x00000003 (4.203895e-45)
  202. cmpeq_4_ints                   $78..81 = equal($78..81, $82..85)
  203. bitwise_and_2_ints             $78..79 &= $80..81
  204. bitwise_and_int                $78 &= $79
  205. copy_slot_masked               [loop_operator_lt].result = Mask($78)
  206. label                          label 0x00000010
  207. copy_slot_masked               $77 = Mask($78)
  208. label                          label 0x0000000F
  209. load_condition_mask            CondMask = $60
  210. zero_slot_unmasked             $31 = 0
  211. merge_condition_mask           CondMask = $76 & $77
  212. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 19 at #242)
  213. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  214. swizzle_4                      $32..35 = ($32..35).xxxx
  215. copy_4_slots_unmasked          result = $32..35
  216. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 21 at #230)
  217. copy_constant                  i = 0x00000003 (4.203895e-45)
  218. label                          label 0x00000016
  219. copy_4_slots_unmasked          $32..35 = result
  220. copy_4_slots_masked            result = Mask($32..35)
  221. copy_slot_unmasked             $32 = i
  222. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  223. sub_int                        $32 -= $33
  224. copy_slot_masked               i = Mask($32)
  225. copy_constant                  $32 = 0x00000001 (1.401298e-45)
  226. copy_slot_unmasked             $33 = i
  227. cmple_int                      $32 = lessThanEqual($32, $33)
  228. stack_rewind
  229. branch_if_no_active_lanes_eq   branch -11 (label 22 at #218) if no lanes of $32 == 0x00000000 (0.0)
  230. label                          label 0x00000015
  231. copy_4_slots_unmasked          $32..35 = result
  232. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  233. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  234. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  235. copy_constant                  $39 = 0x00000001 (1.401298e-45)
  236. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  237. bitwise_and_2_ints             $32..33 &= $34..35
  238. bitwise_and_int                $32 &= $33
  239. copy_slot_masked               [loop_operator_ge].result = Mask($32)
  240. label                          label 0x00000014
  241. copy_slot_masked               $31 = Mask($32)
  242. label                          label 0x00000013
  243. load_condition_mask            CondMask = $76
  244. zero_slot_unmasked             $51 = 0
  245. merge_condition_mask           CondMask = $30 & $31
  246. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 23 at #276)
  247. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  248. swizzle_4                      $52..55 = ($52..55).xxxx
  249. copy_4_slots_unmasked          result = $52..55
  250. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 25 at #264)
  251. copy_constant                  i = 0x00000003 (4.203895e-45)
  252. label                          label 0x0000001A
  253. copy_4_slots_unmasked          $52..55 = result
  254. copy_4_slots_masked            result = Mask($52..55)
  255. copy_slot_unmasked             $52 = i
  256. copy_constant                  $53 = 0x00000001 (1.401298e-45)
  257. sub_int                        $52 -= $53
  258. copy_slot_masked               i = Mask($52)
  259. zero_slot_unmasked             $52 = 0
  260. copy_slot_unmasked             $53 = i
  261. cmplt_int                      $52 = lessThan($52, $53)
  262. stack_rewind
  263. branch_if_no_active_lanes_eq   branch -11 (label 26 at #252) if no lanes of $52 == 0x00000000 (0.0)
  264. label                          label 0x00000019
  265. copy_4_slots_unmasked          $52..55 = result
  266. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  267. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  268. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  269. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  270. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  271. bitwise_and_2_ints             $52..53 &= $54..55
  272. bitwise_and_int                $52 &= $53
  273. copy_slot_masked               [loop_operator_gt].result = Mask($52)
  274. label                          label 0x00000018
  275. copy_slot_masked               $51 = Mask($52)
  276. label                          label 0x00000017
  277. load_condition_mask            CondMask = $30
  278. zero_slot_unmasked             $41 = 0
  279. merge_condition_mask           CondMask = $50 & $51
  280. branch_if_no_active_lanes      branch_if_no_active_lanes +21 (label 27 at #301)
  281. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  282. swizzle_4                      $42..45 = ($42..45).xxxx
  283. copy_4_slots_unmasked          result = $42..45
  284. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 29 at #289)
  285. copy_constant                  i = 0x00000001 (1.401298e-45)
  286. label                          label 0x0000001E
  287. copy_4_slots_unmasked          $42..45 = result
  288. copy_4_slots_masked            result = Mask($42..45)
  289. label                          label 0x0000001D
  290. copy_4_slots_unmasked          $42..45 = result
  291. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  292. copy_constant                  $47 = 0x00000009 (1.261169e-44)
  293. copy_constant                  $48 = 0x00000009 (1.261169e-44)
  294. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  295. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  296. bitwise_and_2_ints             $42..43 &= $44..45
  297. bitwise_and_int                $42 &= $43
  298. copy_slot_masked               [loop_operator_eq].result = Mask($42)
  299. label                          label 0x0000001C
  300. copy_slot_masked               $41 = Mask($42)
  301. label                          label 0x0000001B
  302. load_condition_mask            CondMask = $50
  303. zero_slot_unmasked             $21 = 0
  304. merge_condition_mask           CondMask = $40 & $41
  305. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 31 at #334)
  306. copy_constant                  $22 = 0x00000009 (1.261169e-44)
  307. swizzle_4                      $22..25 = ($22..25).xxxx
  308. copy_4_slots_unmasked          result = $22..25
  309. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 33 at #322)
  310. copy_constant                  i = 0x00000001 (1.401298e-45)
  311. label                          label 0x00000022
  312. copy_4_slots_unmasked          $22..25 = result
  313. copy_4_slots_masked            result = Mask($22..25)
  314. copy_slot_unmasked             $22 = i
  315. copy_constant                  $23 = 0x00000001 (1.401298e-45)
  316. add_int                        $22 += $23
  317. copy_slot_masked               i = Mask($22)
  318. copy_constant                  $23 = 0x00000004 (5.605194e-45)
  319. cmpne_int                      $22 = notEqual($22, $23)
  320. stack_rewind
  321. branch_if_no_active_lanes_eq   branch -10 (label 34 at #311) if no lanes of $22 == 0x00000000 (0.0)
  322. label                          label 0x00000021
  323. copy_4_slots_unmasked          $22..25 = result
  324. copy_constant                  $26 = 0x00000009 (1.261169e-44)
  325. copy_constant                  $27 = 0x00000001 (1.401298e-45)
  326. copy_constant                  $28 = 0x00000002 (2.802597e-45)
  327. copy_constant                  $29 = 0x00000003 (4.203895e-45)
  328. cmpeq_4_ints                   $22..25 = equal($22..25, $26..29)
  329. bitwise_and_2_ints             $22..23 &= $24..25
  330. bitwise_and_int                $22 &= $23
  331. copy_slot_masked               [loop_operator_ne].result = Mask($22)
  332. label                          label 0x00000020
  333. copy_slot_masked               $21 = Mask($22)
  334. label                          label 0x0000001F
  335. load_condition_mask            CondMask = $40
  336. copy_4_constants               $0..3 = colorRed
  337. merge_condition_mask           CondMask = $20 & $21
  338. copy_4_constants               $4..7 = colorGreen
  339. copy_4_slots_masked            $0..3 = Mask($4..7)
  340. label                          label 0x00000023
  341. load_condition_mask            CondMask = $20
  342. copy_4_slots_unmasked          [main].result = $0..3
  343. load_src                       src.rgba = [main].result
