    1. store_src_rg                   pos = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             kZero = 0
    4. copy_constant                  kTen = 0x0000000A (1.401298e-44)
    5. copy_slot_unmasked             $0 = pos(0)
    6. copy_constant                  $1 = colorGreen(1)
    7. max_float                      $0 = max($0, $1)
    8. copy_constant                  $1 = colorGreen(3)
    9. min_float                      $0 = min($0, $1)
   10. cast_to_int_from_float         $0 = FloatToInt($0)
   11. copy_constant                  $1 = 0x00000005 (7.006492e-45)
   12. mul_int                        $0 *= $1
   13. copy_slot_unmasked             five = $0
   14. store_condition_mask           $20 = CondMask
   15. store_condition_mask           $40 = CondMask
   16. store_condition_mask           $50 = CondMask
   17. store_condition_mask           $30 = CondMask
   18. store_condition_mask           $76 = CondMask
   19. store_condition_mask           $60 = CondMask
   20. store_condition_mask           $14 = CondMask
   21. store_condition_mask           $70 = CondMask
   22. store_condition_mask           $8 = CondMask
   23. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (#55)
   24. store_return_mask              $9 = RetMask
   25. copy_slot_unmasked             $10 = five
   26. copy_slot_unmasked             five = $10
   27. copy_slot_unmasked             $10 = kZero
   28. copy_slot_unmasked             i = $10
   29. store_loop_mask                $10 = LoopMask
   30. jump                           jump +14 (#44)
   31. store_condition_mask           $11 = CondMask
   32. copy_slot_unmasked             $12 = i
   33. copy_slot_unmasked             $13 = five
   34. cmpeq_int                      $12 = equal($12, $13)
   35. merge_condition_mask           CondMask = $11 & $12
   36. copy_slot_unmasked             $13 = i
   37. copy_slot_masked               [return_loop].result = Mask($13)
   38. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   39. load_condition_mask            CondMask = $11
   40. copy_slot_unmasked             $11 = i
   41. copy_constant                  $12 = 0x00000001 (1.401298e-45)
   42. add_int                        $11 += $12
   43. copy_slot_masked               i = Mask($11)
   44. copy_slot_unmasked             $11 = i
   45. copy_constant                  $12 = 0x0000000A (1.401298e-44)
   46. cmplt_int                      $11 = lessThan($11, $12)
   47. merge_loop_mask                LoopMask &= $11
   48. stack_rewind
   49. branch_if_any_active_lanes     branch_if_any_active_lanes -18 (#31)
   50. load_loop_mask                 LoopMask = $10
   51. zero_slot_unmasked             $10 = 0
   52. copy_slot_masked               [return_loop].result = Mask($10)
   53. load_return_mask               RetMask = $9
   54. copy_slot_unmasked             $9 = [return_loop].result
   55. copy_constant                  $10 = 0x00000005 (7.006492e-45)
   56. cmpeq_int                      $9 = equal($9, $10)
   57. zero_slot_unmasked             $71 = 0
   58. merge_condition_mask           CondMask = $8 & $9
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (#95)
   60. copy_slot_unmasked             $72 = five
   61. copy_slot_unmasked             five = $72
   62. zero_2_slots_unmasked          sum(0..1) = 0
   63. store_loop_mask                $72 = LoopMask
   64. jump                           jump +19 (#83)
   65. zero_slot_unmasked             [for-loop continue mask 0] = 0
   66. store_condition_mask           $73 = CondMask
   67. copy_slot_unmasked             $74 = i
   68. copy_slot_unmasked             $75 = five
   69. cmplt_int                      $74 = lessThan($74, $75)
   70. merge_condition_mask           CondMask = $73 & $74
   71. copy_constant                  $75 = 0xFFFFFFFF
   72. copy_slot_masked               [for-loop continue mask 0] = Mask($75)
   73. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   74. load_condition_mask            CondMask = $73
   75. copy_2_slots_unmasked          $73..74 = sum(0..1)
   76. add_int                        $73 += $74
   77. copy_slot_masked               sum = Mask($73)
   78. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   79. copy_slot_unmasked             $73 = i
   80. copy_constant                  $74 = 0x00000001 (1.401298e-45)
   81. add_int                        $73 += $74
   82. copy_slot_masked               i = Mask($73)
   83. copy_slot_unmasked             $73 = i
   84. copy_slot_unmasked             $74 = kTen
   85. cmplt_int                      $73 = lessThan($73, $74)
   86. merge_loop_mask                LoopMask &= $73
   87. stack_rewind
   88. branch_if_any_active_lanes     branch_if_any_active_lanes -23 (#65)
   89. load_loop_mask                 LoopMask = $72
   90. copy_slot_unmasked             $72 = sum
   91. copy_slot_masked               [continue_loop].result = Mask($72)
   92. copy_constant                  $73 = 0x00000023 (4.904545e-44)
   93. cmpeq_int                      $72 = equal($72, $73)
   94. copy_slot_masked               $71 = Mask($72)
   95. load_condition_mask            CondMask = $8
   96. zero_slot_unmasked             $15 = 0
   97. merge_condition_mask           CondMask = $70 & $71
   98. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (#132)
   99. copy_constant                  five = 0x00000005 (7.006492e-45)
  100. zero_slot_unmasked             sum = 0
  101. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  102. zero_slot_unmasked             i = 0
  103. store_loop_mask                $16 = LoopMask
  104. jump                           jump +16 (#120)
  105. store_condition_mask           $17 = CondMask
  106. copy_slot_unmasked             $18 = five
  107. copy_slot_unmasked             $19 = i
  108. cmplt_int                      $18 = lessThan($18, $19)
  109. merge_condition_mask           CondMask = $17 & $18
  110. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  111. load_condition_mask            CondMask = $17
  112. copy_slot_unmasked             $17 = sum
  113. copy_slot_unmasked             $18 = i
  114. add_int                        $17 += $18
  115. copy_slot_masked               sum = Mask($17)
  116. copy_slot_unmasked             $17 = i
  117. copy_slot_unmasked             $18 = kOne
  118. add_int                        $17 += $18
  119. copy_slot_masked               i = Mask($17)
  120. copy_slot_unmasked             $17 = i
  121. copy_constant                  $18 = 0x0000000A (1.401298e-44)
  122. cmplt_int                      $17 = lessThan($17, $18)
  123. merge_loop_mask                LoopMask &= $17
  124. stack_rewind
  125. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (#105)
  126. load_loop_mask                 LoopMask = $16
  127. copy_slot_unmasked             $16 = sum
  128. copy_slot_masked               [break_loop].result = Mask($16)
  129. copy_constant                  $17 = 0x0000000F (2.101948e-44)
  130. cmpeq_int                      $16 = equal($16, $17)
  131. copy_slot_masked               $15 = Mask($16)
  132. load_condition_mask            CondMask = $70
  133. zero_slot_unmasked             $61 = 0
  134. merge_condition_mask           CondMask = $14 & $15
  135. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#165)
  136. copy_constant                  $62 = 0x00000009 (1.261169e-44)
  137. swizzle_4                      $62..65 = ($62..65).xxxx
  138. copy_4_slots_unmasked          result = $62..65
  139. copy_constant                  i = 0x00000001 (1.401298e-45)
  140. store_loop_mask                $62 = LoopMask
  141. jump                           jump +7 (#148)
  142. copy_4_slots_unmasked          $63..66 = result
  143. copy_4_slots_masked            result = Mask($63..66)
  144. copy_slot_unmasked             $63 = i
  145. copy_constant                  $64 = 0x00000001 (1.401298e-45)
  146. add_int                        $63 += $64
  147. copy_slot_masked               i = Mask($63)
  148. copy_slot_unmasked             $63 = i
  149. copy_constant                  $64 = 0x00000003 (4.203895e-45)
  150. cmple_int                      $63 = lessThanEqual($63, $64)
  151. merge_loop_mask                LoopMask &= $63
  152. stack_rewind
  153. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#142)
  154. load_loop_mask                 LoopMask = $62
  155. copy_4_slots_unmasked          $62..65 = result
  156. copy_constant                  $66 = 0x00000009 (1.261169e-44)
  157. copy_constant                  $67 = 0x00000001 (1.401298e-45)
  158. copy_constant                  $68 = 0x00000002 (2.802597e-45)
  159. copy_constant                  $69 = 0x00000003 (4.203895e-45)
  160. cmpeq_4_ints                   $62..65 = equal($62..65, $66..69)
  161. bitwise_and_2_ints             $62..63 &= $64..65
  162. bitwise_and_int                $62 &= $63
  163. copy_slot_masked               [loop_operator_le].result = Mask($62)
  164. copy_slot_masked               $61 = Mask($62)
  165. load_condition_mask            CondMask = $14
  166. zero_slot_unmasked             $77 = 0
  167. merge_condition_mask           CondMask = $60 & $61
  168. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#198)
  169. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  170. swizzle_4                      $78..81 = ($78..81).xxxx
  171. copy_4_slots_unmasked          result = $78..81
  172. copy_constant                  i = 0x00000001 (1.401298e-45)
  173. store_loop_mask                $78 = LoopMask
  174. jump                           jump +7 (#181)
  175. copy_4_slots_unmasked          $79..82 = result
  176. copy_4_slots_masked            result = Mask($79..82)
  177. copy_slot_unmasked             $79 = i
  178. copy_constant                  $80 = 0x00000001 (1.401298e-45)
  179. add_int                        $79 += $80
  180. copy_slot_masked               i = Mask($79)
  181. copy_slot_unmasked             $79 = i
  182. copy_constant                  $80 = 0x00000004 (5.605194e-45)
  183. cmplt_int                      $79 = lessThan($79, $80)
  184. merge_loop_mask                LoopMask &= $79
  185. stack_rewind
  186. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#175)
  187. load_loop_mask                 LoopMask = $78
  188. copy_4_slots_unmasked          $78..81 = result
  189. copy_constant                  $82 = 0x00000009 (1.261169e-44)
  190. copy_constant                  $83 = 0x00000001 (1.401298e-45)
  191. copy_constant                  $84 = 0x00000002 (2.802597e-45)
  192. copy_constant                  $85 = 0x00000003 (4.203895e-45)
  193. cmpeq_4_ints                   $78..81 = equal($78..81, $82..85)
  194. bitwise_and_2_ints             $78..79 &= $80..81
  195. bitwise_and_int                $78 &= $79
  196. copy_slot_masked               [loop_operator_lt].result = Mask($78)
  197. copy_slot_masked               $77 = Mask($78)
  198. load_condition_mask            CondMask = $60
  199. zero_slot_unmasked             $31 = 0
  200. merge_condition_mask           CondMask = $76 & $77
  201. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#231)
  202. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  203. swizzle_4                      $32..35 = ($32..35).xxxx
  204. copy_4_slots_unmasked          result = $32..35
  205. copy_constant                  i = 0x00000003 (4.203895e-45)
  206. store_loop_mask                $32 = LoopMask
  207. jump                           jump +7 (#214)
  208. copy_4_slots_unmasked          $33..36 = result
  209. copy_4_slots_masked            result = Mask($33..36)
  210. copy_slot_unmasked             $33 = i
  211. copy_constant                  $34 = 0x00000001 (1.401298e-45)
  212. sub_int                        $33 -= $34
  213. copy_slot_masked               i = Mask($33)
  214. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  215. copy_slot_unmasked             $34 = i
  216. cmple_int                      $33 = lessThanEqual($33, $34)
  217. merge_loop_mask                LoopMask &= $33
  218. stack_rewind
  219. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#208)
  220. load_loop_mask                 LoopMask = $32
  221. copy_4_slots_unmasked          $32..35 = result
  222. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  223. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  224. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  225. copy_constant                  $39 = 0x00000001 (1.401298e-45)
  226. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  227. bitwise_and_2_ints             $32..33 &= $34..35
  228. bitwise_and_int                $32 &= $33
  229. copy_slot_masked               [loop_operator_ge].result = Mask($32)
  230. copy_slot_masked               $31 = Mask($32)
  231. load_condition_mask            CondMask = $76
  232. zero_slot_unmasked             $51 = 0
  233. merge_condition_mask           CondMask = $30 & $31
  234. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#264)
  235. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  236. swizzle_4                      $52..55 = ($52..55).xxxx
  237. copy_4_slots_unmasked          result = $52..55
  238. copy_constant                  i = 0x00000003 (4.203895e-45)
  239. store_loop_mask                $52 = LoopMask
  240. jump                           jump +7 (#247)
  241. copy_4_slots_unmasked          $53..56 = result
  242. copy_4_slots_masked            result = Mask($53..56)
  243. copy_slot_unmasked             $53 = i
  244. copy_constant                  $54 = 0x00000001 (1.401298e-45)
  245. sub_int                        $53 -= $54
  246. copy_slot_masked               i = Mask($53)
  247. zero_slot_unmasked             $53 = 0
  248. copy_slot_unmasked             $54 = i
  249. cmplt_int                      $53 = lessThan($53, $54)
  250. merge_loop_mask                LoopMask &= $53
  251. stack_rewind
  252. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#241)
  253. load_loop_mask                 LoopMask = $52
  254. copy_4_slots_unmasked          $52..55 = result
  255. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  256. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  257. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  258. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  259. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  260. bitwise_and_2_ints             $52..53 &= $54..55
  261. bitwise_and_int                $52 &= $53
  262. copy_slot_masked               [loop_operator_gt].result = Mask($52)
  263. copy_slot_masked               $51 = Mask($52)
  264. load_condition_mask            CondMask = $30
  265. zero_slot_unmasked             $41 = 0
  266. merge_condition_mask           CondMask = $50 & $51
  267. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#297)
  268. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  269. swizzle_4                      $42..45 = ($42..45).xxxx
  270. copy_4_slots_unmasked          result = $42..45
  271. copy_constant                  i = 0x00000001 (1.401298e-45)
  272. store_loop_mask                $42 = LoopMask
  273. jump                           jump +7 (#280)
  274. copy_4_slots_unmasked          $43..46 = result
  275. copy_4_slots_masked            result = Mask($43..46)
  276. copy_slot_unmasked             $43 = i
  277. copy_constant                  $44 = 0x00000001 (1.401298e-45)
  278. add_int                        $43 += $44
  279. copy_slot_masked               i = Mask($43)
  280. copy_slot_unmasked             $43 = i
  281. copy_constant                  $44 = 0x00000001 (1.401298e-45)
  282. cmpeq_int                      $43 = equal($43, $44)
  283. merge_loop_mask                LoopMask &= $43
  284. stack_rewind
  285. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#274)
  286. load_loop_mask                 LoopMask = $42
  287. copy_4_slots_unmasked          $42..45 = result
  288. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  289. copy_constant                  $47 = 0x00000009 (1.261169e-44)
  290. copy_constant                  $48 = 0x00000009 (1.261169e-44)
  291. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  292. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  293. bitwise_and_2_ints             $42..43 &= $44..45
  294. bitwise_and_int                $42 &= $43
  295. copy_slot_masked               [loop_operator_eq].result = Mask($42)
  296. copy_slot_masked               $41 = Mask($42)
  297. load_condition_mask            CondMask = $50
  298. zero_slot_unmasked             $21 = 0
  299. merge_condition_mask           CondMask = $40 & $41
  300. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (#330)
  301. copy_constant                  $22 = 0x00000009 (1.261169e-44)
  302. swizzle_4                      $22..25 = ($22..25).xxxx
  303. copy_4_slots_unmasked          result = $22..25
  304. copy_constant                  i = 0x00000001 (1.401298e-45)
  305. store_loop_mask                $22 = LoopMask
  306. jump                           jump +7 (#313)
  307. copy_4_slots_unmasked          $23..26 = result
  308. copy_4_slots_masked            result = Mask($23..26)
  309. copy_slot_unmasked             $23 = i
  310. copy_constant                  $24 = 0x00000001 (1.401298e-45)
  311. add_int                        $23 += $24
  312. copy_slot_masked               i = Mask($23)
  313. copy_slot_unmasked             $23 = i
  314. copy_constant                  $24 = 0x00000004 (5.605194e-45)
  315. cmpne_int                      $23 = notEqual($23, $24)
  316. merge_loop_mask                LoopMask &= $23
  317. stack_rewind
  318. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#307)
  319. load_loop_mask                 LoopMask = $22
  320. copy_4_slots_unmasked          $22..25 = result
  321. copy_constant                  $26 = 0x00000009 (1.261169e-44)
  322. copy_constant                  $27 = 0x00000001 (1.401298e-45)
  323. copy_constant                  $28 = 0x00000002 (2.802597e-45)
  324. copy_constant                  $29 = 0x00000003 (4.203895e-45)
  325. cmpeq_4_ints                   $22..25 = equal($22..25, $26..29)
  326. bitwise_and_2_ints             $22..23 &= $24..25
  327. bitwise_and_int                $22 &= $23
  328. copy_slot_masked               [loop_operator_ne].result = Mask($22)
  329. copy_slot_masked               $21 = Mask($22)
  330. load_condition_mask            CondMask = $40
  331. copy_4_constants               $0..3 = colorRed
  332. merge_condition_mask           CondMask = $20 & $21
  333. copy_4_constants               $4..7 = colorGreen
  334. copy_4_slots_masked            $0..3 = Mask($4..7)
  335. load_condition_mask            CondMask = $20
  336. copy_4_slots_unmasked          [main].result = $0..3
  337. load_src                       src.rgba = [main].result
