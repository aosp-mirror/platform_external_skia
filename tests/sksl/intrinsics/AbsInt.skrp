    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0x00000001 (1.401298e-45)
    4. zero_slot_unmasked             $1 = 0
    5. zero_slot_unmasked             $2 = 0
    6. copy_constant                  $3 = 0x00000002 (2.802597e-45)
    7. copy_4_slots_unmasked          expected = $0..3
    8. store_condition_mask           $8 = CondMask
    9. copy_constant                  $9 = testInputs(0)
   10. cast_to_int_from_float         $9 = FloatToInt($9)
   11. abs_int                        $9 = abs($9)
   12. copy_slot_unmasked             $10 = expected(0)
   13. cmpeq_int                      $9 = equal($9, $10)
   14. copy_2_constants               $10..11 = testInputs(0..1)
   15. cast_to_int_from_2_floats      $10..11 = FloatToInt($10..11)
   16. abs_2_ints                     $10..11 = abs($10..11)
   17. copy_2_slots_unmasked          $12..13 = expected(0..1)
   18. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
   19. bitwise_and_int                $10 &= $11
   20. bitwise_and_int                $9 &= $10
   21. copy_3_constants               $10..12 = testInputs(0..2)
   22. cast_to_int_from_3_floats      $10..12 = FloatToInt($10..12)
   23. abs_3_ints                     $10..12 = abs($10..12)
   24. copy_3_slots_unmasked          $13..15 = expected(0..2)
   25. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
   26. bitwise_and_int                $11 &= $12
   27. bitwise_and_int                $10 &= $11
   28. bitwise_and_int                $9 &= $10
   29. copy_4_constants               $10..13 = testInputs
   30. cast_to_int_from_4_floats      $10..13 = FloatToInt($10..13)
   31. abs_4_ints                     $10..13 = abs($10..13)
   32. copy_4_slots_unmasked          $14..17 = expected
   33. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
   34. bitwise_and_2_ints             $10..11 &= $12..13
   35. bitwise_and_int                $10 &= $11
   36. bitwise_and_int                $9 &= $10
   37. copy_constant                  $10 = 0x00000001 (1.401298e-45)
   38. copy_slot_unmasked             $11 = expected(0)
   39. cmpeq_int                      $10 = equal($10, $11)
   40. bitwise_and_int                $9 &= $10
   41. copy_constant                  $10 = 0x00000001 (1.401298e-45)
   42. zero_slot_unmasked             $11 = 0
   43. copy_2_slots_unmasked          $12..13 = expected(0..1)
   44. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
   45. bitwise_and_int                $10 &= $11
   46. bitwise_and_int                $9 &= $10
   47. copy_constant                  $10 = 0x00000001 (1.401298e-45)
   48. zero_slot_unmasked             $11 = 0
   49. zero_slot_unmasked             $12 = 0
   50. copy_3_slots_unmasked          $13..15 = expected(0..2)
   51. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
   52. bitwise_and_int                $11 &= $12
   53. bitwise_and_int                $10 &= $11
   54. bitwise_and_int                $9 &= $10
   55. copy_constant                  $10 = 0x00000001 (1.401298e-45)
   56. zero_slot_unmasked             $11 = 0
   57. zero_slot_unmasked             $12 = 0
   58. copy_constant                  $13 = 0x00000002 (2.802597e-45)
   59. copy_4_slots_unmasked          $14..17 = expected
   60. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
   61. bitwise_and_2_ints             $10..11 &= $12..13
   62. bitwise_and_int                $10 &= $11
   63. bitwise_and_int                $9 &= $10
   64. copy_4_constants               $0..3 = colorRed
   65. merge_condition_mask           CondMask = $8 & $9
   66. copy_4_constants               $4..7 = colorGreen
   67. copy_4_slots_masked            $0..3 = Mask($4..7)
   68. load_condition_mask            CondMask = $8
   69. copy_4_slots_masked            [main].result = Mask($0..3)
   70. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   71. load_src                       src.rgba = [main].result
