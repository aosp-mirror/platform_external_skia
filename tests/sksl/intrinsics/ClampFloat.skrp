    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0xBF800000 (-1.0)
    4. zero_slot_unmasked             $1 = 0
    5. copy_constant                  $2 = 0x3F400000 (0.75)
    6. copy_constant                  $3 = 0x3F800000 (1.0)
    7. copy_4_slots_unmasked          expectedA = $0..3
    8. copy_constant                  $0 = 0xBF800000 (-1.0)
    9. copy_constant                  $1 = 0xC0000000 (-2.0)
   10. copy_constant                  $2 = 0xC0000000 (-2.0)
   11. copy_constant                  $3 = 0x3F800000 (1.0)
   12. copy_4_slots_unmasked          clampLow = $0..3
   13. copy_constant                  $0 = 0xBF800000 (-1.0)
   14. zero_slot_unmasked             $1 = 0
   15. copy_constant                  $2 = 0x3F000000 (0.5)
   16. copy_constant                  $3 = 0x40100000 (2.25)
   17. copy_4_slots_unmasked          expectedB = $0..3
   18. copy_constant                  $0 = 0x3F800000 (1.0)
   19. copy_constant                  $1 = 0x40000000 (2.0)
   20. copy_constant                  $2 = 0x3F000000 (0.5)
   21. copy_constant                  $3 = 0x40400000 (3.0)
   22. copy_4_slots_unmasked          clampHigh = $0..3
   23. store_condition_mask           $8 = CondMask
   24. copy_constant                  $9 = testInputs(0)
   25. copy_constant                  $10 = 0xBF800000 (-1.0)
   26. max_float                      $9 = max($9, $10)
   27. copy_constant                  $10 = 0x3F800000 (1.0)
   28. min_float                      $9 = min($9, $10)
   29. copy_slot_unmasked             $10 = expectedA(0)
   30. cmpeq_float                    $9 = equal($9, $10)
   31. copy_2_constants               $10..11 = testInputs(0..1)
   32. copy_constant                  $12 = 0xBF800000 (-1.0)
   33. copy_slot_unmasked             $13 = $12
   34. max_2_floats                   $10..11 = max($10..11, $12..13)
   35. copy_constant                  $12 = 0x3F800000 (1.0)
   36. copy_slot_unmasked             $13 = $12
   37. min_2_floats                   $10..11 = min($10..11, $12..13)
   38. copy_2_slots_unmasked          $12..13 = expectedA(0..1)
   39. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
   40. bitwise_and_int                $10 &= $11
   41. bitwise_and_int                $9 &= $10
   42. copy_3_constants               $10..12 = testInputs(0..2)
   43. copy_constant                  $13 = 0xBF800000 (-1.0)
   44. swizzle_3                      $13..15 = ($13..15).xxx
   45. max_3_floats                   $10..12 = max($10..12, $13..15)
   46. copy_constant                  $13 = 0x3F800000 (1.0)
   47. swizzle_3                      $13..15 = ($13..15).xxx
   48. min_3_floats                   $10..12 = min($10..12, $13..15)
   49. copy_3_slots_unmasked          $13..15 = expectedA(0..2)
   50. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
   51. bitwise_and_int                $11 &= $12
   52. bitwise_and_int                $10 &= $11
   53. bitwise_and_int                $9 &= $10
   54. copy_4_constants               $10..13 = testInputs
   55. copy_constant                  $14 = 0xBF800000 (-1.0)
   56. swizzle_4                      $14..17 = ($14..17).xxxx
   57. max_4_floats                   $10..13 = max($10..13, $14..17)
   58. copy_constant                  $14 = 0x3F800000 (1.0)
   59. swizzle_4                      $14..17 = ($14..17).xxxx
   60. min_4_floats                   $10..13 = min($10..13, $14..17)
   61. copy_4_slots_unmasked          $14..17 = expectedA
   62. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
   63. bitwise_and_2_ints             $10..11 &= $12..13
   64. bitwise_and_int                $10 &= $11
   65. bitwise_and_int                $9 &= $10
   66. copy_constant                  $10 = testInputs(0)
   67. copy_constant                  $11 = 0xBF800000 (-1.0)
   68. max_float                      $10 = max($10, $11)
   69. copy_constant                  $11 = 0x3F800000 (1.0)
   70. min_float                      $10 = min($10, $11)
   71. copy_slot_unmasked             $11 = expectedB(0)
   72. cmpeq_float                    $10 = equal($10, $11)
   73. bitwise_and_int                $9 &= $10
   74. copy_2_constants               $10..11 = testInputs(0..1)
   75. copy_constant                  $12 = 0xBF800000 (-1.0)
   76. copy_constant                  $13 = 0xC0000000 (-2.0)
   77. max_2_floats                   $10..11 = max($10..11, $12..13)
   78. copy_constant                  $12 = 0x3F800000 (1.0)
   79. copy_constant                  $13 = 0x40000000 (2.0)
   80. min_2_floats                   $10..11 = min($10..11, $12..13)
   81. copy_2_slots_unmasked          $12..13 = expectedB(0..1)
   82. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
   83. bitwise_and_int                $10 &= $11
   84. bitwise_and_int                $9 &= $10
   85. copy_3_constants               $10..12 = testInputs(0..2)
   86. copy_constant                  $13 = 0xBF800000 (-1.0)
   87. copy_constant                  $14 = 0xC0000000 (-2.0)
   88. copy_constant                  $15 = 0xC0000000 (-2.0)
   89. max_3_floats                   $10..12 = max($10..12, $13..15)
   90. copy_constant                  $13 = 0x3F800000 (1.0)
   91. copy_constant                  $14 = 0x40000000 (2.0)
   92. copy_constant                  $15 = 0x3F000000 (0.5)
   93. min_3_floats                   $10..12 = min($10..12, $13..15)
   94. copy_3_slots_unmasked          $13..15 = expectedB(0..2)
   95. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
   96. bitwise_and_int                $11 &= $12
   97. bitwise_and_int                $10 &= $11
   98. bitwise_and_int                $9 &= $10
   99. copy_4_constants               $10..13 = testInputs
  100. copy_4_slots_unmasked          $14..17 = clampLow
  101. max_4_floats                   $10..13 = max($10..13, $14..17)
  102. copy_4_slots_unmasked          $14..17 = clampHigh
  103. min_4_floats                   $10..13 = min($10..13, $14..17)
  104. copy_4_slots_unmasked          $14..17 = expectedB
  105. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
  106. bitwise_and_2_ints             $10..11 &= $12..13
  107. bitwise_and_int                $10 &= $11
  108. bitwise_and_int                $9 &= $10
  109. copy_constant                  $10 = 0xBF800000 (-1.0)
  110. copy_slot_unmasked             $11 = expectedA(0)
  111. cmpeq_float                    $10 = equal($10, $11)
  112. bitwise_and_int                $9 &= $10
  113. copy_constant                  $10 = 0xBF800000 (-1.0)
  114. zero_slot_unmasked             $11 = 0
  115. copy_2_slots_unmasked          $12..13 = expectedA(0..1)
  116. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
  117. bitwise_and_int                $10 &= $11
  118. bitwise_and_int                $9 &= $10
  119. copy_constant                  $10 = 0xBF800000 (-1.0)
  120. zero_slot_unmasked             $11 = 0
  121. copy_constant                  $12 = 0x3F400000 (0.75)
  122. copy_3_slots_unmasked          $13..15 = expectedA(0..2)
  123. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
  124. bitwise_and_int                $11 &= $12
  125. bitwise_and_int                $10 &= $11
  126. bitwise_and_int                $9 &= $10
  127. copy_constant                  $10 = 0xBF800000 (-1.0)
  128. zero_slot_unmasked             $11 = 0
  129. copy_constant                  $12 = 0x3F400000 (0.75)
  130. copy_constant                  $13 = 0x3F800000 (1.0)
  131. copy_4_slots_unmasked          $14..17 = expectedA
  132. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
  133. bitwise_and_2_ints             $10..11 &= $12..13
  134. bitwise_and_int                $10 &= $11
  135. bitwise_and_int                $9 &= $10
  136. copy_constant                  $10 = 0xBF800000 (-1.0)
  137. copy_slot_unmasked             $11 = expectedB(0)
  138. cmpeq_float                    $10 = equal($10, $11)
  139. bitwise_and_int                $9 &= $10
  140. copy_constant                  $10 = 0xBF800000 (-1.0)
  141. zero_slot_unmasked             $11 = 0
  142. copy_2_slots_unmasked          $12..13 = expectedB(0..1)
  143. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
  144. bitwise_and_int                $10 &= $11
  145. bitwise_and_int                $9 &= $10
  146. copy_constant                  $10 = 0xBF800000 (-1.0)
  147. zero_slot_unmasked             $11 = 0
  148. copy_constant                  $12 = 0x3F000000 (0.5)
  149. copy_3_slots_unmasked          $13..15 = expectedB(0..2)
  150. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
  151. bitwise_and_int                $11 &= $12
  152. bitwise_and_int                $10 &= $11
  153. bitwise_and_int                $9 &= $10
  154. copy_constant                  $10 = 0xBF800000 (-1.0)
  155. zero_slot_unmasked             $11 = 0
  156. copy_constant                  $12 = 0x3F000000 (0.5)
  157. copy_constant                  $13 = 0x40100000 (2.25)
  158. copy_4_slots_unmasked          $14..17 = expectedB
  159. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
  160. bitwise_and_2_ints             $10..11 &= $12..13
  161. bitwise_and_int                $10 &= $11
  162. bitwise_and_int                $9 &= $10
  163. copy_4_constants               $0..3 = colorRed
  164. merge_condition_mask           CondMask = $8 & $9
  165. copy_4_constants               $4..7 = colorGreen
  166. copy_4_slots_masked            $0..3 = Mask($4..7)
  167. load_condition_mask            CondMask = $8
  168. copy_4_slots_masked            [main].result = Mask($0..3)
  169. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  170. load_src                       src.rgba = [main].result
