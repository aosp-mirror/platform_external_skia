    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_4_constants               $0..3 = testInputs
    4. copy_constant                  $4 = 0x42C80000 (100.0)
    5. swizzle_4                      $4..7 = ($4..7).xxxx
    6. mul_4_floats                   $0..3 *= $4..7
    7. cast_to_int_from_4_floats      $0..3 = FloatToInt($0..3)
    8. copy_4_slots_unmasked          intValues = $0..3
    9. copy_constant                  $0 = 0xFFFFFF9C
   10. zero_slot_unmasked             $1 = 0
   11. copy_constant                  $2 = 0x0000004B (1.050974e-43)
   12. copy_constant                  $3 = 0x00000064 (1.401298e-43)
   13. copy_4_slots_unmasked          expectedA = $0..3
   14. copy_constant                  $0 = 0xFFFFFF9C
   15. copy_constant                  $1 = 0xFFFFFF38
   16. copy_constant                  $2 = 0xFFFFFF38
   17. copy_constant                  $3 = 0x00000064 (1.401298e-43)
   18. copy_4_slots_unmasked          clampLow = $0..3
   19. copy_constant                  $0 = 0xFFFFFF9C
   20. zero_slot_unmasked             $1 = 0
   21. copy_constant                  $2 = 0x00000032 (7.006492e-44)
   22. copy_constant                  $3 = 0x000000E1 (3.152922e-43)
   23. copy_4_slots_unmasked          expectedB = $0..3
   24. copy_constant                  $0 = 0x00000064 (1.401298e-43)
   25. copy_constant                  $1 = 0x000000C8 (2.802597e-43)
   26. copy_constant                  $2 = 0x00000032 (7.006492e-44)
   27. copy_constant                  $3 = 0x0000012C (4.203895e-43)
   28. copy_4_slots_unmasked          clampHigh = $0..3
   29. store_condition_mask           $8 = CondMask
   30. copy_slot_unmasked             $9 = intValues(0)
   31. copy_constant                  $10 = 0xFFFFFF9C
   32. max_int                        $9 = max($9, $10)
   33. copy_constant                  $10 = 0x00000064 (1.401298e-43)
   34. min_int                        $9 = min($9, $10)
   35. copy_slot_unmasked             $10 = expectedA(0)
   36. cmpeq_int                      $9 = equal($9, $10)
   37. copy_2_slots_unmasked          $10..11 = intValues(0..1)
   38. copy_constant                  $12 = 0xFFFFFF9C
   39. copy_slot_unmasked             $13 = $12
   40. max_2_ints                     $10..11 = max($10..11, $12..13)
   41. copy_constant                  $12 = 0x00000064 (1.401298e-43)
   42. copy_slot_unmasked             $13 = $12
   43. min_2_ints                     $10..11 = min($10..11, $12..13)
   44. copy_2_slots_unmasked          $12..13 = expectedA(0..1)
   45. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
   46. bitwise_and_int                $10 &= $11
   47. bitwise_and_int                $9 &= $10
   48. copy_3_slots_unmasked          $10..12 = intValues(0..2)
   49. copy_constant                  $13 = 0xFFFFFF9C
   50. swizzle_3                      $13..15 = ($13..15).xxx
   51. max_3_ints                     $10..12 = max($10..12, $13..15)
   52. copy_constant                  $13 = 0x00000064 (1.401298e-43)
   53. swizzle_3                      $13..15 = ($13..15).xxx
   54. min_3_ints                     $10..12 = min($10..12, $13..15)
   55. copy_3_slots_unmasked          $13..15 = expectedA(0..2)
   56. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
   57. bitwise_and_int                $11 &= $12
   58. bitwise_and_int                $10 &= $11
   59. bitwise_and_int                $9 &= $10
   60. copy_4_slots_unmasked          $10..13 = intValues
   61. copy_constant                  $14 = 0xFFFFFF9C
   62. swizzle_4                      $14..17 = ($14..17).xxxx
   63. max_4_ints                     $10..13 = max($10..13, $14..17)
   64. copy_constant                  $14 = 0x00000064 (1.401298e-43)
   65. swizzle_4                      $14..17 = ($14..17).xxxx
   66. min_4_ints                     $10..13 = min($10..13, $14..17)
   67. copy_4_slots_unmasked          $14..17 = expectedA
   68. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
   69. bitwise_and_2_ints             $10..11 &= $12..13
   70. bitwise_and_int                $10 &= $11
   71. bitwise_and_int                $9 &= $10
   72. copy_constant                  $10 = 0xFFFFFF9C
   73. copy_slot_unmasked             $11 = expectedA(0)
   74. cmpeq_int                      $10 = equal($10, $11)
   75. bitwise_and_int                $9 &= $10
   76. copy_constant                  $10 = 0xFFFFFF9C
   77. zero_slot_unmasked             $11 = 0
   78. copy_2_slots_unmasked          $12..13 = expectedA(0..1)
   79. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
   80. bitwise_and_int                $10 &= $11
   81. bitwise_and_int                $9 &= $10
   82. copy_constant                  $10 = 0xFFFFFF9C
   83. zero_slot_unmasked             $11 = 0
   84. copy_constant                  $12 = 0x0000004B (1.050974e-43)
   85. copy_3_slots_unmasked          $13..15 = expectedA(0..2)
   86. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
   87. bitwise_and_int                $11 &= $12
   88. bitwise_and_int                $10 &= $11
   89. bitwise_and_int                $9 &= $10
   90. copy_constant                  $10 = 0xFFFFFF9C
   91. zero_slot_unmasked             $11 = 0
   92. copy_constant                  $12 = 0x0000004B (1.050974e-43)
   93. copy_constant                  $13 = 0x00000064 (1.401298e-43)
   94. copy_4_slots_unmasked          $14..17 = expectedA
   95. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
   96. bitwise_and_2_ints             $10..11 &= $12..13
   97. bitwise_and_int                $10 &= $11
   98. bitwise_and_int                $9 &= $10
   99. copy_slot_unmasked             $10 = intValues(0)
  100. copy_constant                  $11 = 0xFFFFFF9C
  101. max_int                        $10 = max($10, $11)
  102. copy_constant                  $11 = 0x00000064 (1.401298e-43)
  103. min_int                        $10 = min($10, $11)
  104. copy_slot_unmasked             $11 = expectedB(0)
  105. cmpeq_int                      $10 = equal($10, $11)
  106. bitwise_and_int                $9 &= $10
  107. copy_2_slots_unmasked          $10..11 = intValues(0..1)
  108. copy_constant                  $12 = 0xFFFFFF9C
  109. copy_constant                  $13 = 0xFFFFFF38
  110. max_2_ints                     $10..11 = max($10..11, $12..13)
  111. copy_constant                  $12 = 0x00000064 (1.401298e-43)
  112. copy_constant                  $13 = 0x000000C8 (2.802597e-43)
  113. min_2_ints                     $10..11 = min($10..11, $12..13)
  114. copy_2_slots_unmasked          $12..13 = expectedB(0..1)
  115. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
  116. bitwise_and_int                $10 &= $11
  117. bitwise_and_int                $9 &= $10
  118. copy_3_slots_unmasked          $10..12 = intValues(0..2)
  119. copy_constant                  $13 = 0xFFFFFF9C
  120. copy_constant                  $14 = 0xFFFFFF38
  121. copy_constant                  $15 = 0xFFFFFF38
  122. max_3_ints                     $10..12 = max($10..12, $13..15)
  123. copy_constant                  $13 = 0x00000064 (1.401298e-43)
  124. copy_constant                  $14 = 0x000000C8 (2.802597e-43)
  125. copy_constant                  $15 = 0x00000032 (7.006492e-44)
  126. min_3_ints                     $10..12 = min($10..12, $13..15)
  127. copy_3_slots_unmasked          $13..15 = expectedB(0..2)
  128. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
  129. bitwise_and_int                $11 &= $12
  130. bitwise_and_int                $10 &= $11
  131. bitwise_and_int                $9 &= $10
  132. copy_4_slots_unmasked          $10..13 = intValues
  133. copy_4_slots_unmasked          $14..17 = clampLow
  134. max_4_ints                     $10..13 = max($10..13, $14..17)
  135. copy_4_slots_unmasked          $14..17 = clampHigh
  136. min_4_ints                     $10..13 = min($10..13, $14..17)
  137. copy_4_slots_unmasked          $14..17 = expectedB
  138. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
  139. bitwise_and_2_ints             $10..11 &= $12..13
  140. bitwise_and_int                $10 &= $11
  141. bitwise_and_int                $9 &= $10
  142. copy_constant                  $10 = 0xFFFFFF9C
  143. copy_slot_unmasked             $11 = expectedB(0)
  144. cmpeq_int                      $10 = equal($10, $11)
  145. bitwise_and_int                $9 &= $10
  146. copy_constant                  $10 = 0xFFFFFF9C
  147. zero_slot_unmasked             $11 = 0
  148. copy_2_slots_unmasked          $12..13 = expectedB(0..1)
  149. cmpeq_2_ints                   $10..11 = equal($10..11, $12..13)
  150. bitwise_and_int                $10 &= $11
  151. bitwise_and_int                $9 &= $10
  152. copy_constant                  $10 = 0xFFFFFF9C
  153. zero_slot_unmasked             $11 = 0
  154. copy_constant                  $12 = 0x00000032 (7.006492e-44)
  155. copy_3_slots_unmasked          $13..15 = expectedB(0..2)
  156. cmpeq_3_ints                   $10..12 = equal($10..12, $13..15)
  157. bitwise_and_int                $11 &= $12
  158. bitwise_and_int                $10 &= $11
  159. bitwise_and_int                $9 &= $10
  160. copy_constant                  $10 = 0xFFFFFF9C
  161. zero_slot_unmasked             $11 = 0
  162. copy_constant                  $12 = 0x00000032 (7.006492e-44)
  163. copy_constant                  $13 = 0x000000E1 (3.152922e-43)
  164. copy_4_slots_unmasked          $14..17 = expectedB
  165. cmpeq_4_ints                   $10..13 = equal($10..13, $14..17)
  166. bitwise_and_2_ints             $10..11 &= $12..13
  167. bitwise_and_int                $10 &= $11
  168. bitwise_and_int                $9 &= $10
  169. copy_4_constants               $0..3 = colorRed
  170. merge_condition_mask           CondMask = $8 & $9
  171. copy_4_constants               $4..7 = colorGreen
  172. copy_4_slots_masked            $0..3 = Mask($4..7)
  173. load_condition_mask            CondMask = $8
  174. copy_4_slots_masked            [main].result = Mask($0..3)
  175. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  176. load_src                       src.rgba = [main].result
