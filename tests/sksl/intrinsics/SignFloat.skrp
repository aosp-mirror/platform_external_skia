    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0xBF800000 (-1.0)
    4. zero_slot_unmasked             $1 = 0
    5. copy_constant                  $2 = 0x3F800000 (1.0)
    6. copy_constant                  $3 = 0x3F800000 (1.0)
    7. copy_4_slots_unmasked          expected = $0..3
    8. store_condition_mask           $8 = CondMask
    9. copy_constant                  $9 = testInputs(0)
   10. copy_constant                  $10 = 0x7F7FFFFF (3.40282347e+38)
   11. mul_float                      $9 *= $10
   12. copy_constant                  $10 = 0xBF800000 (-1.0)
   13. max_float                      $9 = max($9, $10)
   14. copy_constant                  $10 = 0x3F800000 (1.0)
   15. min_float                      $9 = min($9, $10)
   16. copy_slot_unmasked             $10 = expected(0)
   17. cmpeq_float                    $9 = equal($9, $10)
   18. copy_2_constants               $10..11 = testInputs(0..1)
   19. copy_constant                  $12 = 0x7F7FFFFF (3.40282347e+38)
   20. copy_slot_unmasked             $13 = $12
   21. mul_2_floats                   $10..11 *= $12..13
   22. copy_constant                  $12 = 0xBF800000 (-1.0)
   23. copy_slot_unmasked             $13 = $12
   24. max_2_floats                   $10..11 = max($10..11, $12..13)
   25. copy_constant                  $12 = 0x3F800000 (1.0)
   26. copy_slot_unmasked             $13 = $12
   27. min_2_floats                   $10..11 = min($10..11, $12..13)
   28. copy_2_slots_unmasked          $12..13 = expected(0..1)
   29. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
   30. bitwise_and_int                $10 &= $11
   31. bitwise_and_int                $9 &= $10
   32. copy_3_constants               $10..12 = testInputs(0..2)
   33. copy_constant                  $13 = 0x7F7FFFFF (3.40282347e+38)
   34. swizzle_3                      $13..15 = ($13..15).xxx
   35. mul_3_floats                   $10..12 *= $13..15
   36. copy_constant                  $13 = 0xBF800000 (-1.0)
   37. swizzle_3                      $13..15 = ($13..15).xxx
   38. max_3_floats                   $10..12 = max($10..12, $13..15)
   39. copy_constant                  $13 = 0x3F800000 (1.0)
   40. swizzle_3                      $13..15 = ($13..15).xxx
   41. min_3_floats                   $10..12 = min($10..12, $13..15)
   42. copy_3_slots_unmasked          $13..15 = expected(0..2)
   43. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
   44. bitwise_and_int                $11 &= $12
   45. bitwise_and_int                $10 &= $11
   46. bitwise_and_int                $9 &= $10
   47. copy_4_constants               $10..13 = testInputs
   48. copy_constant                  $14 = 0x7F7FFFFF (3.40282347e+38)
   49. swizzle_4                      $14..17 = ($14..17).xxxx
   50. mul_4_floats                   $10..13 *= $14..17
   51. copy_constant                  $14 = 0xBF800000 (-1.0)
   52. swizzle_4                      $14..17 = ($14..17).xxxx
   53. max_4_floats                   $10..13 = max($10..13, $14..17)
   54. copy_constant                  $14 = 0x3F800000 (1.0)
   55. swizzle_4                      $14..17 = ($14..17).xxxx
   56. min_4_floats                   $10..13 = min($10..13, $14..17)
   57. copy_4_slots_unmasked          $14..17 = expected
   58. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
   59. bitwise_and_2_ints             $10..11 &= $12..13
   60. bitwise_and_int                $10 &= $11
   61. bitwise_and_int                $9 &= $10
   62. copy_constant                  $10 = 0xBF800000 (-1.0)
   63. copy_slot_unmasked             $11 = expected(0)
   64. cmpeq_float                    $10 = equal($10, $11)
   65. bitwise_and_int                $9 &= $10
   66. copy_constant                  $10 = 0xBF800000 (-1.0)
   67. zero_slot_unmasked             $11 = 0
   68. copy_2_slots_unmasked          $12..13 = expected(0..1)
   69. cmpeq_2_floats                 $10..11 = equal($10..11, $12..13)
   70. bitwise_and_int                $10 &= $11
   71. bitwise_and_int                $9 &= $10
   72. copy_constant                  $10 = 0xBF800000 (-1.0)
   73. zero_slot_unmasked             $11 = 0
   74. copy_constant                  $12 = 0x3F800000 (1.0)
   75. copy_3_slots_unmasked          $13..15 = expected(0..2)
   76. cmpeq_3_floats                 $10..12 = equal($10..12, $13..15)
   77. bitwise_and_int                $11 &= $12
   78. bitwise_and_int                $10 &= $11
   79. bitwise_and_int                $9 &= $10
   80. copy_constant                  $10 = 0xBF800000 (-1.0)
   81. zero_slot_unmasked             $11 = 0
   82. copy_constant                  $12 = 0x3F800000 (1.0)
   83. copy_constant                  $13 = 0x3F800000 (1.0)
   84. copy_4_slots_unmasked          $14..17 = expected
   85. cmpeq_4_floats                 $10..13 = equal($10..13, $14..17)
   86. bitwise_and_2_ints             $10..11 &= $12..13
   87. bitwise_and_int                $10 &= $11
   88. bitwise_and_int                $9 &= $10
   89. copy_4_constants               $0..3 = colorRed
   90. merge_condition_mask           CondMask = $8 & $9
   91. copy_4_constants               $4..7 = colorGreen
   92. copy_4_slots_masked            $0..3 = Mask($4..7)
   93. load_condition_mask            CondMask = $8
   94. copy_4_slots_masked            [main].result = Mask($0..3)
   95. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   96. load_src                       src.rgba = [main].result
