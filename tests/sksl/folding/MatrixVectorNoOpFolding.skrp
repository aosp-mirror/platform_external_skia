    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $8 = CondMask
    4. store_condition_mask           $43 = CondMask
    5. store_condition_mask           $65 = CondMask
    6. store_condition_mask           $27 = CondMask
    7. store_condition_mask           $88 = CondMask
    8. store_condition_mask           $79 = CondMask
    9. branch_if_no_active_lanes      branch_if_no_active_lanes +57 (label 0 at #66)
   10. store_return_mask              $80 = RetMask
   11. zero_4_slots_unmasked          v(0..3) = 0
   12. copy_2_constants               $81..82 = testInputs(0..1)
   13. copy_2_slots_masked            v = Mask($81..82)
   14. copy_2_constants               $81..82 = testInputs(0..1)
   15. copy_2_slots_masked            v = Mask($81..82)
   16. store_condition_mask           $81 = CondMask
   17. copy_2_slots_unmasked          $82..83 = v
   18. copy_2_constants               $84..85 = testInputs(0..1)
   19. cmpne_2_floats                 $82..83 = notEqual($82..83, $84..85)
   20. bitwise_or_int                 $82 |= $83
   21. merge_condition_mask           CondMask = $81 & $82
   22. zero_slot_unmasked             $83 = 0
   23. copy_slot_masked               [test_no_op_mat2_X_vec2].result = Mask($83)
   24. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   25. load_condition_mask            CondMask = $81
   26. store_condition_mask           $81 = CondMask
   27. copy_2_slots_unmasked          $82..83 = v
   28. copy_2_constants               $84..85 = testInputs(0..1)
   29. cmpne_2_floats                 $82..83 = notEqual($82..83, $84..85)
   30. bitwise_or_int                 $82 |= $83
   31. merge_condition_mask           CondMask = $81 & $82
   32. zero_slot_unmasked             $83 = 0
   33. copy_slot_masked               [test_no_op_mat2_X_vec2].result = Mask($83)
   34. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   35. load_condition_mask            CondMask = $81
   36. zero_2_slots_unmasked          $81..82 = 0
   37. copy_2_constants               $83..84 = testInputs(0..1)
   38. sub_2_floats                   $81..82 -= $83..84
   39. copy_2_slots_masked            v = Mask($81..82)
   40. zero_2_slots_unmasked          $81..82 = 0
   41. copy_2_constants               $83..84 = testInputs(0..1)
   42. sub_2_floats                   $81..82 -= $83..84
   43. copy_2_slots_masked            v = Mask($81..82)
   44. store_condition_mask           $81 = CondMask
   45. copy_2_slots_unmasked          $82..83 = v
   46. zero_2_slots_unmasked          $84..85 = 0
   47. copy_2_constants               $86..87 = testInputs(0..1)
   48. sub_2_floats                   $84..85 -= $86..87
   49. cmpne_2_floats                 $82..83 = notEqual($82..83, $84..85)
   50. bitwise_or_int                 $82 |= $83
   51. merge_condition_mask           CondMask = $81 & $82
   52. zero_slot_unmasked             $83 = 0
   53. copy_slot_masked               [test_no_op_mat2_X_vec2].result = Mask($83)
   54. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   55. load_condition_mask            CondMask = $81
   56. zero_2_slots_unmasked          $81..82 = 0
   57. copy_2_slots_masked            vv = Mask($81..82)
   58. zero_2_slots_unmasked          $81..82 = 0
   59. copy_2_slots_masked            vv = Mask($81..82)
   60. zero_2_slots_unmasked          $83..84 = 0
   61. cmpeq_2_floats                 $81..82 = equal($81..82, $83..84)
   62. bitwise_and_int                $81 &= $82
   63. copy_slot_masked               [test_no_op_mat2_X_vec2].result = Mask($81)
   64. load_return_mask               RetMask = $80
   65. copy_slot_unmasked             $80 = [test_no_op_mat2_X_vec2].result
   66. label                          label 0x00000000
   67. zero_slot_unmasked             $89 = 0
   68. merge_condition_mask           CondMask = $79 & $80
   69. branch_if_no_active_lanes      branch_if_no_active_lanes +64 (label 1 at #133)
   70. store_return_mask              $90 = RetMask
   71. zero_4_slots_unmasked          v(0..3) = 0
   72. zero_2_slots_unmasked          vv(1..2) = 0
   73. copy_3_constants               $91..93 = testInputs(0..2)
   74. copy_3_slots_masked            v = Mask($91..93)
   75. copy_3_constants               $91..93 = testInputs(0..2)
   76. copy_3_slots_masked            v = Mask($91..93)
   77. store_condition_mask           $91 = CondMask
   78. copy_3_slots_unmasked          $92..94 = v
   79. copy_3_constants               $95..97 = testInputs(0..2)
   80. cmpne_3_floats                 $92..94 = notEqual($92..94, $95..97)
   81. bitwise_or_int                 $93 |= $94
   82. bitwise_or_int                 $92 |= $93
   83. merge_condition_mask           CondMask = $91 & $92
   84. zero_slot_unmasked             $93 = 0
   85. copy_slot_masked               [test_no_op_mat3_X_vec3].result = Mask($93)
   86. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   87. load_condition_mask            CondMask = $91
   88. store_condition_mask           $91 = CondMask
   89. copy_3_slots_unmasked          $92..94 = v
   90. copy_3_constants               $95..97 = testInputs(0..2)
   91. cmpne_3_floats                 $92..94 = notEqual($92..94, $95..97)
   92. bitwise_or_int                 $93 |= $94
   93. bitwise_or_int                 $92 |= $93
   94. merge_condition_mask           CondMask = $91 & $92
   95. zero_slot_unmasked             $93 = 0
   96. copy_slot_masked               [test_no_op_mat3_X_vec3].result = Mask($93)
   97. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   98. load_condition_mask            CondMask = $91
   99. zero_3_slots_unmasked          $91..93 = 0
  100. copy_3_constants               $94..96 = testInputs(0..2)
  101. sub_3_floats                   $91..93 -= $94..96
  102. copy_3_slots_masked            v = Mask($91..93)
  103. zero_3_slots_unmasked          $91..93 = 0
  104. copy_3_constants               $94..96 = testInputs(0..2)
  105. sub_3_floats                   $91..93 -= $94..96
  106. copy_3_slots_masked            v = Mask($91..93)
  107. store_condition_mask           $91 = CondMask
  108. copy_3_slots_unmasked          $92..94 = v
  109. zero_3_slots_unmasked          $95..97 = 0
  110. copy_3_constants               $98..100 = testInputs(0..2)
  111. sub_3_floats                   $95..97 -= $98..100
  112. cmpne_3_floats                 $92..94 = notEqual($92..94, $95..97)
  113. bitwise_or_int                 $93 |= $94
  114. bitwise_or_int                 $92 |= $93
  115. merge_condition_mask           CondMask = $91 & $92
  116. zero_slot_unmasked             $93 = 0
  117. copy_slot_masked               [test_no_op_mat3_X_vec3].result = Mask($93)
  118. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  119. load_condition_mask            CondMask = $91
  120. zero_3_slots_unmasked          $91..93 = 0
  121. copy_3_slots_masked            vv = Mask($91..93)
  122. zero_3_slots_unmasked          $91..93 = 0
  123. copy_3_slots_masked            vv = Mask($91..93)
  124. zero_3_slots_unmasked          $94..96 = 0
  125. cmpeq_3_floats                 $91..93 = equal($91..93, $94..96)
  126. bitwise_and_int                $92 &= $93
  127. bitwise_and_int                $91 &= $92
  128. copy_slot_masked               [test_no_op_mat3_X_vec3].result = Mask($91)
  129. load_return_mask               RetMask = $90
  130. copy_slot_unmasked             $90 = [test_no_op_mat3_X_vec3].result
  131. label                          label 0x00000002
  132. copy_slot_masked               $89 = Mask($90)
  133. label                          label 0x00000001
  134. load_condition_mask            CondMask = $79
  135. zero_slot_unmasked             $28 = 0
  136. merge_condition_mask           CondMask = $88 & $89
  137. branch_if_no_active_lanes      branch_if_no_active_lanes +64 (label 3 at #201)
  138. store_return_mask              $29 = RetMask
  139. zero_4_slots_unmasked          v = 0
  140. zero_4_slots_unmasked          vv = 0
  141. copy_4_constants               $30..33 = testInputs
  142. copy_4_slots_masked            v = Mask($30..33)
  143. copy_4_constants               $30..33 = testInputs
  144. copy_4_slots_masked            v = Mask($30..33)
  145. store_condition_mask           $30 = CondMask
  146. copy_4_slots_unmasked          $31..34 = v
  147. copy_4_constants               $35..38 = testInputs
  148. cmpne_4_floats                 $31..34 = notEqual($31..34, $35..38)
  149. bitwise_or_2_ints              $31..32 |= $33..34
  150. bitwise_or_int                 $31 |= $32
  151. merge_condition_mask           CondMask = $30 & $31
  152. zero_slot_unmasked             $32 = 0
  153. copy_slot_masked               [test_no_op_mat4_X_vec4].result = Mask($32)
  154. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  155. load_condition_mask            CondMask = $30
  156. store_condition_mask           $30 = CondMask
  157. copy_4_slots_unmasked          $31..34 = v
  158. copy_4_constants               $35..38 = testInputs
  159. cmpne_4_floats                 $31..34 = notEqual($31..34, $35..38)
  160. bitwise_or_2_ints              $31..32 |= $33..34
  161. bitwise_or_int                 $31 |= $32
  162. merge_condition_mask           CondMask = $30 & $31
  163. zero_slot_unmasked             $32 = 0
  164. copy_slot_masked               [test_no_op_mat4_X_vec4].result = Mask($32)
  165. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  166. load_condition_mask            CondMask = $30
  167. zero_4_slots_unmasked          $30..33 = 0
  168. copy_4_constants               $34..37 = testInputs
  169. sub_4_floats                   $30..33 -= $34..37
  170. copy_4_slots_masked            v = Mask($30..33)
  171. zero_4_slots_unmasked          $30..33 = 0
  172. copy_4_constants               $34..37 = testInputs
  173. sub_4_floats                   $30..33 -= $34..37
  174. copy_4_slots_masked            v = Mask($30..33)
  175. store_condition_mask           $30 = CondMask
  176. copy_4_slots_unmasked          $31..34 = v
  177. zero_4_slots_unmasked          $35..38 = 0
  178. copy_4_constants               $39..42 = testInputs
  179. sub_4_floats                   $35..38 -= $39..42
  180. cmpne_4_floats                 $31..34 = notEqual($31..34, $35..38)
  181. bitwise_or_2_ints              $31..32 |= $33..34
  182. bitwise_or_int                 $31 |= $32
  183. merge_condition_mask           CondMask = $30 & $31
  184. zero_slot_unmasked             $32 = 0
  185. copy_slot_masked               [test_no_op_mat4_X_vec4].result = Mask($32)
  186. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  187. load_condition_mask            CondMask = $30
  188. zero_4_slots_unmasked          $30..33 = 0
  189. copy_4_slots_masked            vv = Mask($30..33)
  190. zero_4_slots_unmasked          $30..33 = 0
  191. copy_4_slots_masked            vv = Mask($30..33)
  192. zero_4_slots_unmasked          $34..37 = 0
  193. cmpeq_4_floats                 $30..33 = equal($30..33, $34..37)
  194. bitwise_and_2_ints             $30..31 &= $32..33
  195. bitwise_and_int                $30 &= $31
  196. copy_slot_masked               [test_no_op_mat4_X_vec4].result = Mask($30)
  197. load_return_mask               RetMask = $29
  198. copy_slot_unmasked             $29 = [test_no_op_mat4_X_vec4].result
  199. label                          label 0x00000004
  200. copy_slot_masked               $28 = Mask($29)
  201. label                          label 0x00000003
  202. load_condition_mask            CondMask = $88
  203. zero_slot_unmasked             $66 = 0
  204. merge_condition_mask           CondMask = $27 & $28
  205. branch_if_no_active_lanes      branch_if_no_active_lanes +112 (label 5 at #317)
  206. store_return_mask              $67 = RetMask
  207. copy_constant                  $68 = 0xBF800000 (-1.0)
  208. copy_slot_unmasked             $69 = $68
  209. copy_2_slots_unmasked          n = $68..69
  210. copy_constant                  $68 = 0x3F800000 (1.0)
  211. copy_slot_unmasked             $69 = $68
  212. copy_2_slots_unmasked          i = $68..69
  213. zero_4_slots_unmasked          z(0..3) = 0
  214. zero_2_slots_unmasked          vv = 0
  215. zero_2_slots_unmasked          $68..69 = 0
  216. copy_2_slots_masked            vv = Mask($68..69)
  217. zero_2_slots_unmasked          $68..69 = 0
  218. copy_2_slots_masked            vv = Mask($68..69)
  219. store_condition_mask           $68 = CondMask
  220. copy_2_slots_unmasked          $69..70 = vv
  221. copy_2_slots_unmasked          $71..72 = z
  222. cmpne_2_floats                 $69..70 = notEqual($69..70, $71..72)
  223. bitwise_or_int                 $69 |= $70
  224. merge_condition_mask           CondMask = $68 & $69
  225. zero_slot_unmasked             $70 = 0
  226. copy_slot_masked               [test_no_op_vec2_X_mat2].result = Mask($70)
  227. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  228. load_condition_mask            CondMask = $68
  229. copy_2_slots_unmasked          $29..30 = i
  230. copy_4_constants               $31..34 = testMatrix2x2
  231. copy_2_slots_unmasked          $68..69 = $29..30
  232. copy_2_slots_unmasked          $70..71 = $31..32
  233. mul_2_floats                   $68..69 *= $70..71
  234. add_float                      $68 += $69
  235. copy_2_slots_unmasked          $69..70 = $29..30
  236. copy_2_slots_unmasked          $71..72 = $33..34
  237. mul_2_floats                   $69..70 *= $71..72
  238. add_float                      $69 += $70
  239. copy_2_slots_masked            v = Mask($68..69)
  240. store_condition_mask           $68 = CondMask
  241. copy_2_slots_unmasked          $69..70 = v
  242. copy_constant                  $71 = 0x40400000 (3.0)
  243. copy_constant                  $72 = 0x40E00000 (7.0)
  244. cmpne_2_floats                 $69..70 = notEqual($69..70, $71..72)
  245. bitwise_or_int                 $69 |= $70
  246. merge_condition_mask           CondMask = $68 & $69
  247. zero_slot_unmasked             $70 = 0
  248. copy_slot_masked               [test_no_op_vec2_X_mat2].result = Mask($70)
  249. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  250. load_condition_mask            CondMask = $68
  251. copy_4_constants               $29..32 = testMatrix2x2
  252. swizzle_3                      $30..32 = ($30..32).yxz
  253. copy_2_slots_unmasked          $33..34 = i
  254. copy_2_slots_unmasked          $68..69 = $29..30
  255. copy_2_slots_unmasked          $70..71 = $33..34
  256. mul_2_floats                   $68..69 *= $70..71
  257. add_float                      $68 += $69
  258. copy_2_slots_unmasked          $69..70 = $31..32
  259. copy_2_slots_unmasked          $71..72 = $33..34
  260. mul_2_floats                   $69..70 *= $71..72
  261. add_float                      $69 += $70
  262. copy_2_slots_masked            v = Mask($68..69)
  263. store_condition_mask           $68 = CondMask
  264. copy_2_slots_unmasked          $69..70 = v
  265. copy_constant                  $71 = 0x40800000 (4.0)
  266. copy_constant                  $72 = 0x40C00000 (6.0)
  267. cmpne_2_floats                 $69..70 = notEqual($69..70, $71..72)
  268. bitwise_or_int                 $69 |= $70
  269. merge_condition_mask           CondMask = $68 & $69
  270. zero_slot_unmasked             $70 = 0
  271. copy_slot_masked               [test_no_op_vec2_X_mat2].result = Mask($70)
  272. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  273. load_condition_mask            CondMask = $68
  274. copy_2_slots_unmasked          $29..30 = n
  275. copy_4_constants               $31..34 = testMatrix2x2
  276. copy_2_slots_unmasked          $68..69 = $29..30
  277. copy_2_slots_unmasked          $70..71 = $31..32
  278. mul_2_floats                   $68..69 *= $70..71
  279. add_float                      $68 += $69
  280. copy_2_slots_unmasked          $69..70 = $29..30
  281. copy_2_slots_unmasked          $71..72 = $33..34
  282. mul_2_floats                   $69..70 *= $71..72
  283. add_float                      $69 += $70
  284. copy_2_slots_masked            v = Mask($68..69)
  285. store_condition_mask           $68 = CondMask
  286. copy_2_slots_unmasked          $69..70 = v
  287. copy_constant                  $71 = 0xC0400000 (-3.0)
  288. copy_constant                  $72 = 0xC0E00000 (-7.0)
  289. cmpne_2_floats                 $69..70 = notEqual($69..70, $71..72)
  290. bitwise_or_int                 $69 |= $70
  291. merge_condition_mask           CondMask = $68 & $69
  292. zero_slot_unmasked             $70 = 0
  293. copy_slot_masked               [test_no_op_vec2_X_mat2].result = Mask($70)
  294. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  295. load_condition_mask            CondMask = $68
  296. copy_4_constants               $29..32 = testMatrix2x2
  297. swizzle_3                      $30..32 = ($30..32).yxz
  298. copy_2_slots_unmasked          $33..34 = n
  299. copy_2_slots_unmasked          $68..69 = $29..30
  300. copy_2_slots_unmasked          $70..71 = $33..34
  301. mul_2_floats                   $68..69 *= $70..71
  302. add_float                      $68 += $69
  303. copy_2_slots_unmasked          $69..70 = $31..32
  304. copy_2_slots_unmasked          $71..72 = $33..34
  305. mul_2_floats                   $69..70 *= $71..72
  306. add_float                      $69 += $70
  307. copy_2_slots_masked            v = Mask($68..69)
  308. copy_constant                  $70 = 0xC0800000 (-4.0)
  309. copy_constant                  $71 = 0xC0C00000 (-6.0)
  310. cmpeq_2_floats                 $68..69 = equal($68..69, $70..71)
  311. bitwise_and_int                $68 &= $69
  312. copy_slot_masked               [test_no_op_vec2_X_mat2].result = Mask($68)
  313. load_return_mask               RetMask = $67
  314. copy_slot_unmasked             $67 = [test_no_op_vec2_X_mat2].result
  315. label                          label 0x00000006
  316. copy_slot_masked               $66 = Mask($67)
  317. label                          label 0x00000005
  318. load_condition_mask            CondMask = $27
  319. zero_slot_unmasked             $44 = 0
  320. merge_condition_mask           CondMask = $65 & $66
  321. branch_if_no_active_lanes      branch_if_no_active_lanes +158 (label 7 at #479)
  322. store_return_mask              $45 = RetMask
  323. copy_constant                  $46 = 0xBF800000 (-1.0)
  324. swizzle_3                      $46..48 = ($46..48).xxx
  325. copy_3_slots_unmasked          n = $46..48
  326. copy_constant                  $46 = 0x3F800000 (1.0)
  327. swizzle_3                      $46..48 = ($46..48).xxx
  328. copy_3_slots_unmasked          i = $46..48
  329. zero_4_slots_unmasked          z(0..3) = 0
  330. zero_4_slots_unmasked          v(1..4) = 0
  331. zero_slot_unmasked             vv(2) = 0
  332. zero_3_slots_unmasked          $46..48 = 0
  333. copy_3_slots_masked            vv = Mask($46..48)
  334. zero_3_slots_unmasked          $46..48 = 0
  335. copy_3_slots_masked            vv = Mask($46..48)
  336. store_condition_mask           $46 = CondMask
  337. copy_3_slots_unmasked          $47..49 = vv
  338. copy_3_slots_unmasked          $50..52 = z
  339. cmpne_3_floats                 $47..49 = notEqual($47..49, $50..52)
  340. bitwise_or_int                 $48 |= $49
  341. bitwise_or_int                 $47 |= $48
  342. merge_condition_mask           CondMask = $46 & $47
  343. zero_slot_unmasked             $48 = 0
  344. copy_slot_masked               [test_no_op_vec3_X_mat3].result = Mask($48)
  345. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  346. load_condition_mask            CondMask = $46
  347. copy_3_slots_unmasked          $67..69 = i
  348. copy_4_constants               $70..73 = testMatrix3x3(0..3)
  349. copy_4_constants               $74..77 = testMatrix3x3(4..7)
  350. copy_constant                  $78 = testMatrix3x3(8)
  351. copy_3_slots_unmasked          $46..48 = $67..69
  352. copy_3_slots_unmasked          $49..51 = $70..72
  353. mul_3_floats                   $46..48 *= $49..51
  354. add_float                      $47 += $48
  355. add_float                      $46 += $47
  356. copy_3_slots_unmasked          $47..49 = $67..69
  357. copy_3_slots_unmasked          $50..52 = $73..75
  358. mul_3_floats                   $47..49 *= $50..52
  359. add_float                      $48 += $49
  360. add_float                      $47 += $48
  361. copy_3_slots_unmasked          $48..50 = $67..69
  362. copy_3_slots_unmasked          $51..53 = $76..78
  363. mul_3_floats                   $48..50 *= $51..53
  364. add_float                      $49 += $50
  365. add_float                      $48 += $49
  366. copy_3_slots_masked            v = Mask($46..48)
  367. store_condition_mask           $46 = CondMask
  368. copy_3_slots_unmasked          $47..49 = v
  369. copy_constant                  $50 = 0x40C00000 (6.0)
  370. copy_constant                  $51 = 0x41700000 (15.0)
  371. copy_constant                  $52 = 0x41C00000 (24.0)
  372. cmpne_3_floats                 $47..49 = notEqual($47..49, $50..52)
  373. bitwise_or_int                 $48 |= $49
  374. bitwise_or_int                 $47 |= $48
  375. merge_condition_mask           CondMask = $46 & $47
  376. zero_slot_unmasked             $48 = 0
  377. copy_slot_masked               [test_no_op_vec3_X_mat3].result = Mask($48)
  378. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  379. load_condition_mask            CondMask = $46
  380. copy_4_constants               $67..70 = testMatrix3x3(0..3)
  381. copy_4_constants               $71..74 = testMatrix3x3(4..7)
  382. copy_constant                  $75 = testMatrix3x3(8)
  383. shuffle                        $68..75 = ($68..75)[2 5 0 3 6 1 4 7]
  384. copy_3_slots_unmasked          $76..78 = i
  385. copy_3_slots_unmasked          $46..48 = $67..69
  386. copy_3_slots_unmasked          $49..51 = $76..78
  387. mul_3_floats                   $46..48 *= $49..51
  388. add_float                      $47 += $48
  389. add_float                      $46 += $47
  390. copy_3_slots_unmasked          $47..49 = $70..72
  391. copy_3_slots_unmasked          $50..52 = $76..78
  392. mul_3_floats                   $47..49 *= $50..52
  393. add_float                      $48 += $49
  394. add_float                      $47 += $48
  395. copy_3_slots_unmasked          $48..50 = $73..75
  396. copy_3_slots_unmasked          $51..53 = $76..78
  397. mul_3_floats                   $48..50 *= $51..53
  398. add_float                      $49 += $50
  399. add_float                      $48 += $49
  400. copy_3_slots_masked            v = Mask($46..48)
  401. store_condition_mask           $46 = CondMask
  402. copy_3_slots_unmasked          $47..49 = v
  403. copy_constant                  $50 = 0x41400000 (12.0)
  404. copy_constant                  $51 = 0x41700000 (15.0)
  405. copy_constant                  $52 = 0x41900000 (18.0)
  406. cmpne_3_floats                 $47..49 = notEqual($47..49, $50..52)
  407. bitwise_or_int                 $48 |= $49
  408. bitwise_or_int                 $47 |= $48
  409. merge_condition_mask           CondMask = $46 & $47
  410. zero_slot_unmasked             $48 = 0
  411. copy_slot_masked               [test_no_op_vec3_X_mat3].result = Mask($48)
  412. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  413. load_condition_mask            CondMask = $46
  414. copy_3_slots_unmasked          $67..69 = n
  415. copy_4_constants               $70..73 = testMatrix3x3(0..3)
  416. copy_4_constants               $74..77 = testMatrix3x3(4..7)
  417. copy_constant                  $78 = testMatrix3x3(8)
  418. copy_3_slots_unmasked          $46..48 = $67..69
  419. copy_3_slots_unmasked          $49..51 = $70..72
  420. mul_3_floats                   $46..48 *= $49..51
  421. add_float                      $47 += $48
  422. add_float                      $46 += $47
  423. copy_3_slots_unmasked          $47..49 = $67..69
  424. copy_3_slots_unmasked          $50..52 = $73..75
  425. mul_3_floats                   $47..49 *= $50..52
  426. add_float                      $48 += $49
  427. add_float                      $47 += $48
  428. copy_3_slots_unmasked          $48..50 = $67..69
  429. copy_3_slots_unmasked          $51..53 = $76..78
  430. mul_3_floats                   $48..50 *= $51..53
  431. add_float                      $49 += $50
  432. add_float                      $48 += $49
  433. copy_3_slots_masked            v = Mask($46..48)
  434. store_condition_mask           $46 = CondMask
  435. copy_3_slots_unmasked          $47..49 = v
  436. copy_constant                  $50 = 0xC0C00000 (-6.0)
  437. copy_constant                  $51 = 0xC1700000 (-15.0)
  438. copy_constant                  $52 = 0xC1C00000 (-24.0)
  439. cmpne_3_floats                 $47..49 = notEqual($47..49, $50..52)
  440. bitwise_or_int                 $48 |= $49
  441. bitwise_or_int                 $47 |= $48
  442. merge_condition_mask           CondMask = $46 & $47
  443. zero_slot_unmasked             $48 = 0
  444. copy_slot_masked               [test_no_op_vec3_X_mat3].result = Mask($48)
  445. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  446. load_condition_mask            CondMask = $46
  447. copy_4_constants               $67..70 = testMatrix3x3(0..3)
  448. copy_4_constants               $71..74 = testMatrix3x3(4..7)
  449. copy_constant                  $75 = testMatrix3x3(8)
  450. shuffle                        $68..75 = ($68..75)[2 5 0 3 6 1 4 7]
  451. copy_3_slots_unmasked          $76..78 = n
  452. copy_3_slots_unmasked          $46..48 = $67..69
  453. copy_3_slots_unmasked          $49..51 = $76..78
  454. mul_3_floats                   $46..48 *= $49..51
  455. add_float                      $47 += $48
  456. add_float                      $46 += $47
  457. copy_3_slots_unmasked          $47..49 = $70..72
  458. copy_3_slots_unmasked          $50..52 = $76..78
  459. mul_3_floats                   $47..49 *= $50..52
  460. add_float                      $48 += $49
  461. add_float                      $47 += $48
  462. copy_3_slots_unmasked          $48..50 = $73..75
  463. copy_3_slots_unmasked          $51..53 = $76..78
  464. mul_3_floats                   $48..50 *= $51..53
  465. add_float                      $49 += $50
  466. add_float                      $48 += $49
  467. copy_3_slots_masked            v = Mask($46..48)
  468. copy_constant                  $49 = 0xC1400000 (-12.0)
  469. copy_constant                  $50 = 0xC1700000 (-15.0)
  470. copy_constant                  $51 = 0xC1900000 (-18.0)
  471. cmpeq_3_floats                 $46..48 = equal($46..48, $49..51)
  472. bitwise_and_int                $47 &= $48
  473. bitwise_and_int                $46 &= $47
  474. copy_slot_masked               [test_no_op_vec3_X_mat3].result = Mask($46)
  475. load_return_mask               RetMask = $45
  476. copy_slot_unmasked             $45 = [test_no_op_vec3_X_mat3].result
  477. label                          label 0x00000008
  478. copy_slot_masked               $44 = Mask($45)
  479. label                          label 0x00000007
  480. load_condition_mask            CondMask = $65
  481. zero_slot_unmasked             $9 = 0
  482. merge_condition_mask           CondMask = $43 & $44
  483. branch_if_no_active_lanes      branch_if_no_active_lanes +195 (label 9 at #678)
  484. store_return_mask              $10 = RetMask
  485. copy_constant                  $11 = 0xBF800000 (-1.0)
  486. swizzle_4                      $11..14 = ($11..14).xxxx
  487. copy_4_slots_unmasked          n = $11..14
  488. copy_constant                  $11 = 0x3F800000 (1.0)
  489. swizzle_4                      $11..14 = ($11..14).xxxx
  490. copy_4_slots_unmasked          i = $11..14
  491. zero_4_slots_unmasked          z = 0
  492. copy_4_constants               $11..14 = testMatrix2x2
  493. copy_4_constants               $15..18 = testMatrix2x2
  494. copy_4_constants               $19..22 = testMatrix2x2
  495. copy_4_constants               $23..26 = testMatrix2x2
  496. copy_4_slots_unmasked          testMatrix4x4(0..3) = $11..14
  497. copy_4_slots_unmasked          testMatrix4x4(4..7) = $15..18
  498. copy_4_slots_unmasked          testMatrix4x4(8..11) = $19..22
  499. copy_4_slots_unmasked          testMatrix4x4(12..15) = $23..26
  500. zero_4_slots_unmasked          v = 0
  501. zero_4_slots_unmasked          vv = 0
  502. stack_rewind
  503. zero_4_slots_unmasked          $11..14 = 0
  504. copy_4_slots_masked            vv = Mask($11..14)
  505. zero_4_slots_unmasked          $11..14 = 0
  506. copy_4_slots_masked            vv = Mask($11..14)
  507. store_condition_mask           $11 = CondMask
  508. copy_4_slots_unmasked          $12..15 = vv
  509. copy_4_slots_unmasked          $16..19 = z
  510. cmpne_4_floats                 $12..15 = notEqual($12..15, $16..19)
  511. bitwise_or_2_ints              $12..13 |= $14..15
  512. bitwise_or_int                 $12 |= $13
  513. merge_condition_mask           CondMask = $11 & $12
  514. zero_slot_unmasked             $13 = 0
  515. copy_slot_masked               [test_no_op_vec4_X_mat4].result = Mask($13)
  516. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  517. load_condition_mask            CondMask = $11
  518. copy_4_slots_unmasked          $45..48 = i
  519. copy_4_slots_unmasked          $49..52 = testMatrix4x4(0..3)
  520. copy_4_slots_unmasked          $53..56 = testMatrix4x4(4..7)
  521. copy_4_slots_unmasked          $57..60 = testMatrix4x4(8..11)
  522. copy_4_slots_unmasked          $61..64 = testMatrix4x4(12..15)
  523. copy_4_slots_unmasked          $11..14 = $45..48
  524. copy_4_slots_unmasked          $15..18 = $49..52
  525. mul_4_floats                   $11..14 *= $15..18
  526. add_2_floats                   $11..12 += $13..14
  527. add_float                      $11 += $12
  528. copy_4_slots_unmasked          $12..15 = $45..48
  529. copy_4_slots_unmasked          $16..19 = $53..56
  530. mul_4_floats                   $12..15 *= $16..19
  531. add_2_floats                   $12..13 += $14..15
  532. add_float                      $12 += $13
  533. copy_4_slots_unmasked          $13..16 = $45..48
  534. copy_4_slots_unmasked          $17..20 = $57..60
  535. mul_4_floats                   $13..16 *= $17..20
  536. add_2_floats                   $13..14 += $15..16
  537. add_float                      $13 += $14
  538. copy_4_slots_unmasked          $14..17 = $45..48
  539. copy_4_slots_unmasked          $18..21 = $61..64
  540. mul_4_floats                   $14..17 *= $18..21
  541. add_2_floats                   $14..15 += $16..17
  542. add_float                      $14 += $15
  543. copy_4_slots_masked            v = Mask($11..14)
  544. store_condition_mask           $11 = CondMask
  545. copy_4_slots_unmasked          $12..15 = v
  546. copy_constant                  $16 = 0x41200000 (10.0)
  547. copy_constant                  $17 = 0x41200000 (10.0)
  548. copy_constant                  $18 = 0x41200000 (10.0)
  549. copy_constant                  $19 = 0x41200000 (10.0)
  550. cmpne_4_floats                 $12..15 = notEqual($12..15, $16..19)
  551. bitwise_or_2_ints              $12..13 |= $14..15
  552. bitwise_or_int                 $12 |= $13
  553. merge_condition_mask           CondMask = $11 & $12
  554. zero_slot_unmasked             $13 = 0
  555. copy_slot_masked               [test_no_op_vec4_X_mat4].result = Mask($13)
  556. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  557. load_condition_mask            CondMask = $11
  558. copy_4_slots_unmasked          $45..48 = testMatrix4x4(0..3)
  559. copy_4_slots_unmasked          $49..52 = testMatrix4x4(4..7)
  560. copy_4_slots_unmasked          $53..56 = testMatrix4x4(8..11)
  561. copy_4_slots_unmasked          $57..60 = testMatrix4x4(12..15)
  562. shuffle                        $46..60 = ($46..60)[3 7 11 0 4 8 12 1 5 9 13 2 6 10 14]
  563. copy_4_slots_unmasked          $61..64 = i
  564. copy_4_slots_unmasked          $11..14 = $45..48
  565. copy_4_slots_unmasked          $15..18 = $61..64
  566. mul_4_floats                   $11..14 *= $15..18
  567. add_2_floats                   $11..12 += $13..14
  568. add_float                      $11 += $12
  569. copy_4_slots_unmasked          $12..15 = $49..52
  570. copy_4_slots_unmasked          $16..19 = $61..64
  571. mul_4_floats                   $12..15 *= $16..19
  572. add_2_floats                   $12..13 += $14..15
  573. add_float                      $12 += $13
  574. copy_4_slots_unmasked          $13..16 = $53..56
  575. copy_4_slots_unmasked          $17..20 = $61..64
  576. mul_4_floats                   $13..16 *= $17..20
  577. add_2_floats                   $13..14 += $15..16
  578. add_float                      $13 += $14
  579. copy_4_slots_unmasked          $14..17 = $57..60
  580. copy_4_slots_unmasked          $18..21 = $61..64
  581. mul_4_floats                   $14..17 *= $18..21
  582. add_2_floats                   $14..15 += $16..17
  583. add_float                      $14 += $15
  584. copy_4_slots_masked            v = Mask($11..14)
  585. store_condition_mask           $11 = CondMask
  586. copy_4_slots_unmasked          $12..15 = v
  587. copy_constant                  $16 = 0x40800000 (4.0)
  588. copy_constant                  $17 = 0x41000000 (8.0)
  589. copy_constant                  $18 = 0x41400000 (12.0)
  590. copy_constant                  $19 = 0x41800000 (16.0)
  591. cmpne_4_floats                 $12..15 = notEqual($12..15, $16..19)
  592. bitwise_or_2_ints              $12..13 |= $14..15
  593. bitwise_or_int                 $12 |= $13
  594. merge_condition_mask           CondMask = $11 & $12
  595. zero_slot_unmasked             $13 = 0
  596. copy_slot_masked               [test_no_op_vec4_X_mat4].result = Mask($13)
  597. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  598. load_condition_mask            CondMask = $11
  599. copy_4_slots_unmasked          $45..48 = n
  600. copy_4_slots_unmasked          $49..52 = testMatrix4x4(0..3)
  601. copy_4_slots_unmasked          $53..56 = testMatrix4x4(4..7)
  602. copy_4_slots_unmasked          $57..60 = testMatrix4x4(8..11)
  603. copy_4_slots_unmasked          $61..64 = testMatrix4x4(12..15)
  604. copy_4_slots_unmasked          $11..14 = $45..48
  605. copy_4_slots_unmasked          $15..18 = $49..52
  606. mul_4_floats                   $11..14 *= $15..18
  607. add_2_floats                   $11..12 += $13..14
  608. add_float                      $11 += $12
  609. copy_4_slots_unmasked          $12..15 = $45..48
  610. copy_4_slots_unmasked          $16..19 = $53..56
  611. mul_4_floats                   $12..15 *= $16..19
  612. add_2_floats                   $12..13 += $14..15
  613. add_float                      $12 += $13
  614. copy_4_slots_unmasked          $13..16 = $45..48
  615. copy_4_slots_unmasked          $17..20 = $57..60
  616. mul_4_floats                   $13..16 *= $17..20
  617. add_2_floats                   $13..14 += $15..16
  618. add_float                      $13 += $14
  619. copy_4_slots_unmasked          $14..17 = $45..48
  620. copy_4_slots_unmasked          $18..21 = $61..64
  621. mul_4_floats                   $14..17 *= $18..21
  622. add_2_floats                   $14..15 += $16..17
  623. add_float                      $14 += $15
  624. copy_4_slots_masked            v = Mask($11..14)
  625. store_condition_mask           $11 = CondMask
  626. copy_4_slots_unmasked          $12..15 = v
  627. copy_constant                  $16 = 0xC1200000 (-10.0)
  628. copy_constant                  $17 = 0xC1200000 (-10.0)
  629. copy_constant                  $18 = 0xC1200000 (-10.0)
  630. copy_constant                  $19 = 0xC1200000 (-10.0)
  631. cmpne_4_floats                 $12..15 = notEqual($12..15, $16..19)
  632. bitwise_or_2_ints              $12..13 |= $14..15
  633. bitwise_or_int                 $12 |= $13
  634. merge_condition_mask           CondMask = $11 & $12
  635. zero_slot_unmasked             $13 = 0
  636. copy_slot_masked               [test_no_op_vec4_X_mat4].result = Mask($13)
  637. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  638. load_condition_mask            CondMask = $11
  639. copy_4_slots_unmasked          $45..48 = testMatrix4x4(0..3)
  640. copy_4_slots_unmasked          $49..52 = testMatrix4x4(4..7)
  641. copy_4_slots_unmasked          $53..56 = testMatrix4x4(8..11)
  642. copy_4_slots_unmasked          $57..60 = testMatrix4x4(12..15)
  643. shuffle                        $46..60 = ($46..60)[3 7 11 0 4 8 12 1 5 9 13 2 6 10 14]
  644. copy_4_slots_unmasked          $61..64 = n
  645. copy_4_slots_unmasked          $11..14 = $45..48
  646. copy_4_slots_unmasked          $15..18 = $61..64
  647. mul_4_floats                   $11..14 *= $15..18
  648. add_2_floats                   $11..12 += $13..14
  649. add_float                      $11 += $12
  650. copy_4_slots_unmasked          $12..15 = $49..52
  651. copy_4_slots_unmasked          $16..19 = $61..64
  652. mul_4_floats                   $12..15 *= $16..19
  653. add_2_floats                   $12..13 += $14..15
  654. add_float                      $12 += $13
  655. copy_4_slots_unmasked          $13..16 = $53..56
  656. copy_4_slots_unmasked          $17..20 = $61..64
  657. mul_4_floats                   $13..16 *= $17..20
  658. add_2_floats                   $13..14 += $15..16
  659. add_float                      $13 += $14
  660. copy_4_slots_unmasked          $14..17 = $57..60
  661. copy_4_slots_unmasked          $18..21 = $61..64
  662. mul_4_floats                   $14..17 *= $18..21
  663. add_2_floats                   $14..15 += $16..17
  664. add_float                      $14 += $15
  665. copy_4_slots_masked            v = Mask($11..14)
  666. copy_constant                  $15 = 0xC0800000 (-4.0)
  667. copy_constant                  $16 = 0xC1000000 (-8.0)
  668. copy_constant                  $17 = 0xC1400000 (-12.0)
  669. copy_constant                  $18 = 0xC1800000 (-16.0)
  670. cmpeq_4_floats                 $11..14 = equal($11..14, $15..18)
  671. bitwise_and_2_ints             $11..12 &= $13..14
  672. bitwise_and_int                $11 &= $12
  673. copy_slot_masked               [test_no_op_vec4_X_mat4].result = Mask($11)
  674. load_return_mask               RetMask = $10
  675. copy_slot_unmasked             $10 = [test_no_op_vec4_X_mat4].result
  676. label                          label 0x0000000A
  677. copy_slot_masked               $9 = Mask($10)
  678. label                          label 0x00000009
  679. load_condition_mask            CondMask = $43
  680. copy_4_constants               $0..3 = colorRed
  681. merge_condition_mask           CondMask = $8 & $9
  682. copy_4_constants               $4..7 = colorGreen
  683. copy_4_slots_masked            $0..3 = Mask($4..7)
  684. label                          label 0x0000000B
  685. load_condition_mask            CondMask = $8
  686. copy_4_slots_unmasked          [main].result = $0..3
  687. load_src                       src.rgba = [main].result
