    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_3_slots_unmasked          f[0](0..2) = 0
    4. zero_3_slots_unmasked          g[0](0..2) = 0
    5. zero_2_slots_unmasked          _3_b[0](0..1) = 0
    6. zero_2_slots_unmasked          _4_c[0](0..1) = 0
    7. zero_2_slots_unmasked          _5_d[0](0..1) = 0
    8. zero_2_slots_unmasked          _6_e[0](0..1) = 0
    9. zero_2_slots_unmasked          _7_f[0](0..1) = 0
   10. store_condition_mask           $8 = CondMask
   11. store_condition_mask           $21 = CondMask
   12. store_condition_mask           $26 = CondMask
   13. store_condition_mask           $16 = CondMask
   14. store_condition_mask           $35 = CondMask
   15. store_condition_mask           $31 = CondMask
   16. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#25)
   17. store_return_mask              $32 = RetMask
   18. copy_2_slots_unmasked          $33..34 = _3_b[0](0..1)
   19. copy_2_slots_unmasked          x[0](0..1) = $33..34
   20. copy_constant                  $33 = 0xFFFFFFFF
   21. copy_slot_masked               [check_array_is_int_2].result = Mask($33)
   22. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   23. load_return_mask               RetMask = $32
   24. copy_slot_unmasked             $32 = [check_array_is_int_2].result
   25. zero_slot_unmasked             $36 = 0
   26. merge_condition_mask           CondMask = $31 & $32
   27. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#37)
   28. store_return_mask              $37 = RetMask
   29. copy_2_slots_unmasked          $38..39 = _4_c[0](0..1)
   30. copy_2_slots_unmasked          x[0](0..1) = $38..39
   31. copy_constant                  $38 = 0xFFFFFFFF
   32. copy_slot_masked               [check_array_is_int_2].result = Mask($38)
   33. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   34. load_return_mask               RetMask = $37
   35. copy_slot_unmasked             $37 = [check_array_is_int_2].result
   36. copy_slot_masked               $36 = Mask($37)
   37. load_condition_mask            CondMask = $31
   38. zero_slot_unmasked             $17 = 0
   39. merge_condition_mask           CondMask = $35 & $36
   40. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#50)
   41. store_return_mask              $18 = RetMask
   42. copy_2_slots_unmasked          $19..20 = _5_d[0](0..1)
   43. copy_2_slots_unmasked          x[0](0..1) = $19..20
   44. copy_constant                  $19 = 0xFFFFFFFF
   45. copy_slot_masked               [check_array_is_int_2].result = Mask($19)
   46. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   47. load_return_mask               RetMask = $18
   48. copy_slot_unmasked             $18 = [check_array_is_int_2].result
   49. copy_slot_masked               $17 = Mask($18)
   50. load_condition_mask            CondMask = $35
   51. zero_slot_unmasked             $27 = 0
   52. merge_condition_mask           CondMask = $16 & $17
   53. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#63)
   54. store_return_mask              $28 = RetMask
   55. copy_2_slots_unmasked          $29..30 = _6_e[0](0..1)
   56. copy_2_slots_unmasked          x[0](0..1) = $29..30
   57. copy_constant                  $29 = 0xFFFFFFFF
   58. copy_slot_masked               [check_array_is_int_2].result = Mask($29)
   59. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   60. load_return_mask               RetMask = $28
   61. copy_slot_unmasked             $28 = [check_array_is_int_2].result
   62. copy_slot_masked               $27 = Mask($28)
   63. load_condition_mask            CondMask = $16
   64. zero_slot_unmasked             $22 = 0
   65. merge_condition_mask           CondMask = $26 & $27
   66. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#76)
   67. store_return_mask              $23 = RetMask
   68. copy_2_slots_unmasked          $24..25 = _7_f[0](0..1)
   69. copy_2_slots_unmasked          x[0](0..1) = $24..25
   70. copy_constant                  $24 = 0xFFFFFFFF
   71. copy_slot_masked               [check_array_is_int_2].result = Mask($24)
   72. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   73. load_return_mask               RetMask = $23
   74. copy_slot_unmasked             $23 = [check_array_is_int_2].result
   75. copy_slot_masked               $22 = Mask($23)
   76. load_condition_mask            CondMask = $26
   77. zero_slot_unmasked             $9 = 0
   78. merge_condition_mask           CondMask = $21 & $22
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (#105)
   80. store_return_mask              $10 = RetMask
   81. copy_3_slots_unmasked          $11..13 = f[0](0..2)
   82. copy_3_slots_unmasked          a[0](0..2) = $11..13
   83. copy_3_slots_unmasked          $11..13 = g[0](0..2)
   84. copy_3_slots_unmasked          b[0](0..2) = $11..13
   85. store_condition_mask           $23 = CondMask
   86. copy_constant                  $24 = 0xFFFFFFFF
   87. zero_slot_unmasked             $11 = 0
   88. merge_condition_mask           CondMask = $23 & $24
   89. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#99)
   90. store_return_mask              $12 = RetMask
   91. copy_3_slots_unmasked          $13..15 = b[0](0..2)
   92. copy_3_slots_unmasked          x[0](0..2) = $13..15
   93. copy_constant                  $13 = 0xFFFFFFFF
   94. copy_slot_masked               [check_array_is_float_3].result = Mask($13)
   95. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   96. load_return_mask               RetMask = $12
   97. copy_slot_unmasked             $12 = [check_array_is_float_3].result
   98. copy_slot_masked               $11 = Mask($12)
   99. load_condition_mask            CondMask = $23
  100. copy_slot_masked               [test_param].result = Mask($11)
  101. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  102. load_return_mask               RetMask = $10
  103. copy_slot_unmasked             $10 = [test_param].result
  104. copy_slot_masked               $9 = Mask($10)
  105. load_condition_mask            CondMask = $21
  106. copy_4_constants               $0..3 = colorRed
  107. merge_condition_mask           CondMask = $8 & $9
  108. copy_4_constants               $4..7 = colorGreen
  109. copy_4_slots_masked            $0..3 = Mask($4..7)
  110. load_condition_mask            CondMask = $8
  111. copy_4_slots_masked            [main].result = Mask($0..3)
  112. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  113. load_src                       src.rgba = [main].result
