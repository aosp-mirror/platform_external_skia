    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0xFFFFFFFF
    4. copy_slot_unmasked             ok = $0
    5. store_condition_mask           $8 = CondMask
    6. copy_constant                  $9 = colorGreen(1)
    7. copy_constant                  $10 = 0x3F800000 (1.0)
    8. cmpeq_float                    $9 = equal($9, $10)
    9. zero_slot_unmasked             $1 = 0
   10. merge_condition_mask           CondMask = $8 & $9
   11. copy_constant                  $2 = 0xFFFFFFFF
   12. copy_slot_masked               $1 = Mask($2)
   13. load_condition_mask            CondMask = $8
   14. bitwise_and_int                $0 &= $1
   15. copy_slot_masked               ok = Mask($0)
   16. store_condition_mask           $8 = CondMask
   17. copy_constant                  $9 = colorGreen(0)
   18. copy_constant                  $10 = 0x3F800000 (1.0)
   19. cmpeq_float                    $9 = equal($9, $10)
   20. copy_constant                  $1 = 0xFFFFFFFF
   21. merge_condition_mask           CondMask = $8 & $9
   22. zero_slot_unmasked             $2 = 0
   23. copy_slot_masked               $1 = Mask($2)
   24. load_condition_mask            CondMask = $8
   25. bitwise_and_int                $0 &= $1
   26. copy_slot_masked               ok = Mask($0)
   27. store_condition_mask           $8 = CondMask
   28. copy_slot_unmasked             $9 = ok
   29. copy_4_constants               $0..3 = colorRed
   30. merge_condition_mask           CondMask = $8 & $9
   31. copy_4_constants               $4..7 = colorGreen
   32. copy_4_slots_masked            $0..3 = Mask($4..7)
   33. load_condition_mask            CondMask = $8
   34. copy_4_slots_masked            [main].result = Mask($0..3)
   35. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   36. load_src                       src.rgba = [main].result
