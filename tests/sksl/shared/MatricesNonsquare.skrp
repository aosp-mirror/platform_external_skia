    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  _0_ok = 0xFFFFFFFF
    4. zero_slot_unmasked             $0 = 0
    5. copy_constant                  $1 = 0x40000000 (2.0)
    6. shuffle                        $0..5 = ($0..5)[1 0 0 0 1 0]
    7. copy_4_slots_unmasked          _1_m23(0..3) = $0..3
    8. copy_2_slots_unmasked          _1_m23(4..5) = $4..5
    9. copy_4_slots_unmasked          $0..3 = _0_ok, _1_m23(0..2)
   10. copy_3_slots_unmasked          $4..6 = _1_m23(3..5)
   11. copy_constant                  $7 = 0x40000000 (2.0)
   12. zero_3_slots_unmasked          $8..10 = 0
   13. copy_constant                  $11 = 0x40000000 (2.0)
   14. zero_slot_unmasked             $12 = 0
   15. cmpeq_n_floats                 $1..6 = equal($1..6, $7..12)
   16. bitwise_and_3_ints             $1..3 &= $4..6
   17. bitwise_and_int                $2 &= $3
   18. bitwise_and_int                $1 &= $2
   19. bitwise_and_int                $0 &= $1
   20. copy_slot_unmasked             _0_ok = $0
   21. zero_slot_unmasked             $0 = 0
   22. copy_constant                  $1 = 0x40400000 (3.0)
   23. shuffle                        $0..7 = ($0..7)[1 0 0 0 0 1 0 0]
   24. copy_4_slots_unmasked          _2_m24(0..3) = $0..3
   25. copy_4_slots_unmasked          _2_m24(4..7) = $4..7
   26. copy_slot_unmasked             $0 = _0_ok
   27. copy_4_slots_unmasked          $1..4 = _2_m24(0..3)
   28. copy_4_slots_unmasked          $5..8 = _2_m24(4..7)
   29. copy_constant                  $9 = 0x40400000 (3.0)
   30. zero_4_slots_unmasked          $10..13 = 0
   31. copy_constant                  $14 = 0x40400000 (3.0)
   32. zero_2_slots_unmasked          $15..16 = 0
   33. cmpeq_n_floats                 $1..8 = equal($1..8, $9..16)
   34. bitwise_and_4_ints             $1..4 &= $5..8
   35. bitwise_and_2_ints             $1..2 &= $3..4
   36. bitwise_and_int                $1 &= $2
   37. bitwise_and_int                $0 &= $1
   38. copy_slot_unmasked             _0_ok = $0
   39. zero_slot_unmasked             $0 = 0
   40. copy_constant                  $1 = 0x40800000 (4.0)
   41. shuffle                        $0..5 = ($0..5)[1 0 0 1 0 0]
   42. copy_4_slots_unmasked          _3_m32(0..3) = $0..3
   43. copy_2_slots_unmasked          _3_m32(4..5) = $4..5
   44. copy_slot_unmasked             $0 = _0_ok
   45. copy_4_slots_unmasked          $1..4 = _3_m32(0..3)
   46. copy_2_slots_unmasked          $5..6 = _3_m32(4..5)
   47. copy_constant                  $7 = 0x40800000 (4.0)
   48. zero_2_slots_unmasked          $8..9 = 0
   49. copy_constant                  $10 = 0x40800000 (4.0)
   50. zero_2_slots_unmasked          $11..12 = 0
   51. cmpeq_n_floats                 $1..6 = equal($1..6, $7..12)
   52. bitwise_and_3_ints             $1..3 &= $4..6
   53. bitwise_and_int                $2 &= $3
   54. bitwise_and_int                $1 &= $2
   55. bitwise_and_int                $0 &= $1
   56. copy_slot_unmasked             _0_ok = $0
   57. copy_4_slots_unmasked          $43..46 = _3_m32(0..3)
   58. copy_2_slots_unmasked          $47..48 = _3_m32(4..5)
   59. shuffle                        $44..48 = ($44..48)[1 3 0 2 4]
   60. copy_4_slots_unmasked          $49..52 = _1_m23(0..3)
   61. copy_2_slots_unmasked          $53..54 = _1_m23(4..5)
   62. copy_3_slots_unmasked          $0..2 = $43..45
   63. copy_3_slots_unmasked          $3..5 = $49..51
   64. dot_3_floats                   $0 = dot($0..2, $3..5)
   65. copy_3_slots_unmasked          $1..3 = $46..48
   66. copy_3_slots_unmasked          $4..6 = $49..51
   67. dot_3_floats                   $1 = dot($1..3, $4..6)
   68. copy_3_slots_unmasked          $2..4 = $43..45
   69. copy_3_slots_unmasked          $5..7 = $52..54
   70. dot_3_floats                   $2 = dot($2..4, $5..7)
   71. copy_3_slots_unmasked          $3..5 = $46..48
   72. copy_3_slots_unmasked          $6..8 = $52..54
   73. dot_3_floats                   $3 = dot($3..5, $6..8)
   74. copy_4_slots_unmasked          _7_m22 = $0..3
   75. copy_slot_unmasked             $0 = _0_ok
   76. copy_4_slots_unmasked          $1..4 = _7_m22
   77. zero_slot_unmasked             $5 = 0
   78. copy_constant                  $6 = 0x41000000 (8.0)
   79. swizzle_4                      $5..8 = ($5..8).yxxy
   80. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   81. bitwise_and_2_ints             $1..2 &= $3..4
   82. bitwise_and_int                $1 &= $2
   83. bitwise_and_int                $0 &= $1
   84. copy_slot_unmasked             _0_ok = $0
   85. copy_4_slots_unmasked          $0..3 = _1_m23(0..3)
   86. copy_2_slots_unmasked          $4..5 = _1_m23(4..5)
   87. copy_constant                  $6 = 0x3F800000 (1.0)
   88. swizzle_4                      $6..9 = ($6..9).xxxx
   89. swizzle_3                      $9..11 = ($9..11).xxx
   90. add_n_floats                   $0..5 += $6..11
   91. copy_4_slots_unmasked          _1_m23(0..3) = $0..3
   92. copy_2_slots_unmasked          _1_m23(4..5) = $4..5
   93. copy_4_slots_unmasked          $0..3 = _0_ok, _1_m23(0..2)
   94. copy_3_slots_unmasked          $4..6 = _1_m23(3..5)
   95. copy_constant                  $7 = 0x40400000 (3.0)
   96. copy_constant                  $8 = 0x3F800000 (1.0)
   97. copy_constant                  $9 = 0x3F800000 (1.0)
   98. copy_constant                  $10 = 0x3F800000 (1.0)
   99. copy_constant                  $11 = 0x40400000 (3.0)
  100. copy_constant                  $12 = 0x3F800000 (1.0)
  101. cmpeq_n_floats                 $1..6 = equal($1..6, $7..12)
  102. bitwise_and_3_ints             $1..3 &= $4..6
  103. bitwise_and_int                $2 &= $3
  104. bitwise_and_int                $1 &= $2
  105. bitwise_and_int                $0 &= $1
  106. copy_slot_unmasked             _0_ok = $0
  107. copy_4_slots_unmasked          $0..3 = _3_m32(0..3)
  108. copy_2_slots_unmasked          $4..5 = _3_m32(4..5)
  109. copy_constant                  $6 = 0x40000000 (2.0)
  110. swizzle_4                      $6..9 = ($6..9).xxxx
  111. swizzle_3                      $9..11 = ($9..11).xxx
  112. sub_n_floats                   $0..5 -= $6..11
  113. copy_4_slots_unmasked          _3_m32(0..3) = $0..3
  114. copy_2_slots_unmasked          _3_m32(4..5) = $4..5
  115. copy_slot_unmasked             $0 = _0_ok
  116. copy_4_slots_unmasked          $1..4 = _3_m32(0..3)
  117. copy_2_slots_unmasked          $5..6 = _3_m32(4..5)
  118. copy_constant                  $7 = 0x40000000 (2.0)
  119. copy_constant                  $8 = 0xC0000000 (-2.0)
  120. copy_constant                  $9 = 0xC0000000 (-2.0)
  121. copy_constant                  $10 = 0x40000000 (2.0)
  122. copy_constant                  $11 = 0xC0000000 (-2.0)
  123. copy_constant                  $12 = 0xC0000000 (-2.0)
  124. cmpeq_n_floats                 $1..6 = equal($1..6, $7..12)
  125. bitwise_and_3_ints             $1..3 &= $4..6
  126. bitwise_and_int                $2 &= $3
  127. bitwise_and_int                $1 &= $2
  128. bitwise_and_int                $0 &= $1
  129. copy_slot_unmasked             _0_ok = $0
  130. copy_4_slots_unmasked          $0..3 = _2_m24(0..3)
  131. copy_4_slots_unmasked          $4..7 = _2_m24(4..7)
  132. copy_constant                  $8 = 0x3E800000 (0.25)
  133. swizzle_4                      $8..11 = ($8..11).xxxx
  134. copy_4_slots_unmasked          $12..15 = $8..11
  135. mul_n_floats                   $0..7 *= $8..15
  136. copy_4_slots_unmasked          _2_m24(0..3) = $0..3
  137. copy_4_slots_unmasked          _2_m24(4..7) = $4..7
  138. copy_slot_unmasked             $0 = _0_ok
  139. copy_4_slots_unmasked          $1..4 = _2_m24(0..3)
  140. copy_4_slots_unmasked          $5..8 = _2_m24(4..7)
  141. copy_constant                  $9 = 0x3F400000 (0.75)
  142. zero_4_slots_unmasked          $10..13 = 0
  143. copy_constant                  $14 = 0x3F400000 (0.75)
  144. zero_2_slots_unmasked          $15..16 = 0
  145. cmpeq_n_floats                 $1..8 = equal($1..8, $9..16)
  146. bitwise_and_4_ints             $1..4 &= $5..8
  147. bitwise_and_2_ints             $1..2 &= $3..4
  148. bitwise_and_int                $1 &= $2
  149. bitwise_and_int                $0 &= $1
  150. copy_slot_unmasked             _0_ok = $0
  151. store_condition_mask           $43 = CondMask
  152. store_condition_mask           $17 = CondMask
  153. copy_slot_unmasked             $18 = _0_ok
  154. zero_slot_unmasked             $44 = 0
  155. merge_condition_mask           CondMask = $17 & $18
  156. branch_if_no_active_lanes      branch_if_no_active_lanes +267 (label 0 at #423)
  157. copy_constant                  ok = 0xFFFFFFFF
  158. zero_slot_unmasked             $45 = 0
  159. copy_constant                  $46 = 0x40000000 (2.0)
  160. shuffle                        $45..50 = ($45..50)[1 0 0 0 1 0]
  161. copy_4_slots_unmasked          m23(0..3) = $45..48
  162. copy_2_slots_unmasked          m23(4..5) = $49..50
  163. copy_4_slots_unmasked          $45..48 = ok, m23(0..2)
  164. copy_3_slots_unmasked          $49..51 = m23(3..5)
  165. copy_constant                  $52 = 0x40000000 (2.0)
  166. zero_3_slots_unmasked          $53..55 = 0
  167. copy_constant                  $56 = 0x40000000 (2.0)
  168. zero_slot_unmasked             $57 = 0
  169. cmpeq_n_floats                 $46..51 = equal($46..51, $52..57)
  170. bitwise_and_3_ints             $46..48 &= $49..51
  171. bitwise_and_int                $47 &= $48
  172. bitwise_and_int                $46 &= $47
  173. bitwise_and_int                $45 &= $46
  174. copy_slot_masked               ok = Mask($45)
  175. zero_slot_unmasked             $45 = 0
  176. copy_constant                  $46 = 0x40400000 (3.0)
  177. shuffle                        $45..52 = ($45..52)[1 0 0 0 0 1 0 0]
  178. copy_4_slots_unmasked          m24(0..3) = $45..48
  179. copy_4_slots_unmasked          m24(4..7) = $49..52
  180. copy_slot_unmasked             $45 = ok
  181. copy_4_slots_unmasked          $46..49 = m24(0..3)
  182. copy_4_slots_unmasked          $50..53 = m24(4..7)
  183. copy_constant                  $54 = 0x40400000 (3.0)
  184. zero_4_slots_unmasked          $55..58 = 0
  185. copy_constant                  $59 = 0x40400000 (3.0)
  186. zero_2_slots_unmasked          $60..61 = 0
  187. cmpeq_n_floats                 $46..53 = equal($46..53, $54..61)
  188. bitwise_and_4_ints             $46..49 &= $50..53
  189. bitwise_and_2_ints             $46..47 &= $48..49
  190. bitwise_and_int                $46 &= $47
  191. bitwise_and_int                $45 &= $46
  192. copy_slot_masked               ok = Mask($45)
  193. zero_slot_unmasked             $45 = 0
  194. copy_constant                  $46 = 0x40800000 (4.0)
  195. shuffle                        $45..50 = ($45..50)[1 0 0 1 0 0]
  196. copy_4_slots_unmasked          m32(0..3) = $45..48
  197. copy_2_slots_unmasked          m32(4..5) = $49..50
  198. copy_slot_unmasked             $45 = ok
  199. copy_4_slots_unmasked          $46..49 = m32(0..3)
  200. copy_2_slots_unmasked          $50..51 = m32(4..5)
  201. copy_constant                  $52 = 0x40800000 (4.0)
  202. zero_2_slots_unmasked          $53..54 = 0
  203. copy_constant                  $55 = 0x40800000 (4.0)
  204. zero_2_slots_unmasked          $56..57 = 0
  205. cmpeq_n_floats                 $46..51 = equal($46..51, $52..57)
  206. bitwise_and_3_ints             $46..48 &= $49..51
  207. bitwise_and_int                $47 &= $48
  208. bitwise_and_int                $46 &= $47
  209. bitwise_and_int                $45 &= $46
  210. copy_slot_masked               ok = Mask($45)
  211. zero_slot_unmasked             $45 = 0
  212. copy_constant                  $46 = 0x40A00000 (5.0)
  213. shuffle                        $45..56 = ($45..56)[1 0 0 0 0 1 0 0 0 0 1 0]
  214. copy_4_slots_unmasked          m34(0..3) = $45..48
  215. copy_4_slots_unmasked          m34(4..7) = $49..52
  216. copy_4_slots_unmasked          m34(8..11) = $53..56
  217. copy_slot_unmasked             $45 = ok
  218. copy_4_slots_unmasked          $46..49 = m34(0..3)
  219. copy_4_slots_unmasked          $50..53 = m34(4..7)
  220. copy_4_slots_unmasked          $54..57 = m34(8..11)
  221. copy_constant                  $58 = 0x40A00000 (5.0)
  222. zero_4_slots_unmasked          $59..62 = 0
  223. copy_constant                  $63 = 0x40A00000 (5.0)
  224. zero_4_slots_unmasked          $64..67 = 0
  225. copy_constant                  $68 = 0x40A00000 (5.0)
  226. zero_slot_unmasked             $69 = 0
  227. cmpeq_n_floats                 $46..57 = equal($46..57, $58..69)
  228. bitwise_and_4_ints             $50..53 &= $54..57
  229. bitwise_and_4_ints             $46..49 &= $50..53
  230. bitwise_and_2_ints             $46..47 &= $48..49
  231. bitwise_and_int                $46 &= $47
  232. bitwise_and_int                $45 &= $46
  233. copy_slot_masked               ok = Mask($45)
  234. zero_slot_unmasked             $45 = 0
  235. copy_constant                  $46 = 0x40C00000 (6.0)
  236. shuffle                        $45..52 = ($45..52)[1 0 0 1 0 0 0 0]
  237. copy_4_slots_unmasked          m42(0..3) = $45..48
  238. copy_4_slots_unmasked          m42(4..7) = $49..52
  239. copy_slot_unmasked             $45 = ok
  240. copy_4_slots_unmasked          $46..49 = m42(0..3)
  241. copy_4_slots_unmasked          $50..53 = m42(4..7)
  242. copy_constant                  $54 = 0x40C00000 (6.0)
  243. zero_2_slots_unmasked          $55..56 = 0
  244. copy_constant                  $57 = 0x40C00000 (6.0)
  245. zero_4_slots_unmasked          $58..61 = 0
  246. cmpeq_n_floats                 $46..53 = equal($46..53, $54..61)
  247. bitwise_and_4_ints             $46..49 &= $50..53
  248. bitwise_and_2_ints             $46..47 &= $48..49
  249. bitwise_and_int                $46 &= $47
  250. bitwise_and_int                $45 &= $46
  251. copy_slot_masked               ok = Mask($45)
  252. zero_slot_unmasked             $45 = 0
  253. copy_constant                  $46 = 0x40E00000 (7.0)
  254. shuffle                        $45..56 = ($45..56)[1 0 0 0 1 0 0 0 1 0 0 0]
  255. copy_4_slots_unmasked          m43(0..3) = $45..48
  256. copy_4_slots_unmasked          m43(4..7) = $49..52
  257. copy_4_slots_unmasked          m43(8..11) = $53..56
  258. copy_slot_unmasked             $45 = ok
  259. copy_4_slots_unmasked          $46..49 = m43(0..3)
  260. copy_4_slots_unmasked          $50..53 = m43(4..7)
  261. copy_4_slots_unmasked          $54..57 = m43(8..11)
  262. copy_constant                  $58 = 0x40E00000 (7.0)
  263. zero_3_slots_unmasked          $59..61 = 0
  264. copy_constant                  $62 = 0x40E00000 (7.0)
  265. zero_3_slots_unmasked          $63..65 = 0
  266. copy_constant                  $66 = 0x40E00000 (7.0)
  267. zero_3_slots_unmasked          $67..69 = 0
  268. cmpeq_n_floats                 $46..57 = equal($46..57, $58..69)
  269. bitwise_and_4_ints             $50..53 &= $54..57
  270. bitwise_and_4_ints             $46..49 &= $50..53
  271. bitwise_and_2_ints             $46..47 &= $48..49
  272. bitwise_and_int                $46 &= $47
  273. bitwise_and_int                $45 &= $46
  274. copy_slot_masked               ok = Mask($45)
  275. copy_4_slots_unmasked          $19..22 = m32(0..3)
  276. copy_2_slots_unmasked          $23..24 = m32(4..5)
  277. shuffle                        $20..24 = ($20..24)[1 3 0 2 4]
  278. copy_4_slots_unmasked          $25..28 = m23(0..3)
  279. copy_2_slots_unmasked          $29..30 = m23(4..5)
  280. copy_3_slots_unmasked          $45..47 = $19..21
  281. copy_3_slots_unmasked          $48..50 = $25..27
  282. dot_3_floats                   $45 = dot($45..47, $48..50)
  283. copy_3_slots_unmasked          $46..48 = $22..24
  284. copy_3_slots_unmasked          $49..51 = $25..27
  285. dot_3_floats                   $46 = dot($46..48, $49..51)
  286. copy_3_slots_unmasked          $47..49 = $19..21
  287. copy_3_slots_unmasked          $50..52 = $28..30
  288. dot_3_floats                   $47 = dot($47..49, $50..52)
  289. copy_3_slots_unmasked          $48..50 = $22..24
  290. copy_3_slots_unmasked          $51..53 = $28..30
  291. dot_3_floats                   $48 = dot($48..50, $51..53)
  292. copy_4_slots_unmasked          m22 = $45..48
  293. copy_slot_unmasked             $45 = ok
  294. copy_4_slots_unmasked          $46..49 = m22
  295. zero_slot_unmasked             $50 = 0
  296. copy_constant                  $51 = 0x41000000 (8.0)
  297. swizzle_4                      $50..53 = ($50..53).yxxy
  298. cmpeq_4_floats                 $46..49 = equal($46..49, $50..53)
  299. bitwise_and_2_ints             $46..47 &= $48..49
  300. bitwise_and_int                $46 &= $47
  301. bitwise_and_int                $45 &= $46
  302. copy_slot_masked               ok = Mask($45)
  303. copy_4_slots_unmasked          $19..22 = m43(0..3)
  304. copy_4_slots_unmasked          $23..26 = m43(4..7)
  305. copy_4_slots_unmasked          $27..30 = m43(8..11)
  306. shuffle                        $20..30 = ($20..30)[2 5 8 0 3 6 9 1 4 7 10]
  307. copy_4_slots_unmasked          $31..34 = m34(0..3)
  308. copy_4_slots_unmasked          $35..38 = m34(4..7)
  309. copy_4_slots_unmasked          $39..42 = m34(8..11)
  310. copy_4_slots_unmasked          $45..48 = $19..22
  311. copy_4_slots_unmasked          $49..52 = $31..34
  312. dot_4_floats                   $45 = dot($45..48, $49..52)
  313. copy_4_slots_unmasked          $46..49 = $23..26
  314. copy_4_slots_unmasked          $50..53 = $31..34
  315. dot_4_floats                   $46 = dot($46..49, $50..53)
  316. copy_4_slots_unmasked          $47..50 = $27..30
  317. copy_4_slots_unmasked          $51..54 = $31..34
  318. dot_4_floats                   $47 = dot($47..50, $51..54)
  319. copy_4_slots_unmasked          $48..51 = $19..22
  320. copy_4_slots_unmasked          $52..55 = $35..38
  321. dot_4_floats                   $48 = dot($48..51, $52..55)
  322. copy_4_slots_unmasked          $49..52 = $23..26
  323. copy_4_slots_unmasked          $53..56 = $35..38
  324. dot_4_floats                   $49 = dot($49..52, $53..56)
  325. copy_4_slots_unmasked          $50..53 = $27..30
  326. copy_4_slots_unmasked          $54..57 = $35..38
  327. dot_4_floats                   $50 = dot($50..53, $54..57)
  328. copy_4_slots_unmasked          $51..54 = $19..22
  329. copy_4_slots_unmasked          $55..58 = $39..42
  330. dot_4_floats                   $51 = dot($51..54, $55..58)
  331. copy_4_slots_unmasked          $52..55 = $23..26
  332. copy_4_slots_unmasked          $56..59 = $39..42
  333. dot_4_floats                   $52 = dot($52..55, $56..59)
  334. copy_4_slots_unmasked          $53..56 = $27..30
  335. copy_4_slots_unmasked          $57..60 = $39..42
  336. dot_4_floats                   $53 = dot($53..56, $57..60)
  337. copy_4_slots_unmasked          m33(0..3) = $45..48
  338. copy_4_slots_unmasked          m33(4..7) = $49..52
  339. copy_slot_unmasked             m33(8) = $53
  340. copy_slot_unmasked             $45 = ok
  341. copy_4_slots_unmasked          $46..49 = m33(0..3)
  342. copy_4_slots_unmasked          $50..53 = m33(4..7)
  343. copy_slot_unmasked             $54 = m33(8)
  344. zero_slot_unmasked             $55 = 0
  345. copy_constant                  $56 = 0x420C0000 (35.0)
  346. shuffle                        $55..63 = ($55..63)[1 0 0 0 1 0 0 0 1]
  347. cmpeq_n_floats                 $46..54 = equal($46..54, $55..63)
  348. bitwise_and_4_ints             $47..50 &= $51..54
  349. bitwise_and_2_ints             $47..48 &= $49..50
  350. bitwise_and_int                $47 &= $48
  351. bitwise_and_int                $46 &= $47
  352. bitwise_and_int                $45 &= $46
  353. copy_slot_masked               ok = Mask($45)
  354. copy_4_slots_unmasked          $45..48 = m23(0..3)
  355. copy_2_slots_unmasked          $49..50 = m23(4..5)
  356. copy_constant                  $51 = 0x3F800000 (1.0)
  357. swizzle_4                      $51..54 = ($51..54).xxxx
  358. swizzle_3                      $54..56 = ($54..56).xxx
  359. add_n_floats                   $45..50 += $51..56
  360. copy_4_slots_masked            m23(0..3) = Mask($45..48)
  361. copy_2_slots_masked            m23(4..5) = Mask($49..50)
  362. copy_4_slots_unmasked          $45..48 = ok, m23(0..2)
  363. copy_3_slots_unmasked          $49..51 = m23(3..5)
  364. copy_constant                  $52 = 0x40400000 (3.0)
  365. copy_constant                  $53 = 0x3F800000 (1.0)
  366. copy_constant                  $54 = 0x3F800000 (1.0)
  367. copy_constant                  $55 = 0x3F800000 (1.0)
  368. copy_constant                  $56 = 0x40400000 (3.0)
  369. copy_constant                  $57 = 0x3F800000 (1.0)
  370. cmpeq_n_floats                 $46..51 = equal($46..51, $52..57)
  371. bitwise_and_3_ints             $46..48 &= $49..51
  372. bitwise_and_int                $47 &= $48
  373. bitwise_and_int                $46 &= $47
  374. bitwise_and_int                $45 &= $46
  375. copy_slot_masked               ok = Mask($45)
  376. copy_4_slots_unmasked          $45..48 = m32(0..3)
  377. copy_2_slots_unmasked          $49..50 = m32(4..5)
  378. copy_constant                  $51 = 0x40000000 (2.0)
  379. swizzle_4                      $51..54 = ($51..54).xxxx
  380. swizzle_3                      $54..56 = ($54..56).xxx
  381. sub_n_floats                   $45..50 -= $51..56
  382. copy_4_slots_masked            m32(0..3) = Mask($45..48)
  383. copy_2_slots_masked            m32(4..5) = Mask($49..50)
  384. copy_slot_unmasked             $45 = ok
  385. copy_4_slots_unmasked          $46..49 = m32(0..3)
  386. copy_2_slots_unmasked          $50..51 = m32(4..5)
  387. copy_constant                  $52 = 0x40000000 (2.0)
  388. copy_constant                  $53 = 0xC0000000 (-2.0)
  389. copy_constant                  $54 = 0xC0000000 (-2.0)
  390. copy_constant                  $55 = 0x40000000 (2.0)
  391. copy_constant                  $56 = 0xC0000000 (-2.0)
  392. copy_constant                  $57 = 0xC0000000 (-2.0)
  393. cmpeq_n_floats                 $46..51 = equal($46..51, $52..57)
  394. bitwise_and_3_ints             $46..48 &= $49..51
  395. bitwise_and_int                $47 &= $48
  396. bitwise_and_int                $46 &= $47
  397. bitwise_and_int                $45 &= $46
  398. copy_slot_masked               ok = Mask($45)
  399. copy_4_slots_unmasked          $45..48 = m24(0..3)
  400. copy_4_slots_unmasked          $49..52 = m24(4..7)
  401. copy_constant                  $53 = 0x3E800000 (0.25)
  402. swizzle_4                      $53..56 = ($53..56).xxxx
  403. copy_4_slots_unmasked          $57..60 = $53..56
  404. mul_n_floats                   $45..52 *= $53..60
  405. copy_4_slots_masked            m24(0..3) = Mask($45..48)
  406. copy_4_slots_masked            m24(4..7) = Mask($49..52)
  407. copy_slot_unmasked             $45 = ok
  408. copy_4_slots_unmasked          $46..49 = m24(0..3)
  409. copy_4_slots_unmasked          $50..53 = m24(4..7)
  410. copy_constant                  $54 = 0x3F400000 (0.75)
  411. zero_4_slots_unmasked          $55..58 = 0
  412. copy_constant                  $59 = 0x3F400000 (0.75)
  413. zero_2_slots_unmasked          $60..61 = 0
  414. cmpeq_n_floats                 $46..53 = equal($46..53, $54..61)
  415. bitwise_and_4_ints             $46..49 &= $50..53
  416. bitwise_and_2_ints             $46..47 &= $48..49
  417. bitwise_and_int                $46 &= $47
  418. bitwise_and_int                $45 &= $46
  419. copy_slot_masked               ok = Mask($45)
  420. copy_slot_masked               [test_half].result = Mask($45)
  421. label                          label 0x00000001
  422. copy_slot_masked               $44 = Mask($45)
  423. label                          label 0x00000000
  424. load_condition_mask            CondMask = $17
  425. copy_4_constants               $0..3 = colorRed
  426. merge_condition_mask           CondMask = $43 & $44
  427. copy_4_constants               $4..7 = colorGreen
  428. copy_4_slots_masked            $0..3 = Mask($4..7)
  429. label                          label 0x00000002
  430. load_condition_mask            CondMask = $43
  431. copy_4_slots_unmasked          [main].result = $0..3
  432. load_src                       src.rgba = [main].result
