    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0x3F800000 (1.0)
    4. copy_slot_unmasked             x = $0
    5. store_condition_mask           $8 = CondMask
    6. branch_if_no_active_lanes      branch_if_no_active_lanes +17 (#23)
    7. store_return_mask              $9 = RetMask
    8. copy_constant                  $10 = 0x40000000 (2.0)
    9. copy_slot_masked               y = Mask($10)
   10. copy_slot_unmasked             $10 = x
   11. copy_constant                  $11 = 0x3F800000 (1.0)
   12. cmpeq_float                    $10 = equal($10, $11)
   13. copy_slot_unmasked             $11 = y
   14. copy_constant                  $12 = 0x40000000 (2.0)
   15. cmpeq_float                    $11 = equal($11, $12)
   16. bitwise_and_int                $10 &= $11
   17. copy_slot_masked               [out_params_are_distinct_from_global].result = Mask($10)
   18. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   19. load_return_mask               RetMask = $9
   20. copy_slot_unmasked             $9 = y
   21. copy_slot_masked               x = Mask($9)
   22. copy_slot_unmasked             $9 = [out_params_are_distinct_from_global].result
   23. copy_4_constants               $0..3 = colorRed
   24. merge_condition_mask           CondMask = $8 & $9
   25. copy_4_constants               $4..7 = colorGreen
   26. copy_4_slots_masked            $0..3 = Mask($4..7)
   27. load_condition_mask            CondMask = $8
   28. copy_4_slots_masked            [main].result = Mask($0..3)
   29. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   30. load_src                       src.rgba = [main].result
