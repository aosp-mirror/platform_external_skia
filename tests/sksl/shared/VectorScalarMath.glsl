
out vec4 sk_FragColor;
uniform vec4 colorRed;
uniform vec4 colorGreen;
uniform float unknownInput;
bool test_half_b() {
    bool ok = true;
    vec4 inputRed = colorRed;
    vec4 inputGreen = colorGreen;
    vec4 x = inputRed + 2.0;
    ok = ok && x == vec4(3.0, 2.0, 2.0, 3.0);
    x = inputGreen.ywxz - 2.0;
    ok = ok && x == vec4(-1.0, -1.0, -2.0, -2.0);
    x = inputRed + inputGreen.y;
    ok = ok && x == vec4(2.0, 1.0, 1.0, 2.0);
    x.xyz = inputGreen.wyw * 9.0;
    ok = ok && x == vec4(9.0, 9.0, 9.0, 2.0);
    x.xy = x.zw / 0.5;
    ok = ok && x == vec4(18.0, 4.0, 9.0, 2.0);
    x = (inputRed * 5.0).yxwz;
    ok = ok && x == vec4(0.0, 5.0, 5.0, 0.0);
    x = 2.0 + inputRed;
    ok = ok && x == vec4(3.0, 2.0, 2.0, 3.0);
    x = 10.0 - inputGreen.ywxz;
    ok = ok && x == vec4(9.0, 9.0, 10.0, 10.0);
    x = inputRed.x + inputGreen;
    ok = ok && x == vec4(1.0, 2.0, 1.0, 2.0);
    x.xyz = 8.0 * inputGreen.wyw;
    ok = ok && x == vec4(8.0, 8.0, 8.0, 2.0);
    x.xy = 32.0 / x.zw;
    ok = ok && x == vec4(4.0, 16.0, 8.0, 2.0);
    x = (32.0 / x).yxwz;
    ok = ok && x == vec4(2.0, 8.0, 16.0, 4.0);
    x += 2.0;
    x *= 2.0;
    x -= 4.0;
    x /= 2.0;
    ok = ok && x == vec4(2.0, 8.0, 16.0, 4.0);
    x = x + 2.0;
    x = x * 2.0;
    x = x - 4.0;
    x = x / 2.0;
    ok = ok && x == vec4(2.0, 8.0, 16.0, 4.0);
    return ok;
}
bool test_int_b() {
    bool ok = true;
    ivec4 inputRed = ivec4(colorRed);
    ivec4 inputGreen = ivec4(colorGreen);
    ivec4 x = inputRed + 2;
    ok = ok && x == ivec4(3, 2, 2, 3);
    x = inputGreen.ywxz - 2;
    ok = ok && x == ivec4(-1, -1, -2, -2);
    x = inputRed + inputGreen.y;
    ok = ok && x == ivec4(2, 1, 1, 2);
    x.xyz = inputGreen.wyw * 9;
    ok = ok && x == ivec4(9, 9, 9, 2);
    x.xy = x.zw / 4;
    ok = ok && x == ivec4(2, 0, 9, 2);
    x = (inputRed * 5).yxwz;
    ok = ok && x == ivec4(0, 5, 5, 0);
    x = 2 + inputRed;
    ok = ok && x == ivec4(3, 2, 2, 3);
    x = 10 - inputGreen.ywxz;
    ok = ok && x == ivec4(9, 9, 10, 10);
    x = inputRed.x + inputGreen;
    ok = ok && x == ivec4(1, 2, 1, 2);
    x.xyz = 8 * inputGreen.wyw;
    ok = ok && x == ivec4(8, 8, 8, 2);
    x.xy = 36 / x.zw;
    ok = ok && x == ivec4(4, 18, 8, 2);
    x = (37 / x).yxwz;
    ok = ok && x == ivec4(2, 9, 18, 4);
    x += 2;
    x *= 2;
    x -= 4;
    x /= 2;
    ok = ok && x == ivec4(2, 9, 18, 4);
    x = x + 2;
    x = x * 2;
    x = x - 4;
    x = x / 2;
    ok = ok && x == ivec4(2, 9, 18, 4);
    return ok;
}
vec4 main() {
    return test_half_b() && test_int_b() ? colorGreen : colorRed;
}
