    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_4_constants               $0..3 = colorWhite
    4. copy_4_slots_unmasked          x = $0..3
    5. copy_constant                  $0 = 0xC0A00000 (-5.0)
    6. copy_slot_unmasked             r = $0
    7. store_loop_mask                $0 = LoopMask
    8. jump                           jump +20 (#28)
    9. zero_slot_unmasked             [for-loop continue mask 0] = 0
   10. copy_slot_unmasked             $1 = r
   11. zero_slot_unmasked             $2 = 0
   12. max_float                      $1 = max($1, $2)
   13. copy_constant                  $2 = 0x3F800000 (1.0)
   14. min_float                      $1 = min($1, $2)
   15. copy_slot_masked               x(0) = Mask($1)
   16. store_condition_mask           $1 = CondMask
   17. copy_slot_unmasked             $2 = x(0)
   18. zero_slot_unmasked             $3 = 0
   19. cmpeq_float                    $2 = equal($2, $3)
   20. merge_condition_mask           CondMask = $1 & $2
   21. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   22. load_condition_mask            CondMask = $1
   23. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   24. copy_slot_unmasked             $1 = r
   25. copy_constant                  $2 = 0x3F800000 (1.0)
   26. add_float                      $1 += $2
   27. copy_slot_masked               r = Mask($1)
   28. copy_slot_unmasked             $1 = r
   29. copy_constant                  $2 = 0x40A00000 (5.0)
   30. cmplt_float                    $1 = lessThan($1, $2)
   31. merge_loop_mask                LoopMask &= $1
   32. stack_rewind
   33. branch_if_any_active_lanes     branch_if_any_active_lanes -24 (#9)
   34. load_loop_mask                 LoopMask = $0
   35. copy_constant                  $0 = 0x40A00000 (5.0)
   36. copy_slot_unmasked             b = $0
   37. store_loop_mask                $0 = LoopMask
   38. jump                           jump +20 (#58)
   39. zero_slot_unmasked             [for-loop continue mask 1] = 0
   40. copy_slot_unmasked             $1 = b
   41. copy_slot_masked               x(2) = Mask($1)
   42. store_condition_mask           $1 = CondMask
   43. copy_slot_unmasked             $2 = x(3)
   44. copy_constant                  $3 = 0x3F800000 (1.0)
   45. cmpeq_float                    $2 = equal($2, $3)
   46. merge_condition_mask           CondMask = $1 & $2
   47. copy_constant                  $3 = 0xFFFFFFFF
   48. copy_slot_masked               [for-loop continue mask 1] = Mask($3)
   49. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   50. load_condition_mask            CondMask = $1
   51. zero_slot_unmasked             $1 = 0
   52. copy_slot_masked               x(1) = Mask($1)
   53. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   54. copy_slot_unmasked             $1 = b
   55. copy_constant                  $2 = 0x3F800000 (1.0)
   56. sub_float                      $1 -= $2
   57. copy_slot_masked               b = Mask($1)
   58. zero_slot_unmasked             $1 = 0
   59. copy_slot_unmasked             $2 = b
   60. cmple_float                    $1 = lessThanEqual($1, $2)
   61. merge_loop_mask                LoopMask &= $1
   62. stack_rewind
   63. branch_if_any_active_lanes     branch_if_any_active_lanes -24 (#39)
   64. load_loop_mask                 LoopMask = $0
   65. copy_4_slots_unmasked          $0..3 = x
   66. copy_4_slots_masked            [main].result = Mask($0..3)
   67. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   68. load_src                       src.rgba = [main].result
