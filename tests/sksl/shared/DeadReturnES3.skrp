    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $12 = CondMask
    4. store_condition_mask           $22 = CondMask
    5. store_condition_mask           $25 = CondMask
    6. store_condition_mask           $17 = CondMask
    7. store_condition_mask           $39 = CondMask
    8. store_condition_mask           $31 = CondMask
    9. store_condition_mask           $8 = CondMask
   10. store_condition_mask           $35 = CondMask
   11. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 0 at #25)
   12. store_return_mask              $36 = RetMask
   13. store_loop_mask                $37 = LoopMask
   14. label                          label 0x00000001
   15. copy_constant                  $38 = 0xFFFFFFFF
   16. copy_slot_masked               [test_return].result = Mask($38)
   17. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   18. zero_slot_unmasked             $38 = 0
   19. merge_loop_mask                LoopMask &= $38
   20. stack_rewind
   21. branch_if_any_active_lanes     branch_if_any_active_lanes -7 (label 1 at #14)
   22. load_loop_mask                 LoopMask = $37
   23. load_return_mask               RetMask = $36
   24. copy_slot_unmasked             $36 = [test_return].result
   25. label                          label 0x00000000
   26. zero_slot_unmasked             $9 = 0
   27. merge_condition_mask           CondMask = $35 & $36
   28. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 2 at #41)
   29. store_loop_mask                $10 = LoopMask
   30. label                          label 0x00000004
   31. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   32. zero_slot_unmasked             $11 = 0
   33. merge_loop_mask                LoopMask &= $11
   34. stack_rewind
   35. branch_if_any_active_lanes     branch_if_any_active_lanes -5 (label 4 at #30)
   36. load_loop_mask                 LoopMask = $10
   37. copy_constant                  $10 = 0xFFFFFFFF
   38. copy_slot_masked               [test_break].result = Mask($10)
   39. label                          label 0x00000003
   40. copy_slot_masked               $9 = Mask($10)
   41. label                          label 0x00000002
   42. load_condition_mask            CondMask = $35
   43. zero_slot_unmasked             $32 = 0
   44. merge_condition_mask           CondMask = $8 & $9
   45. branch_if_no_active_lanes      branch_if_no_active_lanes +17 (label 5 at #62)
   46. store_loop_mask                $33 = LoopMask
   47. label                          label 0x00000007
   48. zero_slot_unmasked             [temporary 0] = 0
   49. copy_constant                  $34 = 0xFFFFFFFF
   50. copy_slot_masked               [temporary 0] = Mask($34)
   51. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   52. reenable_loop_mask             LoopMask |= [temporary 0]
   53. zero_slot_unmasked             $34 = 0
   54. merge_loop_mask                LoopMask &= $34
   55. stack_rewind
   56. branch_if_any_active_lanes     branch_if_any_active_lanes -9 (label 7 at #47)
   57. load_loop_mask                 LoopMask = $33
   58. copy_constant                  $33 = 0xFFFFFFFF
   59. copy_slot_masked               [test_continue].result = Mask($33)
   60. label                          label 0x00000006
   61. copy_slot_masked               $32 = Mask($33)
   62. label                          label 0x00000005
   63. load_condition_mask            CondMask = $8
   64. zero_slot_unmasked             $40 = 0
   65. merge_condition_mask           CondMask = $31 & $32
   66. branch_if_no_active_lanes      branch_if_no_active_lanes +31 (label 8 at #97)
   67. store_return_mask              $41 = RetMask
   68. store_loop_mask                $42 = LoopMask
   69. label                          label 0x0000000A
   70. zero_slot_unmasked             [temporary 0] = 0
   71. zero_slot_unmasked             $43 = 0
   72. copy_constant                  $44 = colorGreen(1)
   73. cmplt_float                    $43 = lessThan($43, $44)
   74. branch_if_no_active_lanes_eq   branch +5 (label 11 at #79) if no lanes of $43 == 0xFFFFFFFF
   75. copy_constant                  $44 = 0xFFFFFFFF
   76. copy_slot_masked               [test_if_return].result = Mask($44)
   77. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   78. jump                           jump +3 (label 12 at #81)
   79. label                          label 0x0000000B
   80. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   81. label                          label 0x0000000C
   82. copy_constant                  $43 = 0xFFFFFFFF
   83. copy_slot_masked               [temporary 0] = Mask($43)
   84. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   85. reenable_loop_mask             LoopMask |= [temporary 0]
   86. zero_slot_unmasked             $43 = 0
   87. merge_loop_mask                LoopMask &= $43
   88. stack_rewind
   89. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 10 at #69)
   90. load_loop_mask                 LoopMask = $42
   91. zero_slot_unmasked             $42 = 0
   92. copy_slot_masked               [test_if_return].result = Mask($42)
   93. load_return_mask               RetMask = $41
   94. copy_slot_unmasked             $41 = [test_if_return].result
   95. label                          label 0x00000009
   96. copy_slot_masked               $40 = Mask($41)
   97. label                          label 0x00000008
   98. load_condition_mask            CondMask = $31
   99. zero_slot_unmasked             $18 = 0
  100. merge_condition_mask           CondMask = $39 & $40
  101. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (label 13 at #126)
  102. store_loop_mask                $19 = LoopMask
  103. label                          label 0x0000000F
  104. zero_slot_unmasked             [temporary 0] = 0
  105. zero_slot_unmasked             $20 = 0
  106. copy_constant                  $21 = colorGreen(1)
  107. cmplt_float                    $20 = lessThan($20, $21)
  108. branch_if_no_active_lanes_eq   branch +3 (label 16 at #111) if no lanes of $20 == 0xFFFFFFFF
  109. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  110. jump                           jump +5 (label 17 at #115)
  111. label                          label 0x00000010
  112. copy_constant                  $21 = 0xFFFFFFFF
  113. copy_slot_masked               [temporary 0] = Mask($21)
  114. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  115. label                          label 0x00000011
  116. reenable_loop_mask             LoopMask |= [temporary 0]
  117. zero_slot_unmasked             $20 = 0
  118. merge_loop_mask                LoopMask &= $20
  119. stack_rewind
  120. branch_if_any_active_lanes     branch_if_any_active_lanes -17 (label 15 at #103)
  121. load_loop_mask                 LoopMask = $19
  122. copy_constant                  $19 = 0xFFFFFFFF
  123. copy_slot_masked               [test_if_break].result = Mask($19)
  124. label                          label 0x0000000E
  125. copy_slot_masked               $18 = Mask($19)
  126. label                          label 0x0000000D
  127. load_condition_mask            CondMask = $39
  128. zero_slot_unmasked             $26 = 0
  129. merge_condition_mask           CondMask = $17 & $18
  130. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (label 18 at #156)
  131. store_return_mask              $27 = RetMask
  132. store_loop_mask                $28 = LoopMask
  133. label                          label 0x00000014
  134. copy_constant                  $29 = colorGreen(1)
  135. zero_slot_unmasked             $30 = 0
  136. cmpeq_float                    $29 = equal($29, $30)
  137. branch_if_no_active_lanes_eq   branch +5 (label 21 at #142) if no lanes of $29 == 0xFFFFFFFF
  138. zero_slot_unmasked             $30 = 0
  139. copy_slot_masked               [test_else].result = Mask($30)
  140. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  141. jump                           jump +5 (label 22 at #146)
  142. label                          label 0x00000015
  143. copy_constant                  $30 = 0xFFFFFFFF
  144. copy_slot_masked               [test_else].result = Mask($30)
  145. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  146. label                          label 0x00000016
  147. zero_slot_unmasked             $29 = 0
  148. merge_loop_mask                LoopMask &= $29
  149. stack_rewind
  150. branch_if_any_active_lanes     branch_if_any_active_lanes -17 (label 20 at #133)
  151. load_loop_mask                 LoopMask = $28
  152. load_return_mask               RetMask = $27
  153. copy_slot_unmasked             $27 = [test_else].result
  154. label                          label 0x00000013
  155. copy_slot_masked               $26 = Mask($27)
  156. label                          label 0x00000012
  157. load_condition_mask            CondMask = $17
  158. zero_slot_unmasked             $23 = 0
  159. merge_condition_mask           CondMask = $25 & $26
  160. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 23 at #165)
  161. copy_constant                  $24 = 0xFFFFFFFF
  162. copy_slot_masked               [test_loop_return].result = Mask($24)
  163. label                          label 0x00000018
  164. copy_slot_masked               $23 = Mask($24)
  165. label                          label 0x00000017
  166. load_condition_mask            CondMask = $25
  167. zero_slot_unmasked             $13 = 0
  168. merge_condition_mask           CondMask = $22 & $23
  169. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 25 at #191)
  170. zero_slot_unmasked             x = 0
  171. store_loop_mask                $14 = LoopMask
  172. jump                           jump +7 (label 27 at #179)
  173. label                          label 0x0000001C
  174. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  175. copy_slot_unmasked             $15 = x
  176. copy_constant                  $16 = 0x00000001 (1.401298e-45)
  177. add_int                        $15 += $16
  178. copy_slot_masked               x = Mask($15)
  179. label                          label 0x0000001B
  180. copy_slot_unmasked             $15 = x
  181. copy_constant                  $16 = 0x00000001 (1.401298e-45)
  182. cmple_int                      $15 = lessThanEqual($15, $16)
  183. merge_loop_mask                LoopMask &= $15
  184. stack_rewind
  185. branch_if_any_active_lanes     branch_if_any_active_lanes -12 (label 28 at #173)
  186. load_loop_mask                 LoopMask = $14
  187. copy_constant                  $14 = 0xFFFFFFFF
  188. copy_slot_masked               [test_loop_break].result = Mask($14)
  189. label                          label 0x0000001A
  190. copy_slot_masked               $13 = Mask($14)
  191. label                          label 0x00000019
  192. load_condition_mask            CondMask = $22
  193. copy_4_constants               $0..3 = colorRed
  194. merge_condition_mask           CondMask = $12 & $13
  195. copy_4_constants               $4..7 = colorGreen
  196. copy_4_slots_masked            $0..3 = Mask($4..7)
  197. label                          label 0x0000001D
  198. load_condition_mask            CondMask = $12
  199. copy_4_slots_unmasked          [main].result = $0..3
  200. load_src                       src.rgba = [main].result
