    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $16 = CondMask
    4. store_condition_mask           $25 = CondMask
    5. store_condition_mask           $31 = CondMask
    6. store_condition_mask           $19 = CondMask
    7. store_condition_mask           $40 = CondMask
    8. store_condition_mask           $36 = CondMask
    9. store_condition_mask           $12 = CondMask
   10. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 8 at #24)
   11. store_return_mask              $13 = RetMask
   12. store_loop_mask                $14 = LoopMask
   13. label                          label 0x00000009
   14. copy_constant                  $15 = 0xFFFFFFFF
   15. copy_slot_masked               [test_return].result = Mask($15)
   16. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   17. zero_slot_unmasked             $15 = 0
   18. merge_loop_mask                LoopMask &= $15
   19. stack_rewind
   20. branch_if_any_active_lanes     branch_if_any_active_lanes -7 (label 9 at #13)
   21. load_loop_mask                 LoopMask = $14
   22. load_return_mask               RetMask = $13
   23. copy_slot_unmasked             $13 = [test_return].result
   24. label                          label 0x00000008
   25. zero_slot_unmasked             $37 = 0
   26. merge_condition_mask           CondMask = $12 & $13
   27. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 7 at #40)
   28. store_loop_mask                $38 = LoopMask
   29. label                          label 0x0000000B
   30. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   31. zero_slot_unmasked             $39 = 0
   32. merge_loop_mask                LoopMask &= $39
   33. stack_rewind
   34. branch_if_any_active_lanes     branch_if_any_active_lanes -5 (label 11 at #29)
   35. load_loop_mask                 LoopMask = $38
   36. copy_constant                  $38 = 0xFFFFFFFF
   37. copy_slot_masked               [test_break].result = Mask($38)
   38. label                          label 0x0000000A
   39. copy_slot_masked               $37 = Mask($38)
   40. label                          label 0x00000007
   41. load_condition_mask            CondMask = $12
   42. zero_slot_unmasked             $41 = 0
   43. merge_condition_mask           CondMask = $36 & $37
   44. branch_if_no_active_lanes      branch_if_no_active_lanes +17 (label 6 at #61)
   45. store_loop_mask                $42 = LoopMask
   46. label                          label 0x0000000D
   47. zero_slot_unmasked             [temporary 0] = 0
   48. copy_constant                  $43 = 0xFFFFFFFF
   49. copy_slot_masked               [temporary 0] = Mask($43)
   50. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   51. reenable_loop_mask             LoopMask |= [temporary 0]
   52. zero_slot_unmasked             $43 = 0
   53. merge_loop_mask                LoopMask &= $43
   54. stack_rewind
   55. branch_if_any_active_lanes     branch_if_any_active_lanes -9 (label 13 at #46)
   56. load_loop_mask                 LoopMask = $42
   57. copy_constant                  $42 = 0xFFFFFFFF
   58. copy_slot_masked               [test_continue].result = Mask($42)
   59. label                          label 0x0000000C
   60. copy_slot_masked               $41 = Mask($42)
   61. label                          label 0x00000006
   62. load_condition_mask            CondMask = $36
   63. zero_slot_unmasked             $20 = 0
   64. merge_condition_mask           CondMask = $40 & $41
   65. branch_if_no_active_lanes      branch_if_no_active_lanes +31 (label 5 at #96)
   66. store_return_mask              $21 = RetMask
   67. store_loop_mask                $22 = LoopMask
   68. label                          label 0x0000000F
   69. zero_slot_unmasked             [temporary 0] = 0
   70. zero_slot_unmasked             $23 = 0
   71. copy_constant                  $24 = colorGreen(1)
   72. cmplt_float                    $23 = lessThan($23, $24)
   73. branch_if_no_active_lanes_eq   branch +5 (label 16 at #78) if no lanes of $23 == 0xFFFFFFFF
   74. copy_constant                  $24 = 0xFFFFFFFF
   75. copy_slot_masked               [test_if_return].result = Mask($24)
   76. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   77. jump                           jump +3 (label 17 at #80)
   78. label                          label 0x00000010
   79. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   80. label                          label 0x00000011
   81. copy_constant                  $23 = 0xFFFFFFFF
   82. copy_slot_masked               [temporary 0] = Mask($23)
   83. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   84. reenable_loop_mask             LoopMask |= [temporary 0]
   85. zero_slot_unmasked             $23 = 0
   86. merge_loop_mask                LoopMask &= $23
   87. stack_rewind
   88. branch_if_any_active_lanes     branch_if_any_active_lanes -20 (label 15 at #68)
   89. load_loop_mask                 LoopMask = $22
   90. zero_slot_unmasked             $22 = 0
   91. copy_slot_masked               [test_if_return].result = Mask($22)
   92. load_return_mask               RetMask = $21
   93. copy_slot_unmasked             $21 = [test_if_return].result
   94. label                          label 0x0000000E
   95. copy_slot_masked               $20 = Mask($21)
   96. label                          label 0x00000005
   97. load_condition_mask            CondMask = $40
   98. zero_slot_unmasked             $32 = 0
   99. merge_condition_mask           CondMask = $19 & $20
  100. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (label 4 at #125)
  101. store_loop_mask                $33 = LoopMask
  102. label                          label 0x00000013
  103. zero_slot_unmasked             [temporary 0] = 0
  104. zero_slot_unmasked             $34 = 0
  105. copy_constant                  $35 = colorGreen(1)
  106. cmplt_float                    $34 = lessThan($34, $35)
  107. branch_if_no_active_lanes_eq   branch +3 (label 20 at #110) if no lanes of $34 == 0xFFFFFFFF
  108. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  109. jump                           jump +5 (label 21 at #114)
  110. label                          label 0x00000014
  111. copy_constant                  $35 = 0xFFFFFFFF
  112. copy_slot_masked               [temporary 0] = Mask($35)
  113. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  114. label                          label 0x00000015
  115. reenable_loop_mask             LoopMask |= [temporary 0]
  116. zero_slot_unmasked             $34 = 0
  117. merge_loop_mask                LoopMask &= $34
  118. stack_rewind
  119. branch_if_any_active_lanes     branch_if_any_active_lanes -17 (label 19 at #102)
  120. load_loop_mask                 LoopMask = $33
  121. copy_constant                  $33 = 0xFFFFFFFF
  122. copy_slot_masked               [test_if_break].result = Mask($33)
  123. label                          label 0x00000012
  124. copy_slot_masked               $32 = Mask($33)
  125. label                          label 0x00000004
  126. load_condition_mask            CondMask = $19
  127. zero_slot_unmasked             $26 = 0
  128. merge_condition_mask           CondMask = $31 & $32
  129. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (label 3 at #155)
  130. store_return_mask              $27 = RetMask
  131. store_loop_mask                $28 = LoopMask
  132. label                          label 0x00000017
  133. copy_constant                  $29 = colorGreen(1)
  134. zero_slot_unmasked             $30 = 0
  135. cmpeq_float                    $29 = equal($29, $30)
  136. branch_if_no_active_lanes_eq   branch +5 (label 24 at #141) if no lanes of $29 == 0xFFFFFFFF
  137. zero_slot_unmasked             $30 = 0
  138. copy_slot_masked               [test_else].result = Mask($30)
  139. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  140. jump                           jump +5 (label 25 at #145)
  141. label                          label 0x00000018
  142. copy_constant                  $30 = 0xFFFFFFFF
  143. copy_slot_masked               [test_else].result = Mask($30)
  144. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  145. label                          label 0x00000019
  146. zero_slot_unmasked             $29 = 0
  147. merge_loop_mask                LoopMask &= $29
  148. stack_rewind
  149. branch_if_any_active_lanes     branch_if_any_active_lanes -17 (label 23 at #132)
  150. load_loop_mask                 LoopMask = $28
  151. load_return_mask               RetMask = $27
  152. copy_slot_unmasked             $27 = [test_else].result
  153. label                          label 0x00000016
  154. copy_slot_masked               $26 = Mask($27)
  155. label                          label 0x00000003
  156. load_condition_mask            CondMask = $31
  157. zero_slot_unmasked             $17 = 0
  158. merge_condition_mask           CondMask = $25 & $26
  159. branch_if_no_active_lanes      branch_if_no_active_lanes +5 (label 2 at #164)
  160. copy_constant                  $18 = 0xFFFFFFFF
  161. copy_slot_masked               [test_loop_return].result = Mask($18)
  162. label                          label 0x0000001A
  163. copy_slot_masked               $17 = Mask($18)
  164. label                          label 0x00000002
  165. load_condition_mask            CondMask = $25
  166. zero_slot_unmasked             $0 = 0
  167. merge_condition_mask           CondMask = $16 & $17
  168. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 1 at #190)
  169. zero_slot_unmasked             x = 0
  170. store_loop_mask                $1 = LoopMask
  171. jump                           jump +7 (label 28 at #178)
  172. label                          label 0x0000001D
  173. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  174. copy_slot_unmasked             $2 = x
  175. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  176. add_int                        $2 += $3
  177. copy_slot_masked               x = Mask($2)
  178. label                          label 0x0000001C
  179. copy_slot_unmasked             $2 = x
  180. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  181. cmple_int                      $2 = lessThanEqual($2, $3)
  182. merge_loop_mask                LoopMask &= $2
  183. stack_rewind
  184. branch_if_any_active_lanes     branch_if_any_active_lanes -12 (label 29 at #172)
  185. load_loop_mask                 LoopMask = $1
  186. copy_constant                  $1 = 0xFFFFFFFF
  187. copy_slot_masked               [test_loop_break].result = Mask($1)
  188. label                          label 0x0000001B
  189. copy_slot_masked               $0 = Mask($1)
  190. label                          label 0x00000001
  191. load_condition_mask            CondMask = $16
  192. swizzle_4                      $0..3 = ($0..3).xxxx
  193. copy_4_constants               $4..7 = colorRed
  194. copy_4_constants               $8..11 = colorGreen
  195. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  196. copy_4_slots_unmasked          [main].result = $0..3
  197. load_src                       src.rgba = [main].result
