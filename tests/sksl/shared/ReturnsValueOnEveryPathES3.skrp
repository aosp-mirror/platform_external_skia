    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $26 = CondMask
    4. store_condition_mask           $40 = CondMask
    5. store_condition_mask           $49 = CondMask
    6. store_condition_mask           $34 = CondMask
    7. store_condition_mask           $69 = CondMask
    8. store_condition_mask           $58 = CondMask
    9. store_condition_mask           $22 = CondMask
   10. store_condition_mask           $65 = CondMask
   11. store_condition_mask           $17 = CondMask
   12. store_condition_mask           $0 = CondMask
   13. store_condition_mask           $76 = CondMask
   14. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (label 12 at #34)
   15. store_return_mask              $77 = RetMask
   16. store_loop_mask                $78 = LoopMask
   17. jump                           jump +5 (label 13 at #22)
   18. label                          label 0x0000000E
   19. zero_slot_unmasked             $79 = 0
   20. copy_slot_masked               [inside_while_loop].result = Mask($79)
   21. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   22. label                          label 0x0000000D
   23. copy_constant                  $79 = unknownInput
   24. copy_constant                  $80 = 0x42F60000 (123.0)
   25. cmpeq_float                    $79 = equal($79, $80)
   26. merge_loop_mask                LoopMask &= $79
   27. stack_rewind
   28. branch_if_any_active_lanes     branch_if_any_active_lanes -10 (label 14 at #18)
   29. load_loop_mask                 LoopMask = $78
   30. copy_constant                  $78 = 0xFFFFFFFF
   31. copy_slot_masked               [inside_while_loop].result = Mask($78)
   32. load_return_mask               RetMask = $77
   33. copy_slot_unmasked             $77 = [inside_while_loop].result
   34. label                          label 0x0000000C
   35. zero_slot_unmasked             $1 = 0
   36. merge_condition_mask           CondMask = $76 & $77
   37. branch_if_no_active_lanes      branch_if_no_active_lanes +16 (label 11 at #53)
   38. store_return_mask              $2 = RetMask
   39. store_loop_mask                $3 = LoopMask
   40. label                          label 0x00000010
   41. copy_constant                  $4 = 0xFFFFFFFF
   42. copy_slot_masked               [inside_infinite_do_loop].result = Mask($4)
   43. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   44. copy_constant                  $4 = 0xFFFFFFFF
   45. merge_loop_mask                LoopMask &= $4
   46. stack_rewind
   47. branch_if_any_active_lanes     branch_if_any_active_lanes -7 (label 16 at #40)
   48. load_loop_mask                 LoopMask = $3
   49. load_return_mask               RetMask = $2
   50. copy_slot_unmasked             $2 = [inside_infinite_do_loop].result
   51. label                          label 0x0000000F
   52. copy_slot_masked               $1 = Mask($2)
   53. label                          label 0x0000000B
   54. load_condition_mask            CondMask = $76
   55. zero_slot_unmasked             $18 = 0
   56. merge_condition_mask           CondMask = $0 & $1
   57. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (label 10 at #75)
   58. store_return_mask              $19 = RetMask
   59. store_loop_mask                $20 = LoopMask
   60. jump                           jump +5 (label 18 at #65)
   61. label                          label 0x00000013
   62. copy_constant                  $21 = 0xFFFFFFFF
   63. copy_slot_masked               [inside_infinite_while_loop].result = Mask($21)
   64. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   65. label                          label 0x00000012
   66. copy_constant                  $21 = 0xFFFFFFFF
   67. merge_loop_mask                LoopMask &= $21
   68. stack_rewind
   69. branch_if_any_active_lanes     branch_if_any_active_lanes -8 (label 19 at #61)
   70. load_loop_mask                 LoopMask = $20
   71. load_return_mask               RetMask = $19
   72. copy_slot_unmasked             $19 = [inside_infinite_while_loop].result
   73. label                          label 0x00000011
   74. copy_slot_masked               $18 = Mask($19)
   75. label                          label 0x0000000A
   76. load_condition_mask            CondMask = $0
   77. zero_slot_unmasked             $66 = 0
   78. merge_condition_mask           CondMask = $17 & $18
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 9 at #92)
   80. store_loop_mask                $67 = LoopMask
   81. label                          label 0x00000015
   82. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   83. copy_constant                  $68 = 0xFFFFFFFF
   84. merge_loop_mask                LoopMask &= $68
   85. stack_rewind
   86. branch_if_any_active_lanes     branch_if_any_active_lanes -5 (label 21 at #81)
   87. load_loop_mask                 LoopMask = $67
   88. copy_constant                  $67 = 0xFFFFFFFF
   89. copy_slot_masked               [after_do_loop].result = Mask($67)
   90. label                          label 0x00000014
   91. copy_slot_masked               $66 = Mask($67)
   92. label                          label 0x00000009
   93. load_condition_mask            CondMask = $17
   94. zero_slot_unmasked             $23 = 0
   95. merge_condition_mask           CondMask = $65 & $66
   96. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (label 8 at #111)
   97. store_loop_mask                $24 = LoopMask
   98. jump                           jump +3 (label 23 at #101)
   99. label                          label 0x00000018
  100. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  101. label                          label 0x00000017
  102. copy_constant                  $25 = 0xFFFFFFFF
  103. merge_loop_mask                LoopMask &= $25
  104. stack_rewind
  105. branch_if_any_active_lanes     branch_if_any_active_lanes -6 (label 24 at #99)
  106. load_loop_mask                 LoopMask = $24
  107. copy_constant                  $24 = 0xFFFFFFFF
  108. copy_slot_masked               [after_while_loop].result = Mask($24)
  109. label                          label 0x00000016
  110. copy_slot_masked               $23 = Mask($24)
  111. label                          label 0x00000008
  112. load_condition_mask            CondMask = $65
  113. zero_slot_unmasked             $59 = 0
  114. merge_condition_mask           CondMask = $22 & $23
  115. branch_if_no_active_lanes      branch_if_no_active_lanes +30 (label 7 at #145)
  116. store_return_mask              $60 = RetMask
  117. store_loop_mask                $61 = LoopMask
  118. copy_constant                  $62 = unknownInput
  119. cast_to_int_from_float         $62 = FloatToInt($62)
  120. store_loop_mask                $63 = LoopMask
  121. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  122. case_op                        if ($62 == 0x00000001) { LoopMask = true; $63 = false; }
  123. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 26 at #127)
  124. copy_constant                  $64 = 0xFFFFFFFF
  125. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  126. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  127. label                          label 0x0000001A
  128. case_op                        if ($62 == 0x00000002) { LoopMask = true; $63 = false; }
  129. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 27 at #133)
  130. zero_slot_unmasked             $64 = 0
  131. copy_slot_masked               [switch_with_all_returns].result = Mask($64)
  132. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  133. label                          label 0x0000001B
  134. reenable_loop_mask             LoopMask |= $63
  135. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 28 at #139)
  136. zero_slot_unmasked             $63 = 0
  137. copy_slot_masked               [switch_with_all_returns].result = Mask($63)
  138. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  139. label                          label 0x0000001C
  140. load_loop_mask                 LoopMask = $61
  141. load_return_mask               RetMask = $60
  142. copy_slot_unmasked             $60 = [switch_with_all_returns].result
  143. label                          label 0x00000019
  144. copy_slot_masked               $59 = Mask($60)
  145. label                          label 0x00000007
  146. load_condition_mask            CondMask = $22
  147. zero_slot_unmasked             $70 = 0
  148. merge_condition_mask           CondMask = $58 & $59
  149. branch_if_no_active_lanes      branch_if_no_active_lanes +26 (label 6 at #175)
  150. store_return_mask              $71 = RetMask
  151. store_loop_mask                $72 = LoopMask
  152. copy_constant                  $73 = unknownInput
  153. cast_to_int_from_float         $73 = FloatToInt($73)
  154. store_loop_mask                $74 = LoopMask
  155. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  156. case_op                        if ($73 == 0x00000001) { LoopMask = true; $74 = false; }
  157. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 30 at #161)
  158. copy_constant                  $75 = 0xFFFFFFFF
  159. copy_slot_masked               [switch_fallthrough].result = Mask($75)
  160. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  161. label                          label 0x0000001E
  162. case_op                        if ($73 == 0x00000002) { LoopMask = true; $74 = false; }
  163. label                          label 0x0000001F
  164. reenable_loop_mask             LoopMask |= $74
  165. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 32 at #169)
  166. zero_slot_unmasked             $74 = 0
  167. copy_slot_masked               [switch_fallthrough].result = Mask($74)
  168. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  169. label                          label 0x00000020
  170. load_loop_mask                 LoopMask = $72
  171. load_return_mask               RetMask = $71
  172. copy_slot_unmasked             $71 = [switch_fallthrough].result
  173. label                          label 0x0000001D
  174. copy_slot_masked               $70 = Mask($71)
  175. label                          label 0x00000006
  176. load_condition_mask            CondMask = $58
  177. zero_slot_unmasked             $35 = 0
  178. merge_condition_mask           CondMask = $69 & $70
  179. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 5 at #201)
  180. store_return_mask              $36 = RetMask
  181. store_loop_mask                $37 = LoopMask
  182. copy_constant                  $38 = unknownInput
  183. cast_to_int_from_float         $38 = FloatToInt($38)
  184. store_loop_mask                $39 = LoopMask
  185. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  186. case_op                        if ($38 == 0x00000001) { LoopMask = true; $39 = false; }
  187. label                          label 0x00000022
  188. case_op                        if ($38 == 0x00000002) { LoopMask = true; $39 = false; }
  189. label                          label 0x00000023
  190. reenable_loop_mask             LoopMask |= $39
  191. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 36 at #195)
  192. copy_constant                  $39 = 0xFFFFFFFF
  193. copy_slot_masked               [switch_fallthrough_twice].result = Mask($39)
  194. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  195. label                          label 0x00000024
  196. load_loop_mask                 LoopMask = $37
  197. load_return_mask               RetMask = $36
  198. copy_slot_unmasked             $36 = [switch_fallthrough_twice].result
  199. label                          label 0x00000021
  200. copy_slot_masked               $35 = Mask($36)
  201. label                          label 0x00000005
  202. load_condition_mask            CondMask = $69
  203. zero_slot_unmasked             $50 = 0
  204. merge_condition_mask           CondMask = $34 & $35
  205. branch_if_no_active_lanes      branch_if_no_active_lanes +38 (label 4 at #243)
  206. store_return_mask              $51 = RetMask
  207. store_loop_mask                $52 = LoopMask
  208. copy_constant                  $53 = unknownInput
  209. cast_to_int_from_float         $53 = FloatToInt($53)
  210. store_loop_mask                $54 = LoopMask
  211. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  212. case_op                        if ($53 == 0x00000001) { LoopMask = true; $54 = false; }
  213. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (label 38 at #231)
  214. zero_slot_unmasked             x = 0
  215. store_loop_mask                $55 = LoopMask
  216. jump                           jump +7 (label 39 at #223)
  217. label                          label 0x00000028
  218. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  219. copy_slot_unmasked             $56 = x
  220. copy_constant                  $57 = 0x00000001 (1.401298e-45)
  221. add_int                        $56 += $57
  222. copy_slot_masked               x = Mask($56)
  223. label                          label 0x00000027
  224. copy_slot_unmasked             $56 = x
  225. copy_constant                  $57 = 0x0000000A (1.401298e-44)
  226. cmple_int                      $56 = lessThanEqual($56, $57)
  227. merge_loop_mask                LoopMask &= $56
  228. stack_rewind
  229. branch_if_any_active_lanes     branch_if_any_active_lanes -12 (label 40 at #217)
  230. load_loop_mask                 LoopMask = $55
  231. label                          label 0x00000026
  232. reenable_loop_mask             LoopMask |= $54
  233. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 41 at #237)
  234. copy_constant                  $54 = 0xFFFFFFFF
  235. copy_slot_masked               [switch_with_break_in_loop].result = Mask($54)
  236. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  237. label                          label 0x00000029
  238. load_loop_mask                 LoopMask = $52
  239. load_return_mask               RetMask = $51
  240. copy_slot_unmasked             $51 = [switch_with_break_in_loop].result
  241. label                          label 0x00000025
  242. copy_slot_masked               $50 = Mask($51)
  243. label                          label 0x00000004
  244. load_condition_mask            CondMask = $34
  245. zero_slot_unmasked             $41 = 0
  246. merge_condition_mask           CondMask = $49 & $50
  247. branch_if_no_active_lanes      branch_if_no_active_lanes +42 (label 3 at #289)
  248. store_return_mask              $42 = RetMask
  249. store_loop_mask                $43 = LoopMask
  250. copy_constant                  $44 = unknownInput
  251. cast_to_int_from_float         $44 = FloatToInt($44)
  252. store_loop_mask                $45 = LoopMask
  253. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  254. case_op                        if ($44 == 0x00000001) { LoopMask = true; $45 = false; }
  255. branch_if_no_active_lanes      branch_if_no_active_lanes +22 (label 43 at #277)
  256. zero_slot_unmasked             x₁ = 0
  257. store_loop_mask                $46 = LoopMask
  258. jump                           jump +11 (label 44 at #269)
  259. label                          label 0x0000002D
  260. zero_slot_unmasked             [temporary 0] = 0
  261. copy_constant                  $47 = 0xFFFFFFFF
  262. copy_slot_masked               [temporary 0] = Mask($47)
  263. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  264. reenable_loop_mask             LoopMask |= [temporary 0]
  265. copy_slot_unmasked             $47 = x₁
  266. copy_constant                  $48 = 0x00000001 (1.401298e-45)
  267. add_int                        $47 += $48
  268. copy_slot_masked               x₁ = Mask($47)
  269. label                          label 0x0000002C
  270. copy_slot_unmasked             $47 = x₁
  271. copy_constant                  $48 = 0x0000000A (1.401298e-44)
  272. cmple_int                      $47 = lessThanEqual($47, $48)
  273. merge_loop_mask                LoopMask &= $47
  274. stack_rewind
  275. branch_if_any_active_lanes     branch_if_any_active_lanes -16 (label 45 at #259)
  276. load_loop_mask                 LoopMask = $46
  277. label                          label 0x0000002B
  278. reenable_loop_mask             LoopMask |= $45
  279. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 46 at #283)
  280. copy_constant                  $45 = 0xFFFFFFFF
  281. copy_slot_masked               [switch_with_continue_in_loop].result = Mask($45)
  282. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  283. label                          label 0x0000002E
  284. load_loop_mask                 LoopMask = $43
  285. load_return_mask               RetMask = $42
  286. copy_slot_unmasked             $42 = [switch_with_continue_in_loop].result
  287. label                          label 0x0000002A
  288. copy_slot_masked               $41 = Mask($42)
  289. label                          label 0x00000003
  290. load_condition_mask            CondMask = $49
  291. zero_slot_unmasked             $27 = 0
  292. merge_condition_mask           CondMask = $40 & $41
  293. branch_if_no_active_lanes      branch_if_no_active_lanes +34 (label 2 at #327)
  294. store_return_mask              $28 = RetMask
  295. store_loop_mask                $29 = LoopMask
  296. copy_constant                  $30 = unknownInput
  297. cast_to_int_from_float         $30 = FloatToInt($30)
  298. store_loop_mask                $31 = LoopMask
  299. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  300. case_op                        if ($30 == 0x00000001) { LoopMask = true; $31 = false; }
  301. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (label 48 at #315)
  302. copy_constant                  $32 = unknownInput
  303. copy_constant                  $33 = 0x42F60000 (123.0)
  304. cmpeq_float                    $32 = equal($32, $33)
  305. branch_if_no_active_lanes_eq   branch +5 (label 49 at #310) if no lanes of $32 == 0xFFFFFFFF
  306. zero_slot_unmasked             $33 = 0
  307. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  308. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  309. jump                           jump +5 (label 50 at #314)
  310. label                          label 0x00000031
  311. copy_constant                  $33 = 0xFFFFFFFF
  312. copy_slot_masked               [switch_with_if_that_returns].result = Mask($33)
  313. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  314. label                          label 0x00000032
  315. label                          label 0x00000030
  316. reenable_loop_mask             LoopMask |= $31
  317. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 51 at #321)
  318. copy_constant                  $31 = 0xFFFFFFFF
  319. copy_slot_masked               [switch_with_if_that_returns].result = Mask($31)
  320. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  321. label                          label 0x00000033
  322. load_loop_mask                 LoopMask = $29
  323. load_return_mask               RetMask = $28
  324. copy_slot_unmasked             $28 = [switch_with_if_that_returns].result
  325. label                          label 0x0000002F
  326. copy_slot_masked               $27 = Mask($28)
  327. label                          label 0x00000002
  328. load_condition_mask            CondMask = $40
  329. zero_slot_unmasked             $5 = 0
  330. merge_condition_mask           CondMask = $26 & $27
  331. branch_if_no_active_lanes      branch_if_no_active_lanes +29 (label 1 at #360)
  332. store_return_mask              $6 = RetMask
  333. store_loop_mask                $7 = LoopMask
  334. copy_constant                  $8 = unknownInput
  335. cast_to_int_from_float         $8 = FloatToInt($8)
  336. store_loop_mask                $9 = LoopMask
  337. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  338. case_op                        if ($8 == 0x00000001) { LoopMask = true; $9 = false; }
  339. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (label 53 at #348)
  340. copy_constant                  $10 = unknownInput
  341. copy_constant                  $11 = 0x42F60000 (123.0)
  342. cmpeq_float                    $10 = equal($10, $11)
  343. branch_if_no_active_lanes_eq   branch +4 (label 54 at #347) if no lanes of $10 == 0xFFFFFFFF
  344. zero_slot_unmasked             $11 = 0
  345. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($11)
  346. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  347. label                          label 0x00000036
  348. label                          label 0x00000035
  349. reenable_loop_mask             LoopMask |= $9
  350. branch_if_no_active_lanes      branch_if_no_active_lanes +4 (label 56 at #354)
  351. copy_constant                  $9 = 0xFFFFFFFF
  352. copy_slot_masked               [switch_with_one_sided_if_then_fallthrough].result = Mask($9)
  353. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  354. label                          label 0x00000038
  355. load_loop_mask                 LoopMask = $7
  356. load_return_mask               RetMask = $6
  357. copy_slot_unmasked             $6 = [switch_with_one_sided_if_then_fallthrough].result
  358. label                          label 0x00000034
  359. copy_slot_masked               $5 = Mask($6)
  360. label                          label 0x00000001
  361. load_condition_mask            CondMask = $26
  362. swizzle_4                      $5..8 = ($5..8).xxxx
  363. copy_4_constants               $9..12 = colorRed
  364. copy_4_constants               $13..16 = colorGreen
  365. mix_4_ints                     $5..8 = mix($9..12, $13..16, $5..8)
  366. copy_4_slots_unmasked          [main].result = $5..8
  367. load_src                       src.rgba = [main].result
