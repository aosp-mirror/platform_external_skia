    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = colorGreen(0)
    4. cast_to_int_from_float         $0 = FloatToInt($0)
    5. copy_slot_unmasked             zero = $0
    6. copy_constant                  $0 = colorGreen(1)
    7. cast_to_int_from_float         $0 = FloatToInt($0)
    8. copy_slot_unmasked             one = $0
    9. copy_slot_unmasked             $0 = zero
   10. copy_slot_unmasked             x = $0
   11. store_loop_mask                $0 = LoopMask
   12. jump                           jump +67 (#79)
   13. zero_slot_unmasked             [for-loop continue mask 0] = 0
   14. copy_slot_unmasked             $1 = one
   15. copy_slot_unmasked             y = $1
   16. store_loop_mask                $1 = LoopMask
   17. jump                           jump +50 (#67)
   18. zero_slot_unmasked             [for-loop continue mask 1] = 0
   19. copy_slot_unmasked             $2 = x
   20. copy_slot_unmasked             _0_x = $2
   21. zero_slot_unmasked             $2 = 0
   22. copy_slot_unmasked             _1_result = $2
   23. store_loop_mask                $2 = LoopMask
   24. jump                           jump +11 (#35)
   25. zero_slot_unmasked             [for-loop continue mask 2] = 0
   26. copy_slot_unmasked             $3 = _1_result
   27. copy_constant                  $4 = 0x00000001 (1.401298e-45)
   28. add_int                        $3 += $4
   29. copy_slot_masked               _1_result = Mask($3)
   30. copy_slot_unmasked             $3 = _0_x
   31. copy_slot_unmasked             $4 = y
   32. sub_int                        $3 -= $4
   33. copy_slot_masked               _0_x = Mask($3)
   34. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
   35. copy_slot_unmasked             $3 = y
   36. copy_slot_unmasked             $4 = _0_x
   37. cmple_int                      $3 = lessThanEqual($3, $4)
   38. merge_loop_mask                LoopMask &= $3
   39. stack_rewind
   40. branch_if_any_active_lanes     branch_if_any_active_lanes -15 (#25)
   41. load_loop_mask                 LoopMask = $2
   42. store_condition_mask           $2 = CondMask
   43. copy_slot_unmasked             $3 = x
   44. copy_slot_unmasked             $4 = y
   45. div_int                        $3 /= $4
   46. copy_slot_unmasked             $4 = _1_result
   47. cmpne_int                      $3 = notEqual($3, $4)
   48. merge_condition_mask           CondMask = $2 & $3
   49. copy_constant                  $4 = 0x3F800000 (1.0)
   50. copy_slot_unmasked             $5 = x
   51. cast_to_float_from_int         $5 = IntToFloat($5)
   52. copy_constant                  $6 = 0x437F0000 (255.0)
   53. div_float                      $5 /= $6
   54. copy_slot_unmasked             $6 = y
   55. cast_to_float_from_int         $6 = IntToFloat($6)
   56. copy_constant                  $7 = 0x437F0000 (255.0)
   57. div_float                      $6 /= $7
   58. copy_constant                  $7 = 0x3F800000 (1.0)
   59. copy_4_slots_masked            [main].result = Mask($4..7)
   60. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   61. load_condition_mask            CondMask = $2
   62. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   63. copy_slot_unmasked             $2 = y
   64. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   65. add_int                        $2 += $3
   66. copy_slot_masked               y = Mask($2)
   67. copy_slot_unmasked             $2 = y
   68. copy_constant                  $3 = 0x00000064 (1.401298e-43)
   69. cmplt_int                      $2 = lessThan($2, $3)
   70. merge_loop_mask                LoopMask &= $2
   71. stack_rewind
   72. branch_if_any_active_lanes     branch_if_any_active_lanes -54 (#18)
   73. load_loop_mask                 LoopMask = $1
   74. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   75. copy_slot_unmasked             $1 = x
   76. copy_constant                  $2 = 0x00000001 (1.401298e-45)
   77. add_int                        $1 += $2
   78. copy_slot_masked               x = Mask($1)
   79. copy_slot_unmasked             $1 = x
   80. copy_constant                  $2 = 0x00000064 (1.401298e-43)
   81. cmplt_int                      $1 = lessThan($1, $2)
   82. merge_loop_mask                LoopMask &= $1
   83. stack_rewind
   84. branch_if_any_active_lanes     branch_if_any_active_lanes -71 (#13)
   85. load_loop_mask                 LoopMask = $0
   86. copy_4_constants               $0..3 = colorGreen
   87. copy_4_slots_masked            [main].result = Mask($0..3)
   88. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   89. load_src                       src.rgba = [main].result
