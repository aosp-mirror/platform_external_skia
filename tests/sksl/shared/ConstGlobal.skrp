    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0x00000007 (9.809089e-45)
    4. copy_slot_unmasked             SEVEN = $0
    5. copy_constant                  $0 = 0x0000000A (1.401298e-44)
    6. copy_slot_unmasked             TEN = $0
    7. store_condition_mask           $8 = CondMask
    8. branch_if_no_active_lanes      branch_if_no_active_lanes +17 (#25)
    9. store_return_mask              $9 = RetMask
   10. copy_slot_unmasked             $10 = SEVEN
   11. copy_slot_unmasked             seven = $10
   12. copy_slot_unmasked             $10 = TEN
   13. copy_slot_unmasked             ten = $10
   14. copy_slot_unmasked             $10 = seven
   15. copy_constant                  $11 = 0x00000007 (9.809089e-45)
   16. cmpeq_int                      $10 = equal($10, $11)
   17. copy_slot_unmasked             $11 = ten
   18. copy_constant                  $12 = 0x0000000A (1.401298e-44)
   19. cmpeq_int                      $11 = equal($11, $12)
   20. bitwise_and_int                $10 &= $11
   21. copy_slot_masked               [verify_const_globals].result = Mask($10)
   22. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   23. load_return_mask               RetMask = $9
   24. copy_slot_unmasked             $9 = [verify_const_globals].result
   25. copy_4_constants               $0..3 = colorRed
   26. merge_condition_mask           CondMask = $8 & $9
   27. copy_4_constants               $4..7 = colorGreen
   28. copy_4_slots_masked            $0..3 = Mask($4..7)
   29. load_condition_mask            CondMask = $8
   30. copy_4_slots_masked            [main].result = Mask($0..3)
   31. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   32. load_src                       src.rgba = [main].result
