    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  $0 = 0xFFFFFFFF
    4. copy_slot_unmasked             _0_ok = $0
    5. copy_4_constants               $1..4 = testMatrix2x2
    6. copy_constant                  $5 = 0x3F800000 (1.0)
    7. copy_constant                  $6 = 0x40000000 (2.0)
    8. copy_constant                  $7 = 0x40400000 (3.0)
    9. copy_constant                  $8 = 0x40800000 (4.0)
   10. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   11. bitwise_and_2_ints             $1..2 &= $3..4
   12. bitwise_and_int                $1 &= $2
   13. bitwise_and_int                $0 &= $1
   14. copy_slot_masked               _0_ok = Mask($0)
   15. copy_4_constants               $1..4 = testMatrix3x3(0..3)
   16. copy_4_constants               $5..8 = testMatrix3x3(4..7)
   17. copy_constant                  $9 = testMatrix3x3(8)
   18. copy_constant                  $10 = 0x3F800000 (1.0)
   19. copy_constant                  $11 = 0x40000000 (2.0)
   20. copy_constant                  $12 = 0x40400000 (3.0)
   21. copy_constant                  $13 = 0x40800000 (4.0)
   22. copy_constant                  $14 = 0x40A00000 (5.0)
   23. copy_constant                  $15 = 0x40C00000 (6.0)
   24. copy_constant                  $16 = 0x40E00000 (7.0)
   25. copy_constant                  $17 = 0x41000000 (8.0)
   26. copy_constant                  $18 = 0x41100000 (9.0)
   27. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
   28. bitwise_and_4_ints             $2..5 &= $6..9
   29. bitwise_and_2_ints             $2..3 &= $4..5
   30. bitwise_and_int                $2 &= $3
   31. bitwise_and_int                $1 &= $2
   32. bitwise_and_int                $0 &= $1
   33. copy_slot_masked               _0_ok = Mask($0)
   34. copy_4_constants               $1..4 = testMatrix2x2
   35. zero_slot_unmasked             $5 = 0
   36. copy_constant                  $6 = 0x42C80000 (100.0)
   37. swizzle_4                      $5..8 = ($5..8).yxxy
   38. cmpne_4_floats                 $1..4 = notEqual($1..4, $5..8)
   39. bitwise_or_2_ints              $1..2 |= $3..4
   40. bitwise_or_int                 $1 |= $2
   41. bitwise_and_int                $0 &= $1
   42. copy_slot_masked               _0_ok = Mask($0)
   43. copy_4_constants               $1..4 = testMatrix3x3(0..3)
   44. copy_4_constants               $5..8 = testMatrix3x3(4..7)
   45. copy_constant                  $9 = testMatrix3x3(8)
   46. copy_constant                  $10 = 0x41100000 (9.0)
   47. copy_constant                  $11 = 0x41000000 (8.0)
   48. copy_constant                  $12 = 0x40E00000 (7.0)
   49. copy_constant                  $13 = 0x40C00000 (6.0)
   50. copy_constant                  $14 = 0x40A00000 (5.0)
   51. copy_constant                  $15 = 0x40800000 (4.0)
   52. copy_constant                  $16 = 0x40400000 (3.0)
   53. copy_constant                  $17 = 0x40000000 (2.0)
   54. copy_constant                  $18 = 0x3F800000 (1.0)
   55. cmpne_n_floats                 $1..9 = notEqual($1..9, $10..18)
   56. bitwise_or_4_ints              $2..5 |= $6..9
   57. bitwise_or_2_ints              $2..3 |= $4..5
   58. bitwise_or_int                 $2 |= $3
   59. bitwise_or_int                 $1 |= $2
   60. bitwise_and_int                $0 &= $1
   61. copy_slot_masked               _0_ok = Mask($0)
   62. copy_constant                  $0 = colorGreen(0)
   63. copy_slot_unmasked             _1_zero = $0
   64. copy_constant                  $0 = colorGreen(1)
   65. copy_slot_unmasked             _2_one = $0
   66. copy_constant                  $0 = 0x40000000 (2.0)
   67. copy_slot_unmasked             $1 = _2_one
   68. mul_float                      $0 *= $1
   69. copy_slot_unmasked             _3_two = $0
   70. copy_constant                  $0 = 0x41100000 (9.0)
   71. copy_slot_unmasked             $1 = _2_one
   72. mul_float                      $0 *= $1
   73. copy_slot_unmasked             _4_nine = $0
   74. copy_slot_unmasked             $0 = _0_ok
   75. copy_slot_unmasked             $1 = _2_one
   76. copy_slot_unmasked             $2 = _1_zero
   77. copy_2_slots_unmasked          $3..4 = _1_zero(0..1)
   78. copy_constant                  $5 = 0x3F800000 (1.0)
   79. zero_slot_unmasked             $6 = 0
   80. zero_slot_unmasked             $7 = 0
   81. copy_constant                  $8 = 0x3F800000 (1.0)
   82. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   83. bitwise_and_2_ints             $1..2 &= $3..4
   84. bitwise_and_int                $1 &= $2
   85. bitwise_and_int                $0 &= $1
   86. copy_slot_masked               _0_ok = Mask($0)
   87. copy_slot_unmasked             $1 = _2_one
   88. copy_2_slots_unmasked          $2..3 = _1_zero(0..1)
   89. copy_slot_unmasked             $4 = _2_one
   90. copy_constant                  $5 = 0x3F800000 (1.0)
   91. zero_slot_unmasked             $6 = 0
   92. zero_slot_unmasked             $7 = 0
   93. copy_constant                  $8 = 0x3F800000 (1.0)
   94. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   95. bitwise_and_2_ints             $1..2 &= $3..4
   96. bitwise_and_int                $1 &= $2
   97. bitwise_not_int                $1 = ~$1
   98. bitwise_and_int                $0 &= $1
   99. copy_slot_masked               _0_ok = Mask($0)
  100. zero_slot_unmasked             $1 = 0
  101. copy_slot_unmasked             $2 = _2_one
  102. swizzle_4                      $1..4 = ($1..4).yxxy
  103. zero_slot_unmasked             $5 = 0
  104. copy_constant                  $6 = 0x3F800000 (1.0)
  105. swizzle_4                      $5..8 = ($5..8).yxxy
  106. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  107. bitwise_and_2_ints             $1..2 &= $3..4
  108. bitwise_and_int                $1 &= $2
  109. bitwise_and_int                $0 &= $1
  110. copy_slot_masked               _0_ok = Mask($0)
  111. zero_slot_unmasked             $1 = 0
  112. copy_slot_unmasked             $2 = _2_one
  113. swizzle_4                      $1..4 = ($1..4).yxxy
  114. zero_slot_unmasked             $5 = 0
  115. zero_slot_unmasked             $6 = 0
  116. swizzle_4                      $5..8 = ($5..8).yxxy
  117. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  118. bitwise_and_2_ints             $1..2 &= $3..4
  119. bitwise_and_int                $1 &= $2
  120. bitwise_not_int                $1 = ~$1
  121. bitwise_and_int                $0 &= $1
  122. copy_slot_masked               _0_ok = Mask($0)
  123. zero_2_slots_unmasked          $1..2 = 0
  124. copy_slot_unmasked             $3 = _2_one
  125. sub_float                      $2 -= $3
  126. swizzle_4                      $1..4 = ($1..4).yxxy
  127. zero_slot_unmasked             $5 = 0
  128. copy_constant                  $6 = 0xBF800000 (-1.0)
  129. swizzle_4                      $5..8 = ($5..8).yxxy
  130. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  131. bitwise_and_2_ints             $1..2 &= $3..4
  132. bitwise_and_int                $1 &= $2
  133. bitwise_and_int                $0 &= $1
  134. copy_slot_masked               _0_ok = Mask($0)
  135. zero_slot_unmasked             $1 = 0
  136. copy_slot_unmasked             $2 = _1_zero
  137. swizzle_4                      $1..4 = ($1..4).yxxy
  138. zero_slot_unmasked             $5 = 0
  139. copy_constant                  $6 = 0x80000000 (-0.0)
  140. swizzle_4                      $5..8 = ($5..8).yxxy
  141. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  142. bitwise_and_2_ints             $1..2 &= $3..4
  143. bitwise_and_int                $1 &= $2
  144. bitwise_and_int                $0 &= $1
  145. copy_slot_masked               _0_ok = Mask($0)
  146. zero_4_slots_unmasked          $1..4 = 0
  147. zero_2_slots_unmasked          $5..6 = 0
  148. copy_slot_unmasked             $7 = _2_one
  149. sub_float                      $6 -= $7
  150. swizzle_4                      $5..8 = ($5..8).yxxy
  151. sub_4_floats                   $1..4 -= $5..8
  152. zero_slot_unmasked             $5 = 0
  153. copy_constant                  $6 = 0x3F800000 (1.0)
  154. swizzle_4                      $5..8 = ($5..8).yxxy
  155. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  156. bitwise_and_2_ints             $1..2 &= $3..4
  157. bitwise_and_int                $1 &= $2
  158. bitwise_and_int                $0 &= $1
  159. copy_slot_masked               _0_ok = Mask($0)
  160. zero_4_slots_unmasked          $1..4 = 0
  161. zero_slot_unmasked             $5 = 0
  162. copy_slot_unmasked             $6 = _1_zero
  163. swizzle_4                      $5..8 = ($5..8).yxxy
  164. sub_4_floats                   $1..4 -= $5..8
  165. zero_slot_unmasked             $5 = 0
  166. copy_constant                  $6 = 0x80000000 (-0.0)
  167. swizzle_4                      $5..8 = ($5..8).yxxy
  168. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  169. bitwise_and_2_ints             $1..2 &= $3..4
  170. bitwise_and_int                $1 &= $2
  171. bitwise_and_int                $0 &= $1
  172. copy_slot_masked               _0_ok = Mask($0)
  173. zero_slot_unmasked             $1 = 0
  174. copy_slot_unmasked             $2 = _2_one
  175. swizzle_4                      $1..4 = ($1..4).yxxy
  176. copy_constant                  $5 = 0x3F800000 (1.0)
  177. zero_slot_unmasked             $6 = 0
  178. zero_slot_unmasked             $7 = 0
  179. copy_constant                  $8 = 0x3F800000 (1.0)
  180. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  181. bitwise_and_2_ints             $1..2 &= $3..4
  182. bitwise_and_int                $1 &= $2
  183. bitwise_and_int                $0 &= $1
  184. copy_slot_masked               _0_ok = Mask($0)
  185. zero_slot_unmasked             $1 = 0
  186. copy_slot_unmasked             $2 = _3_two
  187. swizzle_4                      $1..4 = ($1..4).yxxy
  188. copy_constant                  $5 = 0x3F800000 (1.0)
  189. zero_slot_unmasked             $6 = 0
  190. zero_slot_unmasked             $7 = 0
  191. copy_constant                  $8 = 0x3F800000 (1.0)
  192. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  193. bitwise_and_2_ints             $1..2 &= $3..4
  194. bitwise_and_int                $1 &= $2
  195. bitwise_not_int                $1 = ~$1
  196. bitwise_and_int                $0 &= $1
  197. copy_slot_masked               _0_ok = Mask($0)
  198. zero_slot_unmasked             $1 = 0
  199. copy_slot_unmasked             $2 = _2_one
  200. swizzle_4                      $1..4 = ($1..4).yxxy
  201. zero_slot_unmasked             $5 = 0
  202. copy_constant                  $6 = 0x3F800000 (1.0)
  203. swizzle_4                      $5..8 = ($5..8).yxxy
  204. cmpne_4_floats                 $1..4 = notEqual($1..4, $5..8)
  205. bitwise_or_2_ints              $1..2 |= $3..4
  206. bitwise_or_int                 $1 |= $2
  207. bitwise_not_int                $1 = ~$1
  208. bitwise_and_int                $0 &= $1
  209. copy_slot_masked               _0_ok = Mask($0)
  210. zero_slot_unmasked             $1 = 0
  211. copy_slot_unmasked             $2 = _2_one
  212. swizzle_4                      $1..4 = ($1..4).yxxy
  213. zero_slot_unmasked             $5 = 0
  214. zero_slot_unmasked             $6 = 0
  215. swizzle_4                      $5..8 = ($5..8).yxxy
  216. cmpne_4_floats                 $1..4 = notEqual($1..4, $5..8)
  217. bitwise_or_2_ints              $1..2 |= $3..4
  218. bitwise_or_int                 $1 |= $2
  219. bitwise_and_int                $0 &= $1
  220. copy_slot_masked               _0_ok = Mask($0)
  221. copy_slot_unmasked             $1 = _2_one
  222. copy_slot_unmasked             $2 = _1_zero
  223. copy_slot_unmasked             $3 = _1_zero
  224. copy_2_slots_unmasked          $4..5 = _1_zero(0..1)
  225. copy_slot_unmasked             $6 = _1_zero
  226. copy_slot_unmasked             $7 = _1_zero
  227. copy_2_slots_unmasked          $8..9 = _1_zero(0..1)
  228. zero_slot_unmasked             $10 = 0
  229. copy_constant                  $11 = 0x3F800000 (1.0)
  230. swizzle_4                      $10..13 = ($10..13).yxxy
  231. zero_slot_unmasked             $14 = 0
  232. copy_constant                  $15 = 0x3F800000 (1.0)
  233. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
  234. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
  235. bitwise_and_4_ints             $2..5 &= $6..9
  236. bitwise_and_2_ints             $2..3 &= $4..5
  237. bitwise_and_int                $2 &= $3
  238. bitwise_and_int                $1 &= $2
  239. bitwise_and_int                $0 &= $1
  240. copy_slot_masked               _0_ok = Mask($0)
  241. copy_slot_unmasked             $1 = _4_nine
  242. copy_slot_unmasked             $2 = _1_zero
  243. copy_slot_unmasked             $3 = _1_zero
  244. copy_slot_unmasked             $4 = _1_zero
  245. copy_slot_unmasked             $5 = _4_nine
  246. copy_slot_unmasked             $6 = _1_zero
  247. copy_slot_unmasked             $7 = _1_zero
  248. copy_2_slots_unmasked          $8..9 = _1_zero(0..1)
  249. zero_slot_unmasked             $10 = 0
  250. copy_constant                  $11 = 0x41100000 (9.0)
  251. swizzle_4                      $10..13 = ($10..13).yxxy
  252. zero_slot_unmasked             $14 = 0
  253. copy_constant                  $15 = 0x3F800000 (1.0)
  254. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
  255. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
  256. bitwise_and_4_ints             $2..5 &= $6..9
  257. bitwise_and_2_ints             $2..3 &= $4..5
  258. bitwise_and_int                $2 &= $3
  259. bitwise_and_int                $1 &= $2
  260. bitwise_and_int                $0 &= $1
  261. copy_slot_masked               _0_ok = Mask($0)
  262. zero_slot_unmasked             $1 = 0
  263. copy_slot_unmasked             $2 = _2_one
  264. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
  265. zero_slot_unmasked             $10 = 0
  266. copy_constant                  $11 = 0x3F800000 (1.0)
  267. swizzle_4                      $10..13 = ($10..13).yxxy
  268. zero_slot_unmasked             $14 = 0
  269. copy_constant                  $15 = 0x3F800000 (1.0)
  270. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
  271. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
  272. bitwise_and_4_ints             $2..5 &= $6..9
  273. bitwise_and_2_ints             $2..3 &= $4..5
  274. bitwise_and_int                $2 &= $3
  275. bitwise_and_int                $1 &= $2
  276. bitwise_and_int                $0 &= $1
  277. copy_slot_masked               _0_ok = Mask($0)
  278. copy_slot_unmasked             $1 = _4_nine
  279. zero_slot_unmasked             $2 = 0
  280. zero_slot_unmasked             $3 = 0
  281. zero_slot_unmasked             $4 = 0
  282. copy_slot_unmasked             $5 = _4_nine
  283. zero_slot_unmasked             $6 = 0
  284. zero_slot_unmasked             $7 = 0
  285. zero_slot_unmasked             $8 = 0
  286. copy_slot_unmasked             $9 = _2_one
  287. zero_slot_unmasked             $10 = 0
  288. copy_constant                  $11 = 0x41100000 (9.0)
  289. swizzle_4                      $10..13 = ($10..13).yxxy
  290. zero_slot_unmasked             $14 = 0
  291. copy_constant                  $15 = 0x3F800000 (1.0)
  292. shuffle                        $12..18 = ($12..18)[2 0 1 2 2 2 3]
  293. cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
  294. bitwise_and_4_ints             $2..5 &= $6..9
  295. bitwise_and_2_ints             $2..3 &= $4..5
  296. bitwise_and_int                $2 &= $3
  297. bitwise_and_int                $1 &= $2
  298. bitwise_and_int                $0 &= $1
  299. copy_slot_masked               _0_ok = Mask($0)
  300. zero_slot_unmasked             $1 = 0
  301. copy_slot_unmasked             $2 = _2_one
  302. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
  303. shuffle                        $3..4 = ($3..4)[1 2]
  304. zero_slot_unmasked             $5 = 0
  305. copy_constant                  $6 = 0x3F800000 (1.0)
  306. swizzle_4                      $5..8 = ($5..8).yxxy
  307. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  308. bitwise_and_2_ints             $1..2 &= $3..4
  309. bitwise_and_int                $1 &= $2
  310. bitwise_and_int                $0 &= $1
  311. copy_slot_masked               _0_ok = Mask($0)
  312. zero_slot_unmasked             $1 = 0
  313. copy_slot_unmasked             $2 = _2_one
  314. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
  315. shuffle                        $3..4 = ($3..4)[1 2]
  316. zero_slot_unmasked             $5 = 0
  317. copy_constant                  $6 = 0x3F800000 (1.0)
  318. swizzle_4                      $5..8 = ($5..8).yxxy
  319. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  320. bitwise_and_2_ints             $1..2 &= $3..4
  321. bitwise_and_int                $1 &= $2
  322. bitwise_and_int                $0 &= $1
  323. copy_slot_masked               _0_ok = Mask($0)
  324. copy_slot_unmasked             $1 = _2_one
  325. copy_slot_unmasked             $2 = _1_zero
  326. copy_2_slots_unmasked          $3..4 = _1_zero(0..1)
  327. zero_slot_unmasked             $5 = 0
  328. copy_constant                  $6 = 0x3F800000 (1.0)
  329. swizzle_4                      $5..8 = ($5..8).yxxy
  330. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  331. bitwise_and_2_ints             $1..2 &= $3..4
  332. bitwise_and_int                $1 &= $2
  333. bitwise_and_int                $0 &= $1
  334. copy_slot_masked               _0_ok = Mask($0)
  335. copy_slot_unmasked             $1 = _2_one
  336. copy_slot_unmasked             $2 = _1_zero
  337. copy_2_slots_unmasked          $3..4 = _1_zero(0..1)
  338. zero_slot_unmasked             $5 = 0
  339. copy_constant                  $6 = 0x3F800000 (1.0)
  340. swizzle_4                      $5..8 = ($5..8).yxxy
  341. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  342. bitwise_and_2_ints             $1..2 &= $3..4
  343. bitwise_and_int                $1 &= $2
  344. bitwise_and_int                $0 &= $1
  345. copy_slot_masked               _0_ok = Mask($0)
  346. copy_slot_unmasked             $1 = _2_one
  347. copy_slot_unmasked             $2 = _1_zero
  348. copy_2_slots_unmasked          $3..4 = _1_zero(0..1)
  349. zero_slot_unmasked             $5 = 0
  350. copy_constant                  $6 = 0x3F800000 (1.0)
  351. swizzle_4                      $5..8 = ($5..8).yxxy
  352. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  353. bitwise_and_2_ints             $1..2 &= $3..4
  354. bitwise_and_int                $1 &= $2
  355. bitwise_and_int                $0 &= $1
  356. copy_slot_masked               _0_ok = Mask($0)
  357. copy_4_constants               $1..4 = testMatrix2x2
  358. copy_slot_unmasked             $5 = _2_one
  359. swizzle_4                      $5..8 = ($5..8).xxxx
  360. mul_4_floats                   $1..4 *= $5..8
  361. copy_constant                  $5 = 0x3F800000 (1.0)
  362. copy_constant                  $6 = 0x40000000 (2.0)
  363. copy_constant                  $7 = 0x40400000 (3.0)
  364. copy_constant                  $8 = 0x40800000 (4.0)
  365. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  366. bitwise_and_2_ints             $1..2 &= $3..4
  367. bitwise_and_int                $1 &= $2
  368. bitwise_and_int                $0 &= $1
  369. copy_slot_masked               _0_ok = Mask($0)
  370. copy_4_constants               $1..4 = testMatrix2x2
  371. copy_slot_unmasked             $5 = _2_one
  372. swizzle_4                      $5..8 = ($5..8).xxxx
  373. mul_4_floats                   $1..4 *= $5..8
  374. copy_4_constants               $5..8 = testMatrix2x2
  375. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  376. bitwise_and_2_ints             $1..2 &= $3..4
  377. bitwise_and_int                $1 &= $2
  378. bitwise_and_int                $0 &= $1
  379. copy_slot_masked               _0_ok = Mask($0)
  380. copy_4_constants               $1..4 = testMatrix2x2
  381. copy_slot_unmasked             $5 = _1_zero
  382. swizzle_4                      $5..8 = ($5..8).xxxx
  383. mul_4_floats                   $1..4 *= $5..8
  384. zero_slot_unmasked             $5 = 0
  385. swizzle_4                      $5..8 = ($5..8).xxxx
  386. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  387. bitwise_and_2_ints             $1..2 &= $3..4
  388. bitwise_and_int                $1 &= $2
  389. bitwise_and_int                $0 &= $1
  390. copy_slot_masked               _0_ok = Mask($0)
  391. copy_2_slots_unmasked          $0..1 = _2_one(0..1)
  392. copy_constant                  $2 = 0x40400000 (3.0)
  393. copy_constant                  $3 = 0x40800000 (4.0)
  394. copy_constant                  $4 = 0x40A00000 (5.0)
  395. copy_constant                  $5 = 0x40C00000 (6.0)
  396. copy_constant                  $6 = 0x40E00000 (7.0)
  397. copy_constant                  $7 = 0x41000000 (8.0)
  398. copy_slot_unmasked             $8 = _4_nine
  399. copy_4_slots_unmasked          _5_m(0..3) = $0..3
  400. copy_4_slots_unmasked          _5_m(4..7) = $4..7
  401. copy_slot_unmasked             _5_m(8) = $8
  402. copy_slot_unmasked             $0 = _0_ok
  403. copy_3_slots_unmasked          $1..3 = _5_m(0..2)
  404. copy_constant                  $4 = 0x3F800000 (1.0)
  405. copy_constant                  $5 = 0x40000000 (2.0)
  406. copy_constant                  $6 = 0x40400000 (3.0)
  407. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  408. bitwise_and_int                $2 &= $3
  409. bitwise_and_int                $1 &= $2
  410. bitwise_and_int                $0 &= $1
  411. copy_slot_masked               _0_ok = Mask($0)
  412. copy_3_slots_unmasked          $1..3 = _5_m(3..5)
  413. copy_constant                  $4 = 0x40800000 (4.0)
  414. copy_constant                  $5 = 0x40A00000 (5.0)
  415. copy_constant                  $6 = 0x40C00000 (6.0)
  416. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  417. bitwise_and_int                $2 &= $3
  418. bitwise_and_int                $1 &= $2
  419. bitwise_and_int                $0 &= $1
  420. copy_slot_masked               _0_ok = Mask($0)
  421. copy_3_slots_unmasked          $1..3 = _5_m(6..8)
  422. copy_constant                  $4 = 0x40E00000 (7.0)
  423. copy_constant                  $5 = 0x41000000 (8.0)
  424. copy_constant                  $6 = 0x41100000 (9.0)
  425. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  426. bitwise_and_int                $2 &= $3
  427. bitwise_and_int                $1 &= $2
  428. bitwise_and_int                $0 &= $1
  429. copy_slot_masked               _0_ok = Mask($0)
  430. copy_slot_unmasked             $1 = _5_m(0)
  431. copy_constant                  $2 = 0x3F800000 (1.0)
  432. cmpeq_float                    $1 = equal($1, $2)
  433. bitwise_and_int                $0 &= $1
  434. copy_slot_masked               _0_ok = Mask($0)
  435. copy_3_slots_unmasked          $1..3 = _5_m(0..2)
  436. swizzle_1                      $1 = ($1..2).y
  437. copy_constant                  $2 = 0x40000000 (2.0)
  438. cmpeq_float                    $1 = equal($1, $2)
  439. bitwise_and_int                $0 &= $1
  440. copy_slot_masked               _0_ok = Mask($0)
  441. copy_3_slots_unmasked          $1..3 = _5_m(0..2)
  442. swizzle_1                      $1 = ($1..3).z
  443. copy_constant                  $2 = 0x40400000 (3.0)
  444. cmpeq_float                    $1 = equal($1, $2)
  445. bitwise_and_int                $0 &= $1
  446. copy_slot_masked               _0_ok = Mask($0)
  447. copy_slot_unmasked             $1 = _5_m(3)
  448. copy_constant                  $2 = 0x40800000 (4.0)
  449. cmpeq_float                    $1 = equal($1, $2)
  450. bitwise_and_int                $0 &= $1
  451. copy_slot_masked               _0_ok = Mask($0)
  452. copy_3_slots_unmasked          $1..3 = _5_m(3..5)
  453. swizzle_1                      $1 = ($1..2).y
  454. copy_constant                  $2 = 0x40A00000 (5.0)
  455. cmpeq_float                    $1 = equal($1, $2)
  456. bitwise_and_int                $0 &= $1
  457. copy_slot_masked               _0_ok = Mask($0)
  458. copy_3_slots_unmasked          $1..3 = _5_m(3..5)
  459. swizzle_1                      $1 = ($1..3).z
  460. copy_constant                  $2 = 0x40C00000 (6.0)
  461. cmpeq_float                    $1 = equal($1, $2)
  462. bitwise_and_int                $0 &= $1
  463. copy_slot_masked               _0_ok = Mask($0)
  464. copy_slot_unmasked             $1 = _5_m(6)
  465. copy_constant                  $2 = 0x40E00000 (7.0)
  466. cmpeq_float                    $1 = equal($1, $2)
  467. bitwise_and_int                $0 &= $1
  468. copy_slot_masked               _0_ok = Mask($0)
  469. copy_3_slots_unmasked          $1..3 = _5_m(6..8)
  470. swizzle_1                      $1 = ($1..2).y
  471. copy_constant                  $2 = 0x41000000 (8.0)
  472. cmpeq_float                    $1 = equal($1, $2)
  473. bitwise_and_int                $0 &= $1
  474. copy_slot_masked               _0_ok = Mask($0)
  475. copy_3_slots_unmasked          $1..3 = _5_m(6..8)
  476. swizzle_1                      $1 = ($1..3).z
  477. copy_constant                  $2 = 0x41100000 (9.0)
  478. cmpeq_float                    $1 = equal($1, $2)
  479. bitwise_and_int                $0 &= $1
  480. copy_slot_masked               _0_ok = Mask($0)
  481. store_condition_mask           $19 = CondMask
  482. copy_slot_unmasked             $20 = _0_ok
  483. copy_4_constants               $0..3 = colorRed
  484. merge_condition_mask           CondMask = $19 & $20
  485. copy_4_constants               $4..7 = colorGreen
  486. copy_4_slots_masked            $0..3 = Mask($4..7)
  487. load_condition_mask            CondMask = $19
  488. copy_4_slots_masked            [main].result = Mask($0..3)
  489. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  490. load_src                       src.rgba = [main].result
