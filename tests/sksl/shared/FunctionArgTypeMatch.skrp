    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $152 = CondMask
    4. store_condition_mask           $28 = CondMask
    5. store_condition_mask           $117 = CondMask
    6. store_condition_mask           $8 = CondMask
    7. store_condition_mask           $48 = CondMask
    8. store_condition_mask           $34 = CondMask
    9. store_condition_mask           $12 = CondMask
   10. store_condition_mask           $40 = CondMask
   11. store_condition_mask           $73 = CondMask
   12. store_condition_mask           $55 = CondMask
   13. store_condition_mask           $17 = CondMask
   14. store_condition_mask           $141 = CondMask
   15. store_condition_mask           $67 = CondMask
   16. store_condition_mask           $136 = CondMask
   17. store_condition_mask           $24 = CondMask
   18. store_condition_mask           $159 = CondMask
   19. store_condition_mask           $122 = CondMask
   20. store_condition_mask           $99 = CondMask
   21. store_condition_mask           $92 = CondMask
   22. store_condition_mask           $106 = CondMask
   23. store_condition_mask           $112 = CondMask
   24. store_condition_mask           $148 = CondMask
   25. store_condition_mask           $44 = CondMask
   26. store_condition_mask           $134 = CondMask
   27. copy_constant                  $135 = 0xFFFFFFFF
   28. zero_slot_unmasked             $45 = 0
   29. merge_condition_mask           CondMask = $134 & $135
   30. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#38)
   31. store_return_mask              $46 = RetMask
   32. copy_constant                  $47 = 0xFFFFFFFF
   33. copy_slot_masked               [takes_void].result = Mask($47)
   34. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   35. load_return_mask               RetMask = $46
   36. copy_slot_unmasked             $46 = [takes_void].result
   37. copy_slot_masked               $45 = Mask($46)
   38. load_condition_mask            CondMask = $134
   39. zero_slot_unmasked             $149 = 0
   40. merge_condition_mask           CondMask = $44 & $45
   41. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#51)
   42. store_return_mask              $150 = RetMask
   43. copy_constant                  $151 = 0x3F800000 (1.0)
   44. copy_slot_unmasked             x = $151
   45. copy_constant                  $151 = 0xFFFFFFFF
   46. copy_slot_masked               [takes_float].result = Mask($151)
   47. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   48. load_return_mask               RetMask = $150
   49. copy_slot_unmasked             $150 = [takes_float].result
   50. copy_slot_masked               $149 = Mask($150)
   51. load_condition_mask            CondMask = $44
   52. zero_slot_unmasked             $113 = 0
   53. merge_condition_mask           CondMask = $148 & $149
   54. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#65)
   55. store_return_mask              $114 = RetMask
   56. copy_constant                  $115 = 0x40000000 (2.0)
   57. copy_slot_unmasked             $116 = $115
   58. copy_2_slots_unmasked          x = $115..116
   59. copy_constant                  $115 = 0xFFFFFFFF
   60. copy_slot_masked               [takes_float2].result = Mask($115)
   61. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   62. load_return_mask               RetMask = $114
   63. copy_slot_unmasked             $114 = [takes_float2].result
   64. copy_slot_masked               $113 = Mask($114)
   65. load_condition_mask            CondMask = $148
   66. zero_slot_unmasked             $107 = 0
   67. merge_condition_mask           CondMask = $112 & $113
   68. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#79)
   69. store_return_mask              $108 = RetMask
   70. copy_constant                  $109 = 0x40400000 (3.0)
   71. swizzle_3                      $109..111 = ($109..111).xxx
   72. copy_3_slots_unmasked          x = $109..111
   73. copy_constant                  $109 = 0xFFFFFFFF
   74. copy_slot_masked               [takes_float3].result = Mask($109)
   75. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   76. load_return_mask               RetMask = $108
   77. copy_slot_unmasked             $108 = [takes_float3].result
   78. copy_slot_masked               $107 = Mask($108)
   79. load_condition_mask            CondMask = $112
   80. zero_slot_unmasked             $93 = 0
   81. merge_condition_mask           CondMask = $106 & $107
   82. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#93)
   83. store_return_mask              $94 = RetMask
   84. copy_constant                  $95 = 0x40800000 (4.0)
   85. swizzle_4                      $95..98 = ($95..98).xxxx
   86. copy_4_slots_unmasked          x = $95..98
   87. copy_constant                  $95 = 0xFFFFFFFF
   88. copy_slot_masked               [takes_float4].result = Mask($95)
   89. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   90. load_return_mask               RetMask = $94
   91. copy_slot_unmasked             $94 = [takes_float4].result
   92. copy_slot_masked               $93 = Mask($94)
   93. load_condition_mask            CondMask = $106
   94. zero_slot_unmasked             $100 = 0
   95. merge_condition_mask           CondMask = $92 & $93
   96. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#108)
   97. store_return_mask              $101 = RetMask
   98. zero_slot_unmasked             $102 = 0
   99. copy_constant                  $103 = 0x40000000 (2.0)
  100. swizzle_4                      $102..105 = ($102..105).yxxy
  101. copy_4_slots_unmasked          x = $102..105
  102. copy_constant                  $102 = 0xFFFFFFFF
  103. copy_slot_masked               [takes_float2x2].result = Mask($102)
  104. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  105. load_return_mask               RetMask = $101
  106. copy_slot_unmasked             $101 = [takes_float2x2].result
  107. copy_slot_masked               $100 = Mask($101)
  108. load_condition_mask            CondMask = $92
  109. zero_slot_unmasked             $123 = 0
  110. merge_condition_mask           CondMask = $99 & $100
  111. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#125)
  112. store_return_mask              $124 = RetMask
  113. zero_slot_unmasked             $125 = 0
  114. copy_constant                  $126 = 0x40400000 (3.0)
  115. shuffle                        $125..133 = ($125..133)[1 0 0 0 1 0 0 0 1]
  116. copy_4_slots_unmasked          x(0..3) = $125..128
  117. copy_4_slots_unmasked          x(4..7) = $129..132
  118. copy_slot_unmasked             x(8) = $133
  119. copy_constant                  $125 = 0xFFFFFFFF
  120. copy_slot_masked               [takes_float3x3].result = Mask($125)
  121. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  122. load_return_mask               RetMask = $124
  123. copy_slot_unmasked             $124 = [takes_float3x3].result
  124. copy_slot_masked               $123 = Mask($124)
  125. load_condition_mask            CondMask = $99
  126. zero_slot_unmasked             $160 = 0
  127. merge_condition_mask           CondMask = $122 & $123
  128. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (#143)
  129. store_return_mask              $161 = RetMask
  130. zero_slot_unmasked             $162 = 0
  131. copy_constant                  $163 = 0x40800000 (4.0)
  132. shuffle                        $162..177 = ($162..177)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  133. copy_4_slots_unmasked          x(0..3) = $162..165
  134. copy_4_slots_unmasked          x(4..7) = $166..169
  135. copy_4_slots_unmasked          x(8..11) = $170..173
  136. copy_4_slots_unmasked          x(12..15) = $174..177
  137. copy_constant                  $162 = 0xFFFFFFFF
  138. copy_slot_masked               [takes_float4x4].result = Mask($162)
  139. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  140. load_return_mask               RetMask = $161
  141. copy_slot_unmasked             $161 = [takes_float4x4].result
  142. copy_slot_masked               $160 = Mask($161)
  143. load_condition_mask            CondMask = $122
  144. zero_slot_unmasked             $25 = 0
  145. merge_condition_mask           CondMask = $159 & $160
  146. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#156)
  147. store_return_mask              $26 = RetMask
  148. copy_constant                  $27 = 0x3F800000 (1.0)
  149. copy_slot_unmasked             x = $27
  150. copy_constant                  $27 = 0xFFFFFFFF
  151. copy_slot_masked               [takes_half].result = Mask($27)
  152. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  153. load_return_mask               RetMask = $26
  154. copy_slot_unmasked             $26 = [takes_half].result
  155. copy_slot_masked               $25 = Mask($26)
  156. load_condition_mask            CondMask = $159
  157. zero_slot_unmasked             $137 = 0
  158. merge_condition_mask           CondMask = $24 & $25
  159. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#170)
  160. store_return_mask              $138 = RetMask
  161. copy_constant                  $139 = 0x40000000 (2.0)
  162. copy_slot_unmasked             $140 = $139
  163. copy_2_slots_unmasked          x = $139..140
  164. copy_constant                  $139 = 0xFFFFFFFF
  165. copy_slot_masked               [takes_half2].result = Mask($139)
  166. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  167. load_return_mask               RetMask = $138
  168. copy_slot_unmasked             $138 = [takes_half2].result
  169. copy_slot_masked               $137 = Mask($138)
  170. load_condition_mask            CondMask = $24
  171. zero_slot_unmasked             $68 = 0
  172. merge_condition_mask           CondMask = $136 & $137
  173. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#184)
  174. store_return_mask              $69 = RetMask
  175. copy_constant                  $70 = 0x40400000 (3.0)
  176. swizzle_3                      $70..72 = ($70..72).xxx
  177. copy_3_slots_unmasked          x = $70..72
  178. copy_constant                  $70 = 0xFFFFFFFF
  179. copy_slot_masked               [takes_half3].result = Mask($70)
  180. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  181. load_return_mask               RetMask = $69
  182. copy_slot_unmasked             $69 = [takes_half3].result
  183. copy_slot_masked               $68 = Mask($69)
  184. load_condition_mask            CondMask = $136
  185. zero_slot_unmasked             $142 = 0
  186. merge_condition_mask           CondMask = $67 & $68
  187. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#198)
  188. store_return_mask              $143 = RetMask
  189. copy_constant                  $144 = 0x40800000 (4.0)
  190. swizzle_4                      $144..147 = ($144..147).xxxx
  191. copy_4_slots_unmasked          x = $144..147
  192. copy_constant                  $144 = 0xFFFFFFFF
  193. copy_slot_masked               [takes_half4].result = Mask($144)
  194. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  195. load_return_mask               RetMask = $143
  196. copy_slot_unmasked             $143 = [takes_half4].result
  197. copy_slot_masked               $142 = Mask($143)
  198. load_condition_mask            CondMask = $67
  199. zero_slot_unmasked             $18 = 0
  200. merge_condition_mask           CondMask = $141 & $142
  201. branch_if_no_active_lanes      branch_if_no_active_lanes +12 (#213)
  202. store_return_mask              $19 = RetMask
  203. zero_slot_unmasked             $20 = 0
  204. copy_constant                  $21 = 0x40000000 (2.0)
  205. swizzle_4                      $20..23 = ($20..23).yxxy
  206. copy_4_slots_unmasked          x = $20..23
  207. copy_constant                  $20 = 0xFFFFFFFF
  208. copy_slot_masked               [takes_half2x2].result = Mask($20)
  209. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  210. load_return_mask               RetMask = $19
  211. copy_slot_unmasked             $19 = [takes_half2x2].result
  212. copy_slot_masked               $18 = Mask($19)
  213. load_condition_mask            CondMask = $141
  214. zero_slot_unmasked             $56 = 0
  215. merge_condition_mask           CondMask = $17 & $18
  216. branch_if_no_active_lanes      branch_if_no_active_lanes +14 (#230)
  217. store_return_mask              $57 = RetMask
  218. zero_slot_unmasked             $58 = 0
  219. copy_constant                  $59 = 0x40400000 (3.0)
  220. shuffle                        $58..66 = ($58..66)[1 0 0 0 1 0 0 0 1]
  221. copy_4_slots_unmasked          x(0..3) = $58..61
  222. copy_4_slots_unmasked          x(4..7) = $62..65
  223. copy_slot_unmasked             x(8) = $66
  224. copy_constant                  $58 = 0xFFFFFFFF
  225. copy_slot_masked               [takes_half3x3].result = Mask($58)
  226. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  227. load_return_mask               RetMask = $57
  228. copy_slot_unmasked             $57 = [takes_half3x3].result
  229. copy_slot_masked               $56 = Mask($57)
  230. load_condition_mask            CondMask = $17
  231. zero_slot_unmasked             $74 = 0
  232. merge_condition_mask           CondMask = $55 & $56
  233. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (#248)
  234. store_return_mask              $75 = RetMask
  235. zero_slot_unmasked             $76 = 0
  236. copy_constant                  $77 = 0x40800000 (4.0)
  237. shuffle                        $76..91 = ($76..91)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  238. copy_4_slots_unmasked          x(0..3) = $76..79
  239. copy_4_slots_unmasked          x(4..7) = $80..83
  240. copy_4_slots_unmasked          x(8..11) = $84..87
  241. copy_4_slots_unmasked          x(12..15) = $88..91
  242. copy_constant                  $76 = 0xFFFFFFFF
  243. copy_slot_masked               [takes_half4x4].result = Mask($76)
  244. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  245. load_return_mask               RetMask = $75
  246. copy_slot_unmasked             $75 = [takes_half4x4].result
  247. copy_slot_masked               $74 = Mask($75)
  248. load_condition_mask            CondMask = $55
  249. zero_slot_unmasked             $41 = 0
  250. merge_condition_mask           CondMask = $73 & $74
  251. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#261)
  252. store_return_mask              $42 = RetMask
  253. copy_constant                  $43 = 0xFFFFFFFF
  254. copy_slot_unmasked             x = $43
  255. copy_constant                  $43 = 0xFFFFFFFF
  256. copy_slot_masked               [takes_bool].result = Mask($43)
  257. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  258. load_return_mask               RetMask = $42
  259. copy_slot_unmasked             $42 = [takes_bool].result
  260. copy_slot_masked               $41 = Mask($42)
  261. load_condition_mask            CondMask = $73
  262. zero_slot_unmasked             $13 = 0
  263. merge_condition_mask           CondMask = $40 & $41
  264. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#275)
  265. store_return_mask              $14 = RetMask
  266. copy_constant                  $15 = 0xFFFFFFFF
  267. copy_slot_unmasked             $16 = $15
  268. copy_2_slots_unmasked          x = $15..16
  269. copy_constant                  $15 = 0xFFFFFFFF
  270. copy_slot_masked               [takes_bool2].result = Mask($15)
  271. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  272. load_return_mask               RetMask = $14
  273. copy_slot_unmasked             $14 = [takes_bool2].result
  274. copy_slot_masked               $13 = Mask($14)
  275. load_condition_mask            CondMask = $40
  276. zero_slot_unmasked             $35 = 0
  277. merge_condition_mask           CondMask = $12 & $13
  278. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#289)
  279. store_return_mask              $36 = RetMask
  280. copy_constant                  $37 = 0xFFFFFFFF
  281. swizzle_3                      $37..39 = ($37..39).xxx
  282. copy_3_slots_unmasked          x = $37..39
  283. copy_constant                  $37 = 0xFFFFFFFF
  284. copy_slot_masked               [takes_bool3].result = Mask($37)
  285. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  286. load_return_mask               RetMask = $36
  287. copy_slot_unmasked             $36 = [takes_bool3].result
  288. copy_slot_masked               $35 = Mask($36)
  289. load_condition_mask            CondMask = $12
  290. zero_slot_unmasked             $49 = 0
  291. merge_condition_mask           CondMask = $34 & $35
  292. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#303)
  293. store_return_mask              $50 = RetMask
  294. copy_constant                  $51 = 0xFFFFFFFF
  295. swizzle_4                      $51..54 = ($51..54).xxxx
  296. copy_4_slots_unmasked          x = $51..54
  297. copy_constant                  $51 = 0xFFFFFFFF
  298. copy_slot_masked               [takes_bool4].result = Mask($51)
  299. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  300. load_return_mask               RetMask = $50
  301. copy_slot_unmasked             $50 = [takes_bool4].result
  302. copy_slot_masked               $49 = Mask($50)
  303. load_condition_mask            CondMask = $34
  304. zero_slot_unmasked             $9 = 0
  305. merge_condition_mask           CondMask = $48 & $49
  306. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#316)
  307. store_return_mask              $10 = RetMask
  308. copy_constant                  $11 = 0x00000001 (1.401298e-45)
  309. copy_slot_unmasked             x = $11
  310. copy_constant                  $11 = 0xFFFFFFFF
  311. copy_slot_masked               [takes_int].result = Mask($11)
  312. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  313. load_return_mask               RetMask = $10
  314. copy_slot_unmasked             $10 = [takes_int].result
  315. copy_slot_masked               $9 = Mask($10)
  316. load_condition_mask            CondMask = $48
  317. zero_slot_unmasked             $118 = 0
  318. merge_condition_mask           CondMask = $8 & $9
  319. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#330)
  320. store_return_mask              $119 = RetMask
  321. copy_constant                  $120 = 0x00000002 (2.802597e-45)
  322. copy_slot_unmasked             $121 = $120
  323. copy_2_slots_unmasked          x = $120..121
  324. copy_constant                  $120 = 0xFFFFFFFF
  325. copy_slot_masked               [takes_int2].result = Mask($120)
  326. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  327. load_return_mask               RetMask = $119
  328. copy_slot_unmasked             $119 = [takes_int2].result
  329. copy_slot_masked               $118 = Mask($119)
  330. load_condition_mask            CondMask = $8
  331. zero_slot_unmasked             $29 = 0
  332. merge_condition_mask           CondMask = $117 & $118
  333. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#344)
  334. store_return_mask              $30 = RetMask
  335. copy_constant                  $31 = 0x00000003 (4.203895e-45)
  336. swizzle_3                      $31..33 = ($31..33).xxx
  337. copy_3_slots_unmasked          x = $31..33
  338. copy_constant                  $31 = 0xFFFFFFFF
  339. copy_slot_masked               [takes_int3].result = Mask($31)
  340. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  341. load_return_mask               RetMask = $30
  342. copy_slot_unmasked             $30 = [takes_int3].result
  343. copy_slot_masked               $29 = Mask($30)
  344. load_condition_mask            CondMask = $117
  345. zero_slot_unmasked             $153 = 0
  346. merge_condition_mask           CondMask = $28 & $29
  347. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#358)
  348. store_return_mask              $154 = RetMask
  349. copy_constant                  $155 = 0x00000004 (5.605194e-45)
  350. swizzle_4                      $155..158 = ($155..158).xxxx
  351. copy_4_slots_unmasked          x = $155..158
  352. copy_constant                  $155 = 0xFFFFFFFF
  353. copy_slot_masked               [takes_int4].result = Mask($155)
  354. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  355. load_return_mask               RetMask = $154
  356. copy_slot_unmasked             $154 = [takes_int4].result
  357. copy_slot_masked               $153 = Mask($154)
  358. load_condition_mask            CondMask = $28
  359. copy_4_constants               $0..3 = colorRed
  360. merge_condition_mask           CondMask = $152 & $153
  361. copy_4_constants               $4..7 = colorGreen
  362. copy_4_slots_masked            $0..3 = Mask($4..7)
  363. load_condition_mask            CondMask = $152
  364. copy_4_slots_masked            [main].result = Mask($0..3)
  365. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  366. load_src                       src.rgba = [main].result
