    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             $0 = 0
    4. copy_slot_unmasked             scratchVar = $0
    5. store_condition_mask           $24 = CondMask
    6. store_condition_mask           $18 = CondMask
    7. store_condition_mask           $11 = CondMask
    8. store_condition_mask           $8 = CondMask
    9. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#16)
   10. store_return_mask              $9 = RetMask
   11. copy_constant                  $10 = 0xFFFFFFFF
   12. copy_slot_masked               [test_flat].result = Mask($10)
   13. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   14. load_return_mask               RetMask = $9
   15. copy_slot_unmasked             $9 = [test_flat].result
   16. zero_slot_unmasked             $12 = 0
   17. merge_condition_mask           CondMask = $8 & $9
   18. branch_if_no_active_lanes      branch_if_no_active_lanes +27 (#45)
   19. store_return_mask              $13 = RetMask
   20. store_condition_mask           $14 = CondMask
   21. zero_slot_unmasked             $15 = 0
   22. copy_constant                  $16 = colorGreen(1)
   23. cmplt_float                    $15 = lessThan($15, $16)
   24. merge_condition_mask           CondMask = $14 & $15
   25. copy_constant                  $16 = 0xFFFFFFFF
   26. copy_slot_masked               [test_if].result = Mask($16)
   27. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   28. bitwise_not_int                $15 = ~$15
   29. merge_condition_mask           CondMask = $14 & $15
   30. copy_slot_unmasked             $16 = scratchVar
   31. copy_constant                  $17 = 0x00000001 (1.401298e-45)
   32. add_int                        $16 += $17
   33. copy_slot_masked               scratchVar = Mask($16)
   34. load_condition_mask            CondMask = $14
   35. copy_slot_unmasked             $14 = scratchVar
   36. copy_constant                  $15 = 0x00000001 (1.401298e-45)
   37. add_int                        $14 += $15
   38. copy_slot_masked               scratchVar = Mask($14)
   39. zero_slot_unmasked             $14 = 0
   40. copy_slot_masked               [test_if].result = Mask($14)
   41. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   42. load_return_mask               RetMask = $13
   43. copy_slot_unmasked             $13 = [test_if].result
   44. copy_slot_masked               $12 = Mask($13)
   45. load_condition_mask            CondMask = $8
   46. zero_slot_unmasked             $19 = 0
   47. merge_condition_mask           CondMask = $11 & $12
   48. branch_if_no_active_lanes      branch_if_no_active_lanes +19 (#67)
   49. store_return_mask              $20 = RetMask
   50. store_condition_mask           $21 = CondMask
   51. copy_constant                  $22 = colorGreen(1)
   52. zero_slot_unmasked             $23 = 0
   53. cmpeq_float                    $22 = equal($22, $23)
   54. merge_condition_mask           CondMask = $21 & $22
   55. zero_slot_unmasked             $23 = 0
   56. copy_slot_masked               [test_else].result = Mask($23)
   57. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   58. bitwise_not_int                $22 = ~$22
   59. merge_condition_mask           CondMask = $21 & $22
   60. copy_constant                  $23 = 0xFFFFFFFF
   61. copy_slot_masked               [test_else].result = Mask($23)
   62. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   63. load_condition_mask            CondMask = $21
   64. load_return_mask               RetMask = $20
   65. copy_slot_unmasked             $20 = [test_else].result
   66. copy_slot_masked               $19 = Mask($20)
   67. load_condition_mask            CondMask = $11
   68. zero_slot_unmasked             $25 = 0
   69. merge_condition_mask           CondMask = $18 & $19
   70. branch_if_no_active_lanes      branch_if_no_active_lanes +43 (#113)
   71. store_return_mask              $26 = RetMask
   72. zero_slot_unmasked             $27 = 0
   73. copy_slot_unmasked             x = $27
   74. store_loop_mask                $27 = LoopMask
   75. jump                           jump +21 (#96)
   76. zero_slot_unmasked             [for-loop continue mask 0] = 0
   77. store_condition_mask           $28 = CondMask
   78. copy_constant                  $29 = colorGreen(1)
   79. zero_slot_unmasked             $30 = 0
   80. cmpeq_float                    $29 = equal($29, $30)
   81. merge_condition_mask           CondMask = $28 & $29
   82. zero_slot_unmasked             $30 = 0
   83. copy_slot_masked               [test_loop_if].result = Mask($30)
   84. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   85. bitwise_not_int                $29 = ~$29
   86. merge_condition_mask           CondMask = $28 & $29
   87. copy_constant                  $30 = 0xFFFFFFFF
   88. copy_slot_masked               [test_loop_if].result = Mask($30)
   89. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   90. load_condition_mask            CondMask = $28
   91. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   92. copy_slot_unmasked             $28 = x
   93. copy_constant                  $29 = 0x00000001 (1.401298e-45)
   94. add_int                        $28 += $29
   95. copy_slot_masked               x = Mask($28)
   96. copy_slot_unmasked             $28 = x
   97. copy_constant                  $29 = 0x00000001 (1.401298e-45)
   98. cmple_int                      $28 = lessThanEqual($28, $29)
   99. merge_loop_mask                LoopMask &= $28
  100. stack_rewind
  101. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (#76)
  102. load_loop_mask                 LoopMask = $27
  103. copy_slot_unmasked             $27 = scratchVar
  104. copy_constant                  $28 = 0x00000001 (1.401298e-45)
  105. add_int                        $27 += $28
  106. copy_slot_masked               scratchVar = Mask($27)
  107. copy_constant                  $27 = 0xFFFFFFFF
  108. copy_slot_masked               [test_loop_if].result = Mask($27)
  109. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  110. load_return_mask               RetMask = $26
  111. copy_slot_unmasked             $26 = [test_loop_if].result
  112. copy_slot_masked               $25 = Mask($26)
  113. load_condition_mask            CondMask = $18
  114. copy_4_constants               $0..3 = colorRed
  115. merge_condition_mask           CondMask = $24 & $25
  116. copy_4_constants               $4..7 = colorGreen
  117. copy_4_slots_masked            $0..3 = Mask($4..7)
  118. load_condition_mask            CondMask = $24
  119. copy_4_slots_masked            [main].result = Mask($0..3)
  120. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  121. load_src                       src.rgba = [main].result
