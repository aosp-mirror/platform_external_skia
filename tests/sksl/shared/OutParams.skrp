    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             h = 0
    4. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#11)
    5. store_return_mask              $0 = RetMask
    6. copy_constant                  $1 = colorWhite(0)
    7. copy_slot_masked               v = Mask($1)
    8. load_return_mask               RetMask = $0
    9. copy_slot_unmasked             $0 = v
   10. copy_slot_masked               h = Mask($0)
   11. zero_2_slots_unmasked          h2 = 0
   12. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#20)
   13. store_return_mask              $0 = RetMask
   14. copy_constant                  $1 = colorWhite(1)
   15. copy_slot_unmasked             $2 = $1
   16. copy_2_slots_masked            v = Mask($1..2)
   17. load_return_mask               RetMask = $0
   18. copy_2_slots_unmasked          $0..1 = v
   19. copy_2_slots_masked            h2 = Mask($0..1)
   20. zero_3_slots_unmasked          h3 = 0
   21. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#29)
   22. store_return_mask              $0 = RetMask
   23. copy_constant                  $1 = colorWhite(2)
   24. swizzle_3                      $1..3 = ($1..3).xxx
   25. copy_3_slots_masked            v = Mask($1..3)
   26. load_return_mask               RetMask = $0
   27. copy_3_slots_unmasked          $0..2 = v
   28. copy_3_slots_masked            h3 = Mask($0..2)
   29. zero_4_slots_unmasked          h4 = 0
   30. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#38)
   31. store_return_mask              $0 = RetMask
   32. copy_constant                  $1 = colorWhite(3)
   33. swizzle_4                      $1..4 = ($1..4).xxxx
   34. copy_4_slots_masked            v = Mask($1..4)
   35. load_return_mask               RetMask = $0
   36. copy_4_slots_unmasked          $0..3 = v
   37. copy_4_slots_masked            h4 = Mask($0..3)
   38. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#45)
   39. store_return_mask              $0 = RetMask
   40. copy_constant                  $1 = colorWhite(0)
   41. copy_slot_masked               v = Mask($1)
   42. load_return_mask               RetMask = $0
   43. copy_slot_unmasked             $0 = v
   44. copy_slot_masked               h3(1) = Mask($0)
   45. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#54)
   46. store_return_mask              $0 = RetMask
   47. copy_constant                  $1 = colorWhite(1)
   48. copy_slot_unmasked             $2 = $1
   49. copy_2_slots_masked            v = Mask($1..2)
   50. load_return_mask               RetMask = $0
   51. copy_2_slots_unmasked          $0..1 = v
   52. copy_slot_masked               h3(0) = Mask($0)
   53. copy_slot_masked               h3(2) = Mask($1)
   54. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#63)
   55. store_return_mask              $0 = RetMask
   56. copy_constant                  $1 = colorWhite(3)
   57. swizzle_4                      $1..4 = ($1..4).xxxx
   58. copy_4_slots_masked            v = Mask($1..4)
   59. load_return_mask               RetMask = $0
   60. copy_4_slots_unmasked          $0..3 = v
   61. copy_2_slots_masked            h4(2..3) = Mask($0..1)
   62. copy_2_slots_masked            h4(0..1) = Mask($2..3)
   63. zero_4_slots_unmasked          h2x2 = 0
   64. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#73)
   65. store_return_mask              $0 = RetMask
   66. zero_slot_unmasked             $1 = 0
   67. copy_constant                  $2 = colorWhite(0)
   68. swizzle_4                      $1..4 = ($1..4).yxxy
   69. copy_4_slots_masked            v = Mask($1..4)
   70. load_return_mask               RetMask = $0
   71. copy_4_slots_unmasked          $0..3 = v
   72. copy_4_slots_masked            h2x2 = Mask($0..3)
   73. zero_4_slots_unmasked          h3x3(0..3) = 0
   74. zero_4_slots_unmasked          h3x3(4..7) = 0
   75. zero_slot_unmasked             h3x3(8) = 0
   76. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (#91)
   77. store_return_mask              $0 = RetMask
   78. zero_slot_unmasked             $1 = 0
   79. copy_constant                  $2 = colorWhite(1)
   80. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
   81. copy_4_slots_masked            v(0..3) = Mask($1..4)
   82. copy_4_slots_masked            v(4..7) = Mask($5..8)
   83. copy_slot_masked               v(8) = Mask($9)
   84. load_return_mask               RetMask = $0
   85. copy_4_slots_unmasked          $0..3 = v(0..3)
   86. copy_4_slots_unmasked          $4..7 = v(4..7)
   87. copy_slot_unmasked             $8 = v(8)
   88. copy_4_slots_masked            h3x3(0..3) = Mask($0..3)
   89. copy_4_slots_masked            h3x3(4..7) = Mask($4..7)
   90. copy_slot_masked               h3x3(8) = Mask($8)
   91. zero_4_slots_unmasked          h4x4(0..3) = 0
   92. zero_4_slots_unmasked          h4x4(4..7) = 0
   93. zero_4_slots_unmasked          h4x4(8..11) = 0
   94. zero_4_slots_unmasked          h4x4(12..15) = 0
   95. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (#113)
   96. store_return_mask              $0 = RetMask
   97. zero_slot_unmasked             $1 = 0
   98. copy_constant                  $2 = colorWhite(2)
   99. shuffle                        $1..16 = ($1..16)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  100. copy_4_slots_masked            v(0..3) = Mask($1..4)
  101. copy_4_slots_masked            v(4..7) = Mask($5..8)
  102. copy_4_slots_masked            v(8..11) = Mask($9..12)
  103. copy_4_slots_masked            v(12..15) = Mask($13..16)
  104. load_return_mask               RetMask = $0
  105. copy_4_slots_unmasked          $0..3 = v(0..3)
  106. copy_4_slots_unmasked          $4..7 = v(4..7)
  107. copy_4_slots_unmasked          $8..11 = v(8..11)
  108. copy_4_slots_unmasked          $12..15 = v(12..15)
  109. copy_4_slots_masked            h4x4(0..3) = Mask($0..3)
  110. copy_4_slots_masked            h4x4(4..7) = Mask($4..7)
  111. copy_4_slots_masked            h4x4(8..11) = Mask($8..11)
  112. copy_4_slots_masked            h4x4(12..15) = Mask($12..15)
  113. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#121)
  114. store_return_mask              $0 = RetMask
  115. copy_constant                  $1 = colorWhite(2)
  116. swizzle_3                      $1..3 = ($1..3).xxx
  117. copy_3_slots_masked            v = Mask($1..3)
  118. load_return_mask               RetMask = $0
  119. copy_3_slots_unmasked          $0..2 = v
  120. copy_3_slots_masked            h3x3(3..5) = Mask($0..2)
  121. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#128)
  122. store_return_mask              $0 = RetMask
  123. copy_constant                  $1 = colorWhite(0)
  124. copy_slot_masked               v = Mask($1)
  125. load_return_mask               RetMask = $0
  126. copy_slot_unmasked             $0 = v
  127. copy_slot_masked               h4x4(15) = Mask($0)
  128. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#135)
  129. store_return_mask              $0 = RetMask
  130. copy_constant                  $1 = colorWhite(0)
  131. copy_slot_masked               v = Mask($1)
  132. load_return_mask               RetMask = $0
  133. copy_slot_unmasked             $0 = v
  134. copy_slot_masked               h2x2(0) = Mask($0)
  135. zero_slot_unmasked             i = 0
  136. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#144)
  137. store_return_mask              $0 = RetMask
  138. copy_constant                  $1 = colorWhite(0)
  139. cast_to_int_from_float         $1 = FloatToInt($1)
  140. copy_slot_masked               v = Mask($1)
  141. load_return_mask               RetMask = $0
  142. copy_slot_unmasked             $0 = v
  143. copy_slot_masked               i = Mask($0)
  144. zero_2_slots_unmasked          i2 = 0
  145. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#154)
  146. store_return_mask              $0 = RetMask
  147. copy_constant                  $1 = colorWhite(1)
  148. cast_to_int_from_float         $1 = FloatToInt($1)
  149. copy_slot_unmasked             $2 = $1
  150. copy_2_slots_masked            v = Mask($1..2)
  151. load_return_mask               RetMask = $0
  152. copy_2_slots_unmasked          $0..1 = v
  153. copy_2_slots_masked            i2 = Mask($0..1)
  154. zero_3_slots_unmasked          i3 = 0
  155. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#164)
  156. store_return_mask              $0 = RetMask
  157. copy_constant                  $1 = colorWhite(2)
  158. cast_to_int_from_float         $1 = FloatToInt($1)
  159. swizzle_3                      $1..3 = ($1..3).xxx
  160. copy_3_slots_masked            v = Mask($1..3)
  161. load_return_mask               RetMask = $0
  162. copy_3_slots_unmasked          $0..2 = v
  163. copy_3_slots_masked            i3 = Mask($0..2)
  164. zero_4_slots_unmasked          i4 = 0
  165. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#174)
  166. store_return_mask              $0 = RetMask
  167. copy_constant                  $1 = colorWhite(3)
  168. cast_to_int_from_float         $1 = FloatToInt($1)
  169. swizzle_4                      $1..4 = ($1..4).xxxx
  170. copy_4_slots_masked            v = Mask($1..4)
  171. load_return_mask               RetMask = $0
  172. copy_4_slots_unmasked          $0..3 = v
  173. copy_4_slots_masked            i4 = Mask($0..3)
  174. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#183)
  175. store_return_mask              $0 = RetMask
  176. copy_constant                  $1 = colorWhite(2)
  177. cast_to_int_from_float         $1 = FloatToInt($1)
  178. swizzle_3                      $1..3 = ($1..3).xxx
  179. copy_3_slots_masked            v = Mask($1..3)
  180. load_return_mask               RetMask = $0
  181. copy_3_slots_unmasked          $0..2 = v
  182. copy_3_slots_masked            i4(0..2) = Mask($0..2)
  183. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#191)
  184. store_return_mask              $0 = RetMask
  185. copy_constant                  $1 = colorWhite(0)
  186. cast_to_int_from_float         $1 = FloatToInt($1)
  187. copy_slot_masked               v = Mask($1)
  188. load_return_mask               RetMask = $0
  189. copy_slot_unmasked             $0 = v
  190. copy_slot_masked               i2(1) = Mask($0)
  191. zero_slot_unmasked             f = 0
  192. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#199)
  193. store_return_mask              $0 = RetMask
  194. copy_constant                  $1 = colorWhite(0)
  195. copy_slot_masked               v = Mask($1)
  196. load_return_mask               RetMask = $0
  197. copy_slot_unmasked             $0 = v
  198. copy_slot_masked               f = Mask($0)
  199. zero_2_slots_unmasked          f2 = 0
  200. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#208)
  201. store_return_mask              $0 = RetMask
  202. copy_constant                  $1 = colorWhite(1)
  203. copy_slot_unmasked             $2 = $1
  204. copy_2_slots_masked            v = Mask($1..2)
  205. load_return_mask               RetMask = $0
  206. copy_2_slots_unmasked          $0..1 = v
  207. copy_2_slots_masked            f2 = Mask($0..1)
  208. zero_3_slots_unmasked          f3 = 0
  209. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#217)
  210. store_return_mask              $0 = RetMask
  211. copy_constant                  $1 = colorWhite(2)
  212. swizzle_3                      $1..3 = ($1..3).xxx
  213. copy_3_slots_masked            v = Mask($1..3)
  214. load_return_mask               RetMask = $0
  215. copy_3_slots_unmasked          $0..2 = v
  216. copy_3_slots_masked            f3 = Mask($0..2)
  217. zero_4_slots_unmasked          f4 = 0
  218. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#226)
  219. store_return_mask              $0 = RetMask
  220. copy_constant                  $1 = colorWhite(3)
  221. swizzle_4                      $1..4 = ($1..4).xxxx
  222. copy_4_slots_masked            v = Mask($1..4)
  223. load_return_mask               RetMask = $0
  224. copy_4_slots_unmasked          $0..3 = v
  225. copy_4_slots_masked            f4 = Mask($0..3)
  226. branch_if_no_active_lanes      branch_if_no_active_lanes +8 (#234)
  227. store_return_mask              $0 = RetMask
  228. copy_constant                  $1 = colorWhite(1)
  229. copy_slot_unmasked             $2 = $1
  230. copy_2_slots_masked            v = Mask($1..2)
  231. load_return_mask               RetMask = $0
  232. copy_2_slots_unmasked          $0..1 = v
  233. copy_2_slots_masked            f3(0..1) = Mask($0..1)
  234. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#241)
  235. store_return_mask              $0 = RetMask
  236. copy_constant                  $1 = colorWhite(0)
  237. copy_slot_masked               v = Mask($1)
  238. load_return_mask               RetMask = $0
  239. copy_slot_unmasked             $0 = v
  240. copy_slot_masked               f2(0) = Mask($0)
  241. zero_4_slots_unmasked          f2x2 = 0
  242. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#251)
  243. store_return_mask              $0 = RetMask
  244. zero_slot_unmasked             $1 = 0
  245. copy_constant                  $2 = colorWhite(0)
  246. swizzle_4                      $1..4 = ($1..4).yxxy
  247. copy_4_slots_masked            v = Mask($1..4)
  248. load_return_mask               RetMask = $0
  249. copy_4_slots_unmasked          $0..3 = v
  250. copy_4_slots_masked            f2x2 = Mask($0..3)
  251. zero_4_slots_unmasked          f3x3(0..3) = 0
  252. zero_4_slots_unmasked          f3x3(4..7) = 0
  253. zero_slot_unmasked             f3x3(8) = 0
  254. branch_if_no_active_lanes      branch_if_no_active_lanes +15 (#269)
  255. store_return_mask              $0 = RetMask
  256. zero_slot_unmasked             $1 = 0
  257. copy_constant                  $2 = colorWhite(1)
  258. shuffle                        $1..9 = ($1..9)[1 0 0 0 1 0 0 0 1]
  259. copy_4_slots_masked            v(0..3) = Mask($1..4)
  260. copy_4_slots_masked            v(4..7) = Mask($5..8)
  261. copy_slot_masked               v(8) = Mask($9)
  262. load_return_mask               RetMask = $0
  263. copy_4_slots_unmasked          $0..3 = v(0..3)
  264. copy_4_slots_unmasked          $4..7 = v(4..7)
  265. copy_slot_unmasked             $8 = v(8)
  266. copy_4_slots_masked            f3x3(0..3) = Mask($0..3)
  267. copy_4_slots_masked            f3x3(4..7) = Mask($4..7)
  268. copy_slot_masked               f3x3(8) = Mask($8)
  269. zero_4_slots_unmasked          f4x4(0..3) = 0
  270. zero_4_slots_unmasked          f4x4(4..7) = 0
  271. zero_4_slots_unmasked          f4x4(8..11) = 0
  272. zero_4_slots_unmasked          f4x4(12..15) = 0
  273. branch_if_no_active_lanes      branch_if_no_active_lanes +18 (#291)
  274. store_return_mask              $0 = RetMask
  275. zero_slot_unmasked             $1 = 0
  276. copy_constant                  $2 = colorWhite(2)
  277. shuffle                        $1..16 = ($1..16)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  278. copy_4_slots_masked            v(0..3) = Mask($1..4)
  279. copy_4_slots_masked            v(4..7) = Mask($5..8)
  280. copy_4_slots_masked            v(8..11) = Mask($9..12)
  281. copy_4_slots_masked            v(12..15) = Mask($13..16)
  282. load_return_mask               RetMask = $0
  283. copy_4_slots_unmasked          $0..3 = v(0..3)
  284. copy_4_slots_unmasked          $4..7 = v(4..7)
  285. copy_4_slots_unmasked          $8..11 = v(8..11)
  286. copy_4_slots_unmasked          $12..15 = v(12..15)
  287. copy_4_slots_masked            f4x4(0..3) = Mask($0..3)
  288. copy_4_slots_masked            f4x4(4..7) = Mask($4..7)
  289. copy_4_slots_masked            f4x4(8..11) = Mask($8..11)
  290. copy_4_slots_masked            f4x4(12..15) = Mask($12..15)
  291. branch_if_no_active_lanes      branch_if_no_active_lanes +7 (#298)
  292. store_return_mask              $0 = RetMask
  293. copy_constant                  $1 = colorWhite(0)
  294. copy_slot_masked               v = Mask($1)
  295. load_return_mask               RetMask = $0
  296. copy_slot_unmasked             $0 = v
  297. copy_slot_masked               f2x2(0) = Mask($0)
  298. zero_slot_unmasked             b = 0
  299. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#308)
  300. store_return_mask              $0 = RetMask
  301. copy_constant                  $1 = colorWhite(0)
  302. zero_slot_unmasked             $2 = 0
  303. cmpne_float                    $1 = notEqual($1, $2)
  304. copy_slot_masked               v = Mask($1)
  305. load_return_mask               RetMask = $0
  306. copy_slot_unmasked             $0 = v
  307. copy_slot_masked               b = Mask($0)
  308. zero_2_slots_unmasked          b2 = 0
  309. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#319)
  310. store_return_mask              $0 = RetMask
  311. copy_constant                  $1 = colorWhite(1)
  312. zero_slot_unmasked             $2 = 0
  313. cmpne_float                    $1 = notEqual($1, $2)
  314. copy_slot_unmasked             $2 = $1
  315. copy_2_slots_masked            v = Mask($1..2)
  316. load_return_mask               RetMask = $0
  317. copy_2_slots_unmasked          $0..1 = v
  318. copy_2_slots_masked            b2 = Mask($0..1)
  319. zero_3_slots_unmasked          b3 = 0
  320. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#330)
  321. store_return_mask              $0 = RetMask
  322. copy_constant                  $1 = colorWhite(2)
  323. zero_slot_unmasked             $2 = 0
  324. cmpne_float                    $1 = notEqual($1, $2)
  325. swizzle_3                      $1..3 = ($1..3).xxx
  326. copy_3_slots_masked            v = Mask($1..3)
  327. load_return_mask               RetMask = $0
  328. copy_3_slots_unmasked          $0..2 = v
  329. copy_3_slots_masked            b3 = Mask($0..2)
  330. zero_4_slots_unmasked          b4 = 0
  331. branch_if_no_active_lanes      branch_if_no_active_lanes +10 (#341)
  332. store_return_mask              $0 = RetMask
  333. copy_constant                  $1 = colorWhite(3)
  334. zero_slot_unmasked             $2 = 0
  335. cmpne_float                    $1 = notEqual($1, $2)
  336. swizzle_4                      $1..4 = ($1..4).xxxx
  337. copy_4_slots_masked            v = Mask($1..4)
  338. load_return_mask               RetMask = $0
  339. copy_4_slots_unmasked          $0..3 = v
  340. copy_4_slots_masked            b4 = Mask($0..3)
  341. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#352)
  342. store_return_mask              $0 = RetMask
  343. copy_constant                  $1 = colorWhite(1)
  344. zero_slot_unmasked             $2 = 0
  345. cmpne_float                    $1 = notEqual($1, $2)
  346. copy_slot_unmasked             $2 = $1
  347. copy_2_slots_masked            v = Mask($1..2)
  348. load_return_mask               RetMask = $0
  349. copy_2_slots_unmasked          $0..1 = v
  350. copy_slot_masked               b4(0) = Mask($0)
  351. copy_slot_masked               b4(3) = Mask($1)
  352. branch_if_no_active_lanes      branch_if_no_active_lanes +9 (#361)
  353. store_return_mask              $0 = RetMask
  354. copy_constant                  $1 = colorWhite(0)
  355. zero_slot_unmasked             $2 = 0
  356. cmpne_float                    $1 = notEqual($1, $2)
  357. copy_slot_masked               v = Mask($1)
  358. load_return_mask               RetMask = $0
  359. copy_slot_unmasked             $0 = v
  360. copy_slot_masked               b3(2) = Mask($0)
  361. copy_constant                  $0 = 0xFFFFFFFF
  362. copy_slot_unmasked             ok = $0
  363. copy_constant                  $1 = 0x3F800000 (1.0)
  364. copy_slot_unmasked             $2 = h
  365. copy_slot_unmasked             $3 = h2(0)
  366. mul_float                      $2 *= $3
  367. copy_slot_unmasked             $3 = h3(0)
  368. mul_float                      $2 *= $3
  369. copy_slot_unmasked             $3 = h4(0)
  370. mul_float                      $2 *= $3
  371. copy_slot_unmasked             $3 = h2x2(0)
  372. mul_float                      $2 *= $3
  373. copy_slot_unmasked             $3 = h3x3(0)
  374. mul_float                      $2 *= $3
  375. copy_slot_unmasked             $3 = h4x4(0)
  376. mul_float                      $2 *= $3
  377. cmpeq_float                    $1 = equal($1, $2)
  378. bitwise_and_int                $0 &= $1
  379. copy_slot_masked               ok = Mask($0)
  380. copy_constant                  $1 = 0x3F800000 (1.0)
  381. copy_slot_unmasked             $2 = f
  382. copy_slot_unmasked             $3 = f2(0)
  383. mul_float                      $2 *= $3
  384. copy_slot_unmasked             $3 = f3(0)
  385. mul_float                      $2 *= $3
  386. copy_slot_unmasked             $3 = f4(0)
  387. mul_float                      $2 *= $3
  388. copy_slot_unmasked             $3 = f2x2(0)
  389. mul_float                      $2 *= $3
  390. copy_slot_unmasked             $3 = f3x3(0)
  391. mul_float                      $2 *= $3
  392. copy_slot_unmasked             $3 = f4x4(0)
  393. mul_float                      $2 *= $3
  394. cmpeq_float                    $1 = equal($1, $2)
  395. bitwise_and_int                $0 &= $1
  396. copy_slot_masked               ok = Mask($0)
  397. copy_constant                  $1 = 0x00000001 (1.401298e-45)
  398. copy_slot_unmasked             $2 = i
  399. copy_slot_unmasked             $3 = i2(0)
  400. mul_int                        $2 *= $3
  401. copy_slot_unmasked             $3 = i3(0)
  402. mul_int                        $2 *= $3
  403. copy_slot_unmasked             $3 = i4(0)
  404. mul_int                        $2 *= $3
  405. cmpeq_int                      $1 = equal($1, $2)
  406. bitwise_and_int                $0 &= $1
  407. copy_slot_masked               ok = Mask($0)
  408. copy_slot_unmasked             $1 = b
  409. copy_slot_unmasked             $2 = b2(0)
  410. bitwise_and_int                $1 &= $2
  411. copy_slot_unmasked             $2 = b3(0)
  412. bitwise_and_int                $1 &= $2
  413. copy_slot_unmasked             $2 = b4(0)
  414. bitwise_and_int                $1 &= $2
  415. bitwise_and_int                $0 &= $1
  416. copy_slot_masked               ok = Mask($0)
  417. store_condition_mask           $17 = CondMask
  418. copy_slot_unmasked             $18 = ok
  419. copy_4_constants               $0..3 = colorRed
  420. merge_condition_mask           CondMask = $17 & $18
  421. copy_4_constants               $4..7 = colorGreen
  422. copy_4_slots_masked            $0..3 = Mask($4..7)
  423. load_condition_mask            CondMask = $17
  424. copy_4_slots_masked            [main].result = Mask($0..3)
  425. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  426. load_src                       src.rgba = [main].result
