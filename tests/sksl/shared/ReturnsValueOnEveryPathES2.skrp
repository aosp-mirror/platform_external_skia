    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $8 = CondMask
    4. store_condition_mask           $26 = CondMask
    5. store_condition_mask           $33 = CondMask
    6. store_condition_mask           $20 = CondMask
    7. store_condition_mask           $41 = CondMask
    8. store_condition_mask           $39 = CondMask
    9. copy_constant                  $40 = 0xFFFFFFFF
   10. zero_slot_unmasked             $42 = 0
   11. merge_condition_mask           CondMask = $39 & $40
   12. branch_if_no_active_lanes      branch_if_no_active_lanes +19 (#31)
   13. store_return_mask              $43 = RetMask
   14. store_condition_mask           $44 = CondMask
   15. copy_constant                  $45 = unknownInput
   16. copy_constant                  $46 = 0x3F800000 (1.0)
   17. cmpeq_float                    $45 = equal($45, $46)
   18. merge_condition_mask           CondMask = $44 & $45
   19. copy_constant                  $46 = 0xFFFFFFFF
   20. copy_slot_masked               [return_on_both_sides].result = Mask($46)
   21. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   22. bitwise_not_int                $45 = ~$45
   23. merge_condition_mask           CondMask = $44 & $45
   24. copy_constant                  $46 = 0xFFFFFFFF
   25. copy_slot_masked               [return_on_both_sides].result = Mask($46)
   26. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   27. load_condition_mask            CondMask = $44
   28. load_return_mask               RetMask = $43
   29. copy_slot_unmasked             $43 = [return_on_both_sides].result
   30. copy_slot_masked               $42 = Mask($43)
   31. load_condition_mask            CondMask = $39
   32. zero_slot_unmasked             $21 = 0
   33. merge_condition_mask           CondMask = $41 & $42
   34. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (#59)
   35. store_return_mask              $22 = RetMask
   36. zero_slot_unmasked             $23 = 0
   37. copy_slot_unmasked             x = $23
   38. store_loop_mask                $23 = LoopMask
   39. jump                           jump +10 (#49)
   40. zero_slot_unmasked             [for-loop continue mask 0] = 0
   41. copy_constant                  $24 = 0xFFFFFFFF
   42. copy_slot_masked               [for_inside_body].result = Mask($24)
   43. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   44. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   45. copy_slot_unmasked             $24 = x
   46. copy_constant                  $25 = 0x00000001 (1.401298e-45)
   47. add_int                        $24 += $25
   48. copy_slot_masked               x = Mask($24)
   49. copy_slot_unmasked             $24 = x
   50. copy_constant                  $25 = 0x0000000A (1.401298e-44)
   51. cmple_int                      $24 = lessThanEqual($24, $25)
   52. merge_loop_mask                LoopMask &= $24
   53. stack_rewind
   54. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (#40)
   55. load_loop_mask                 LoopMask = $23
   56. load_return_mask               RetMask = $22
   57. copy_slot_unmasked             $22 = [for_inside_body].result
   58. copy_slot_masked               $21 = Mask($22)
   59. load_condition_mask            CondMask = $41
   60. zero_slot_unmasked             $34 = 0
   61. merge_condition_mask           CondMask = $20 & $21
   62. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (#87)
   63. store_return_mask              $35 = RetMask
   64. zero_slot_unmasked             $36 = 0
   65. copy_slot_unmasked             x = $36
   66. store_loop_mask                $36 = LoopMask
   67. jump                           jump +7 (#74)
   68. zero_slot_unmasked             [for-loop continue mask 1] = 0
   69. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   70. copy_slot_unmasked             $37 = x
   71. copy_constant                  $38 = 0x00000001 (1.401298e-45)
   72. add_int                        $37 += $38
   73. copy_slot_masked               x = Mask($37)
   74. copy_slot_unmasked             $37 = x
   75. copy_constant                  $38 = 0x0000000A (1.401298e-44)
   76. cmple_int                      $37 = lessThanEqual($37, $38)
   77. merge_loop_mask                LoopMask &= $37
   78. stack_rewind
   79. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#68)
   80. load_loop_mask                 LoopMask = $36
   81. copy_constant                  $36 = 0xFFFFFFFF
   82. copy_slot_masked               [after_for_body].result = Mask($36)
   83. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   84. load_return_mask               RetMask = $35
   85. copy_slot_unmasked             $35 = [after_for_body].result
   86. copy_slot_masked               $34 = Mask($35)
   87. load_condition_mask            CondMask = $20
   88. zero_slot_unmasked             $27 = 0
   89. merge_condition_mask           CondMask = $33 & $34
   90. branch_if_no_active_lanes      branch_if_no_active_lanes +36 (#126)
   91. store_return_mask              $28 = RetMask
   92. zero_slot_unmasked             $29 = 0
   93. copy_slot_unmasked             x = $29
   94. store_loop_mask                $29 = LoopMask
   95. jump                           jump +21 (#116)
   96. zero_slot_unmasked             [for-loop continue mask 2] = 0
   97. store_condition_mask           $30 = CondMask
   98. copy_constant                  $31 = unknownInput
   99. copy_constant                  $32 = 0x3F800000 (1.0)
  100. cmpeq_float                    $31 = equal($31, $32)
  101. merge_condition_mask           CondMask = $30 & $31
  102. copy_constant                  $32 = 0xFFFFFFFF
  103. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($32)
  104. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  105. bitwise_not_int                $31 = ~$31
  106. merge_condition_mask           CondMask = $30 & $31
  107. copy_constant                  $32 = 0xFFFFFFFF
  108. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($32)
  109. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  110. load_condition_mask            CondMask = $30
  111. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
  112. copy_slot_unmasked             $30 = x
  113. copy_constant                  $31 = 0x00000001 (1.401298e-45)
  114. add_int                        $30 += $31
  115. copy_slot_masked               x = Mask($30)
  116. copy_slot_unmasked             $30 = x
  117. copy_constant                  $31 = 0x0000000A (1.401298e-44)
  118. cmple_int                      $30 = lessThanEqual($30, $31)
  119. merge_loop_mask                LoopMask &= $30
  120. stack_rewind
  121. branch_if_any_active_lanes     branch_if_any_active_lanes -25 (#96)
  122. load_loop_mask                 LoopMask = $29
  123. load_return_mask               RetMask = $28
  124. copy_slot_unmasked             $28 = [for_with_double_sided_conditional_return].result
  125. copy_slot_masked               $27 = Mask($28)
  126. load_condition_mask            CondMask = $33
  127. zero_slot_unmasked             $9 = 0
  128. merge_condition_mask           CondMask = $26 & $27
  129. branch_if_no_active_lanes      branch_if_no_active_lanes +52 (#181)
  130. store_return_mask              $10 = RetMask
  131. store_condition_mask           $11 = CondMask
  132. copy_constant                  $12 = unknownInput
  133. copy_constant                  $13 = 0x3F800000 (1.0)
  134. cmpeq_float                    $12 = equal($12, $13)
  135. merge_condition_mask           CondMask = $11 & $12
  136. copy_constant                  $13 = 0xFFFFFFFF
  137. copy_slot_masked               [if_else_chain].result = Mask($13)
  138. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  139. bitwise_not_int                $12 = ~$12
  140. merge_condition_mask           CondMask = $11 & $12
  141. store_condition_mask           $13 = CondMask
  142. copy_constant                  $14 = unknownInput
  143. copy_constant                  $15 = 0x40000000 (2.0)
  144. cmpeq_float                    $14 = equal($14, $15)
  145. merge_condition_mask           CondMask = $13 & $14
  146. zero_slot_unmasked             $15 = 0
  147. copy_slot_masked               [if_else_chain].result = Mask($15)
  148. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  149. bitwise_not_int                $14 = ~$14
  150. merge_condition_mask           CondMask = $13 & $14
  151. store_condition_mask           $15 = CondMask
  152. copy_constant                  $16 = unknownInput
  153. copy_constant                  $17 = 0x40400000 (3.0)
  154. cmpeq_float                    $16 = equal($16, $17)
  155. merge_condition_mask           CondMask = $15 & $16
  156. copy_constant                  $17 = 0xFFFFFFFF
  157. copy_slot_masked               [if_else_chain].result = Mask($17)
  158. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  159. bitwise_not_int                $16 = ~$16
  160. merge_condition_mask           CondMask = $15 & $16
  161. store_condition_mask           $17 = CondMask
  162. copy_constant                  $18 = unknownInput
  163. copy_constant                  $19 = 0x40800000 (4.0)
  164. cmpeq_float                    $18 = equal($18, $19)
  165. merge_condition_mask           CondMask = $17 & $18
  166. zero_slot_unmasked             $19 = 0
  167. copy_slot_masked               [if_else_chain].result = Mask($19)
  168. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  169. bitwise_not_int                $18 = ~$18
  170. merge_condition_mask           CondMask = $17 & $18
  171. copy_constant                  $19 = 0xFFFFFFFF
  172. copy_slot_masked               [if_else_chain].result = Mask($19)
  173. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  174. load_condition_mask            CondMask = $17
  175. load_condition_mask            CondMask = $15
  176. load_condition_mask            CondMask = $13
  177. load_condition_mask            CondMask = $11
  178. load_return_mask               RetMask = $10
  179. copy_slot_unmasked             $10 = [if_else_chain].result
  180. copy_slot_masked               $9 = Mask($10)
  181. load_condition_mask            CondMask = $26
  182. copy_4_constants               $0..3 = colorRed
  183. merge_condition_mask           CondMask = $8 & $9
  184. copy_4_constants               $4..7 = colorGreen
  185. copy_4_slots_masked            $0..3 = Mask($4..7)
  186. load_condition_mask            CondMask = $8
  187. copy_4_slots_masked            [main].result = Mask($0..3)
  188. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  189. load_src                       src.rgba = [main].result
