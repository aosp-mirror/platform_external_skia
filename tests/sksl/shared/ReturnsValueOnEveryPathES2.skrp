    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $8 = CondMask
    4. store_condition_mask           $21 = CondMask
    5. store_condition_mask           $27 = CondMask
    6. store_condition_mask           $15 = CondMask
    7. store_condition_mask           $32 = CondMask
    8. copy_constant                  $31 = 0xFFFFFFFF
    9. branch_if_no_active_lanes_eq   branch +16 (label 0 at #25) if no lanes of $31 == 0xFFFFFFFF
   10. branch_if_no_active_lanes      branch_if_no_active_lanes +13 (label 2 at #23)
   11. copy_constant                  $33 = unknownInput
   12. copy_constant                  $34 = 0x3F800000 (1.0)
   13. cmpeq_float                    $33 = equal($33, $34)
   14. branch_if_no_active_lanes_eq   branch +4 (label 3 at #18) if no lanes of $33 == 0xFFFFFFFF
   15. copy_constant                  $34 = 0xFFFFFFFF
   16. copy_slot_masked               [return_on_both_sides].result = Mask($34)
   17. jump                           jump +4 (label 4 at #21)
   18. label                          label 0x00000003
   19. copy_constant                  $34 = 0xFFFFFFFF
   20. copy_slot_masked               [return_on_both_sides].result = Mask($34)
   21. label                          label 0x00000004
   22. copy_slot_unmasked             $33 = [return_on_both_sides].result
   23. label                          label 0x00000002
   24. jump                           jump +3 (label 1 at #27)
   25. label                          label 0x00000000
   26. zero_slot_unmasked             $33 = 0
   27. label                          label 0x00000001
   28. zero_slot_unmasked             $16 = 0
   29. merge_condition_mask           CondMask = $32 & $33
   30. branch_if_no_active_lanes      branch_if_no_active_lanes +25 (label 5 at #55)
   31. store_return_mask              $17 = RetMask
   32. zero_slot_unmasked             x = 0
   33. store_loop_mask                $18 = LoopMask
   34. jump                           jump +9 (label 7 at #43)
   35. label                          label 0x00000008
   36. copy_constant                  $19 = 0xFFFFFFFF
   37. copy_slot_masked               [for_inside_body].result = Mask($19)
   38. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   39. copy_slot_unmasked             $19 = x
   40. copy_constant                  $20 = 0x00000001 (1.401298e-45)
   41. add_int                        $19 += $20
   42. copy_slot_masked               x = Mask($19)
   43. label                          label 0x00000007
   44. copy_slot_unmasked             $19 = x
   45. copy_constant                  $20 = 0x0000000A (1.401298e-44)
   46. cmple_int                      $19 = lessThanEqual($19, $20)
   47. merge_loop_mask                LoopMask &= $19
   48. stack_rewind
   49. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 8 at #35)
   50. load_loop_mask                 LoopMask = $18
   51. load_return_mask               RetMask = $17
   52. copy_slot_unmasked             $17 = [for_inside_body].result
   53. label                          label 0x00000006
   54. copy_slot_masked               $16 = Mask($17)
   55. label                          label 0x00000005
   56. load_condition_mask            CondMask = $32
   57. zero_slot_unmasked             $28 = 0
   58. merge_condition_mask           CondMask = $15 & $16
   59. branch_if_no_active_lanes      branch_if_no_active_lanes +16 (label 9 at #75)
   60. zero_slot_unmasked             x₁ = 0
   61. label                          label 0x0000000C
   62. copy_slot_unmasked             $29 = x₁
   63. copy_constant                  $30 = 0x00000001 (1.401298e-45)
   64. add_int                        $29 += $30
   65. copy_slot_masked               x₁ = Mask($29)
   66. copy_constant                  $30 = 0x0000000A (1.401298e-44)
   67. cmple_int                      $29 = lessThanEqual($29, $30)
   68. stack_rewind
   69. branch_if_no_active_lanes_eq   branch -8 (label 12 at #61) if no lanes of $29 == 0x00000000 (0.0)
   70. label                          label 0x0000000B
   71. copy_constant                  $29 = 0xFFFFFFFF
   72. copy_slot_masked               [after_for_body].result = Mask($29)
   73. label                          label 0x0000000A
   74. copy_slot_masked               $28 = Mask($29)
   75. label                          label 0x00000009
   76. load_condition_mask            CondMask = $15
   77. zero_slot_unmasked             $22 = 0
   78. merge_condition_mask           CondMask = $27 & $28
   79. branch_if_no_active_lanes      branch_if_no_active_lanes +35 (label 13 at #114)
   80. store_return_mask              $23 = RetMask
   81. zero_slot_unmasked             x₂ = 0
   82. store_loop_mask                $24 = LoopMask
   83. jump                           jump +19 (label 15 at #102)
   84. label                          label 0x00000010
   85. copy_constant                  $25 = unknownInput
   86. copy_constant                  $26 = 0x3F800000 (1.0)
   87. cmpeq_float                    $25 = equal($25, $26)
   88. branch_if_no_active_lanes_eq   branch +5 (label 17 at #93) if no lanes of $25 == 0xFFFFFFFF
   89. copy_constant                  $26 = 0xFFFFFFFF
   90. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($26)
   91. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   92. jump                           jump +5 (label 18 at #97)
   93. label                          label 0x00000011
   94. copy_constant                  $26 = 0xFFFFFFFF
   95. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($26)
   96. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   97. label                          label 0x00000012
   98. copy_slot_unmasked             $25 = x₂
   99. copy_constant                  $26 = 0x00000001 (1.401298e-45)
  100. add_int                        $25 += $26
  101. copy_slot_masked               x₂ = Mask($25)
  102. label                          label 0x0000000F
  103. copy_slot_unmasked             $25 = x₂
  104. copy_constant                  $26 = 0x0000000A (1.401298e-44)
  105. cmple_int                      $25 = lessThanEqual($25, $26)
  106. merge_loop_mask                LoopMask &= $25
  107. stack_rewind
  108. branch_if_any_active_lanes     branch_if_any_active_lanes -24 (label 16 at #84)
  109. load_loop_mask                 LoopMask = $24
  110. load_return_mask               RetMask = $23
  111. copy_slot_unmasked             $23 = [for_with_double_sided_conditional_return].result
  112. label                          label 0x0000000E
  113. copy_slot_masked               $22 = Mask($23)
  114. label                          label 0x0000000D
  115. load_condition_mask            CondMask = $27
  116. zero_slot_unmasked             $9 = 0
  117. merge_condition_mask           CondMask = $21 & $22
  118. branch_if_no_active_lanes      branch_if_no_active_lanes +42 (label 19 at #160)
  119. copy_constant                  $10 = unknownInput
  120. copy_constant                  $11 = 0x3F800000 (1.0)
  121. cmpeq_float                    $10 = equal($10, $11)
  122. branch_if_no_active_lanes_eq   branch +4 (label 21 at #126) if no lanes of $10 == 0xFFFFFFFF
  123. copy_constant                  $11 = 0xFFFFFFFF
  124. copy_slot_masked               [if_else_chain].result = Mask($11)
  125. jump                           jump +31 (label 22 at #156)
  126. label                          label 0x00000015
  127. copy_constant                  $11 = unknownInput
  128. copy_constant                  $12 = 0x40000000 (2.0)
  129. cmpeq_float                    $11 = equal($11, $12)
  130. branch_if_no_active_lanes_eq   branch +4 (label 23 at #134) if no lanes of $11 == 0xFFFFFFFF
  131. zero_slot_unmasked             $12 = 0
  132. copy_slot_masked               [if_else_chain].result = Mask($12)
  133. jump                           jump +22 (label 24 at #155)
  134. label                          label 0x00000017
  135. copy_constant                  $12 = unknownInput
  136. copy_constant                  $13 = 0x40400000 (3.0)
  137. cmpeq_float                    $12 = equal($12, $13)
  138. branch_if_no_active_lanes_eq   branch +4 (label 25 at #142) if no lanes of $12 == 0xFFFFFFFF
  139. copy_constant                  $13 = 0xFFFFFFFF
  140. copy_slot_masked               [if_else_chain].result = Mask($13)
  141. jump                           jump +13 (label 26 at #154)
  142. label                          label 0x00000019
  143. copy_constant                  $13 = unknownInput
  144. copy_constant                  $14 = 0x40800000 (4.0)
  145. cmpeq_float                    $13 = equal($13, $14)
  146. branch_if_no_active_lanes_eq   branch +4 (label 27 at #150) if no lanes of $13 == 0xFFFFFFFF
  147. zero_slot_unmasked             $14 = 0
  148. copy_slot_masked               [if_else_chain].result = Mask($14)
  149. jump                           jump +4 (label 28 at #153)
  150. label                          label 0x0000001B
  151. copy_constant                  $14 = 0xFFFFFFFF
  152. copy_slot_masked               [if_else_chain].result = Mask($14)
  153. label                          label 0x0000001C
  154. label                          label 0x0000001A
  155. label                          label 0x00000018
  156. label                          label 0x00000016
  157. copy_slot_unmasked             $10 = [if_else_chain].result
  158. label                          label 0x00000014
  159. copy_slot_masked               $9 = Mask($10)
  160. label                          label 0x00000013
  161. load_condition_mask            CondMask = $21
  162. copy_4_constants               $0..3 = colorRed
  163. merge_condition_mask           CondMask = $8 & $9
  164. copy_4_constants               $4..7 = colorGreen
  165. copy_4_slots_masked            $0..3 = Mask($4..7)
  166. label                          label 0x0000001D
  167. load_condition_mask            CondMask = $8
  168. copy_4_slots_unmasked          [main].result = $0..3
  169. load_src                       src.rgba = [main].result
