    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  _0_ok = 0xFFFFFFFF
    4. copy_4_constants               $0..3 = colorRed
    5. copy_4_slots_unmasked          _1_inputRed = $0..3
    6. copy_4_constants               $0..3 = colorGreen
    7. copy_4_slots_unmasked          _2_inputGreen = $0..3
    8. copy_4_slots_unmasked          $0..3 = _1_inputRed
    9. copy_constant                  $4 = 0x40000000 (2.0)
   10. swizzle_4                      $4..7 = ($4..7).xxxx
   11. add_4_floats                   $0..3 += $4..7
   12. copy_4_slots_unmasked          _3_x = $0..3
   13. copy_slot_unmasked             $0 = _0_ok
   14. copy_4_slots_unmasked          $1..4 = _3_x
   15. copy_constant                  $5 = 0x40400000 (3.0)
   16. copy_constant                  $6 = 0x40000000 (2.0)
   17. copy_constant                  $7 = 0x40000000 (2.0)
   18. copy_constant                  $8 = 0x40400000 (3.0)
   19. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   20. bitwise_and_2_ints             $1..2 &= $3..4
   21. bitwise_and_int                $1 &= $2
   22. bitwise_and_int                $0 &= $1
   23. copy_slot_unmasked             _0_ok = $0
   24. copy_4_slots_unmasked          $0..3 = _2_inputGreen
   25. swizzle_4                      $0..3 = ($0..3).ywxz
   26. copy_constant                  $4 = 0x40000000 (2.0)
   27. swizzle_4                      $4..7 = ($4..7).xxxx
   28. sub_4_floats                   $0..3 -= $4..7
   29. copy_4_slots_unmasked          _3_x = $0..3
   30. copy_slot_unmasked             $0 = _0_ok
   31. copy_4_slots_unmasked          $1..4 = _3_x
   32. copy_constant                  $5 = 0xBF800000 (-1.0)
   33. copy_constant                  $6 = 0xBF800000 (-1.0)
   34. copy_constant                  $7 = 0xC0000000 (-2.0)
   35. copy_constant                  $8 = 0xC0000000 (-2.0)
   36. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   37. bitwise_and_2_ints             $1..2 &= $3..4
   38. bitwise_and_int                $1 &= $2
   39. bitwise_and_int                $0 &= $1
   40. copy_slot_unmasked             _0_ok = $0
   41. copy_4_slots_unmasked          $0..3 = _1_inputRed
   42. copy_slot_unmasked             $4 = _2_inputGreen(1)
   43. swizzle_4                      $4..7 = ($4..7).xxxx
   44. add_4_floats                   $0..3 += $4..7
   45. copy_4_slots_unmasked          _3_x = $0..3
   46. copy_slot_unmasked             $0 = _0_ok
   47. copy_4_slots_unmasked          $1..4 = _3_x
   48. copy_constant                  $5 = 0x40000000 (2.0)
   49. copy_constant                  $6 = 0x3F800000 (1.0)
   50. copy_constant                  $7 = 0x3F800000 (1.0)
   51. copy_constant                  $8 = 0x40000000 (2.0)
   52. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   53. bitwise_and_2_ints             $1..2 &= $3..4
   54. bitwise_and_int                $1 &= $2
   55. bitwise_and_int                $0 &= $1
   56. copy_slot_unmasked             _0_ok = $0
   57. copy_4_slots_unmasked          $0..3 = _2_inputGreen
   58. swizzle_3                      $0..2 = ($0..3).wyw
   59. copy_constant                  $3 = 0x41100000 (9.0)
   60. swizzle_3                      $3..5 = ($3..5).xxx
   61. mul_3_floats                   $0..2 *= $3..5
   62. copy_3_slots_unmasked          _3_x(0..2) = $0..2
   63. copy_slot_unmasked             $0 = _0_ok
   64. copy_4_slots_unmasked          $1..4 = _3_x
   65. copy_constant                  $5 = 0x41100000 (9.0)
   66. copy_constant                  $6 = 0x41100000 (9.0)
   67. copy_constant                  $7 = 0x41100000 (9.0)
   68. copy_constant                  $8 = 0x40000000 (2.0)
   69. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   70. bitwise_and_2_ints             $1..2 &= $3..4
   71. bitwise_and_int                $1 &= $2
   72. bitwise_and_int                $0 &= $1
   73. copy_slot_unmasked             _0_ok = $0
   74. copy_2_slots_unmasked          $0..1 = _3_x(2..3)
   75. copy_constant                  $2 = 0x40000000 (2.0)
   76. copy_slot_unmasked             $3 = $2
   77. mul_2_floats                   $0..1 *= $2..3
   78. copy_2_slots_unmasked          _3_x(0..1) = $0..1
   79. copy_slot_unmasked             $0 = _0_ok
   80. copy_4_slots_unmasked          $1..4 = _3_x
   81. copy_constant                  $5 = 0x41900000 (18.0)
   82. copy_constant                  $6 = 0x40800000 (4.0)
   83. copy_constant                  $7 = 0x41100000 (9.0)
   84. copy_constant                  $8 = 0x40000000 (2.0)
   85. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   86. bitwise_and_2_ints             $1..2 &= $3..4
   87. bitwise_and_int                $1 &= $2
   88. bitwise_and_int                $0 &= $1
   89. copy_slot_unmasked             _0_ok = $0
   90. copy_4_slots_unmasked          $0..3 = _1_inputRed
   91. copy_constant                  $4 = 0x40A00000 (5.0)
   92. swizzle_4                      $4..7 = ($4..7).xxxx
   93. mul_4_floats                   $0..3 *= $4..7
   94. swizzle_4                      $0..3 = ($0..3).yxwz
   95. copy_4_slots_unmasked          _3_x = $0..3
   96. copy_slot_unmasked             $0 = _0_ok
   97. copy_4_slots_unmasked          $1..4 = _3_x
   98. zero_slot_unmasked             $5 = 0
   99. copy_constant                  $6 = 0x40A00000 (5.0)
  100. copy_constant                  $7 = 0x40A00000 (5.0)
  101. zero_slot_unmasked             $8 = 0
  102. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  103. bitwise_and_2_ints             $1..2 &= $3..4
  104. bitwise_and_int                $1 &= $2
  105. bitwise_and_int                $0 &= $1
  106. copy_slot_unmasked             _0_ok = $0
  107. copy_constant                  $0 = 0x40000000 (2.0)
  108. swizzle_4                      $0..3 = ($0..3).xxxx
  109. copy_4_slots_unmasked          $4..7 = _1_inputRed
  110. add_4_floats                   $0..3 += $4..7
  111. copy_4_slots_unmasked          _3_x = $0..3
  112. copy_slot_unmasked             $0 = _0_ok
  113. copy_4_slots_unmasked          $1..4 = _3_x
  114. copy_constant                  $5 = 0x40400000 (3.0)
  115. copy_constant                  $6 = 0x40000000 (2.0)
  116. copy_constant                  $7 = 0x40000000 (2.0)
  117. copy_constant                  $8 = 0x40400000 (3.0)
  118. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  119. bitwise_and_2_ints             $1..2 &= $3..4
  120. bitwise_and_int                $1 &= $2
  121. bitwise_and_int                $0 &= $1
  122. copy_slot_unmasked             _0_ok = $0
  123. copy_constant                  $0 = 0x41200000 (10.0)
  124. swizzle_4                      $0..3 = ($0..3).xxxx
  125. copy_4_slots_unmasked          $4..7 = _2_inputGreen
  126. swizzle_4                      $4..7 = ($4..7).ywxz
  127. sub_4_floats                   $0..3 -= $4..7
  128. copy_4_slots_unmasked          _3_x = $0..3
  129. copy_slot_unmasked             $0 = _0_ok
  130. copy_4_slots_unmasked          $1..4 = _3_x
  131. copy_constant                  $5 = 0x41100000 (9.0)
  132. copy_constant                  $6 = 0x41100000 (9.0)
  133. copy_constant                  $7 = 0x41200000 (10.0)
  134. copy_constant                  $8 = 0x41200000 (10.0)
  135. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  136. bitwise_and_2_ints             $1..2 &= $3..4
  137. bitwise_and_int                $1 &= $2
  138. bitwise_and_int                $0 &= $1
  139. copy_slot_unmasked             _0_ok = $0
  140. copy_slot_unmasked             $0 = _1_inputRed(0)
  141. swizzle_4                      $0..3 = ($0..3).xxxx
  142. copy_4_slots_unmasked          $4..7 = _2_inputGreen
  143. add_4_floats                   $0..3 += $4..7
  144. copy_4_slots_unmasked          _3_x = $0..3
  145. copy_slot_unmasked             $0 = _0_ok
  146. copy_4_slots_unmasked          $1..4 = _3_x
  147. copy_constant                  $5 = 0x3F800000 (1.0)
  148. copy_constant                  $6 = 0x40000000 (2.0)
  149. copy_constant                  $7 = 0x3F800000 (1.0)
  150. copy_constant                  $8 = 0x40000000 (2.0)
  151. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  152. bitwise_and_2_ints             $1..2 &= $3..4
  153. bitwise_and_int                $1 &= $2
  154. bitwise_and_int                $0 &= $1
  155. copy_slot_unmasked             _0_ok = $0
  156. copy_constant                  $0 = 0x41000000 (8.0)
  157. swizzle_3                      $0..2 = ($0..2).xxx
  158. copy_4_slots_unmasked          $3..6 = _2_inputGreen
  159. swizzle_3                      $3..5 = ($3..6).wyw
  160. mul_3_floats                   $0..2 *= $3..5
  161. copy_3_slots_unmasked          _3_x(0..2) = $0..2
  162. copy_slot_unmasked             $0 = _0_ok
  163. copy_4_slots_unmasked          $1..4 = _3_x
  164. copy_constant                  $5 = 0x41000000 (8.0)
  165. copy_constant                  $6 = 0x41000000 (8.0)
  166. copy_constant                  $7 = 0x41000000 (8.0)
  167. copy_constant                  $8 = 0x40000000 (2.0)
  168. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  169. bitwise_and_2_ints             $1..2 &= $3..4
  170. bitwise_and_int                $1 &= $2
  171. bitwise_and_int                $0 &= $1
  172. copy_slot_unmasked             _0_ok = $0
  173. copy_constant                  $0 = 0x42000000 (32.0)
  174. copy_slot_unmasked             $1 = $0
  175. copy_2_slots_unmasked          $2..3 = _3_x(2..3)
  176. div_2_floats                   $0..1 /= $2..3
  177. copy_2_slots_unmasked          _3_x(0..1) = $0..1
  178. copy_slot_unmasked             $0 = _0_ok
  179. copy_4_slots_unmasked          $1..4 = _3_x
  180. copy_constant                  $5 = 0x40800000 (4.0)
  181. copy_constant                  $6 = 0x41800000 (16.0)
  182. copy_constant                  $7 = 0x41000000 (8.0)
  183. copy_constant                  $8 = 0x40000000 (2.0)
  184. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  185. bitwise_and_2_ints             $1..2 &= $3..4
  186. bitwise_and_int                $1 &= $2
  187. bitwise_and_int                $0 &= $1
  188. copy_slot_unmasked             _0_ok = $0
  189. copy_constant                  $0 = 0x42000000 (32.0)
  190. swizzle_4                      $0..3 = ($0..3).xxxx
  191. copy_4_slots_unmasked          $4..7 = _3_x
  192. div_4_floats                   $0..3 /= $4..7
  193. swizzle_4                      $0..3 = ($0..3).yxwz
  194. copy_4_slots_unmasked          _3_x = $0..3
  195. copy_slot_unmasked             $0 = _0_ok
  196. copy_4_slots_unmasked          $1..4 = _3_x
  197. copy_constant                  $5 = 0x40000000 (2.0)
  198. copy_constant                  $6 = 0x41000000 (8.0)
  199. copy_constant                  $7 = 0x41800000 (16.0)
  200. copy_constant                  $8 = 0x40800000 (4.0)
  201. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  202. bitwise_and_2_ints             $1..2 &= $3..4
  203. bitwise_and_int                $1 &= $2
  204. bitwise_and_int                $0 &= $1
  205. copy_slot_unmasked             _0_ok = $0
  206. copy_4_slots_unmasked          $0..3 = _3_x
  207. copy_constant                  $4 = 0x40000000 (2.0)
  208. swizzle_4                      $4..7 = ($4..7).xxxx
  209. add_4_floats                   $0..3 += $4..7
  210. copy_4_slots_unmasked          _3_x = $0..3
  211. copy_4_slots_unmasked          $0..3 = _3_x
  212. copy_constant                  $4 = 0x40000000 (2.0)
  213. swizzle_4                      $4..7 = ($4..7).xxxx
  214. mul_4_floats                   $0..3 *= $4..7
  215. copy_4_slots_unmasked          _3_x = $0..3
  216. copy_4_slots_unmasked          $0..3 = _3_x
  217. copy_constant                  $4 = 0x40800000 (4.0)
  218. swizzle_4                      $4..7 = ($4..7).xxxx
  219. sub_4_floats                   $0..3 -= $4..7
  220. copy_4_slots_unmasked          _3_x = $0..3
  221. copy_4_slots_unmasked          $0..3 = _3_x
  222. copy_constant                  $4 = 0x3F000000 (0.5)
  223. swizzle_4                      $4..7 = ($4..7).xxxx
  224. mul_4_floats                   $0..3 *= $4..7
  225. copy_4_slots_unmasked          _3_x = $0..3
  226. copy_slot_unmasked             $0 = _0_ok
  227. copy_4_slots_unmasked          $1..4 = _3_x
  228. copy_constant                  $5 = 0x40000000 (2.0)
  229. copy_constant                  $6 = 0x41000000 (8.0)
  230. copy_constant                  $7 = 0x41800000 (16.0)
  231. copy_constant                  $8 = 0x40800000 (4.0)
  232. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  233. bitwise_and_2_ints             $1..2 &= $3..4
  234. bitwise_and_int                $1 &= $2
  235. bitwise_and_int                $0 &= $1
  236. copy_slot_unmasked             _0_ok = $0
  237. copy_4_slots_unmasked          $0..3 = _3_x
  238. copy_constant                  $4 = 0x40000000 (2.0)
  239. swizzle_4                      $4..7 = ($4..7).xxxx
  240. add_4_floats                   $0..3 += $4..7
  241. copy_4_slots_unmasked          _3_x = $0..3
  242. copy_constant                  $4 = 0x40000000 (2.0)
  243. swizzle_4                      $4..7 = ($4..7).xxxx
  244. mul_4_floats                   $0..3 *= $4..7
  245. copy_4_slots_unmasked          _3_x = $0..3
  246. copy_constant                  $4 = 0x40800000 (4.0)
  247. swizzle_4                      $4..7 = ($4..7).xxxx
  248. sub_4_floats                   $0..3 -= $4..7
  249. copy_4_slots_unmasked          _3_x = $0..3
  250. copy_constant                  $4 = 0x3F000000 (0.5)
  251. swizzle_4                      $4..7 = ($4..7).xxxx
  252. mul_4_floats                   $0..3 *= $4..7
  253. copy_4_slots_unmasked          _3_x = $0..3
  254. copy_slot_unmasked             $0 = _0_ok
  255. copy_4_slots_unmasked          $1..4 = _3_x
  256. copy_constant                  $5 = 0x40000000 (2.0)
  257. copy_constant                  $6 = 0x41000000 (8.0)
  258. copy_constant                  $7 = 0x41800000 (16.0)
  259. copy_constant                  $8 = 0x40800000 (4.0)
  260. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  261. bitwise_and_2_ints             $1..2 &= $3..4
  262. bitwise_and_int                $1 &= $2
  263. bitwise_and_int                $0 &= $1
  264. copy_slot_unmasked             _0_ok = $0
  265. store_condition_mask           $12 = CondMask
  266. copy_slot_unmasked             $13 = _0_ok
  267. zero_slot_unmasked             $0 = 0
  268. merge_condition_mask           CondMask = $12 & $13
  269. branch_if_no_active_lanes      branch_if_no_active_lanes +269 (label 1 at #538)
  270. copy_constant                  ok = 0xFFFFFFFF
  271. copy_4_constants               $1..4 = colorRed
  272. cast_to_int_from_4_floats      $1..4 = FloatToInt($1..4)
  273. copy_4_slots_unmasked          inputRed = $1..4
  274. copy_4_constants               $1..4 = colorGreen
  275. cast_to_int_from_4_floats      $1..4 = FloatToInt($1..4)
  276. copy_4_slots_unmasked          inputGreen = $1..4
  277. copy_4_slots_unmasked          $1..4 = inputRed
  278. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  279. swizzle_4                      $5..8 = ($5..8).xxxx
  280. add_4_ints                     $1..4 += $5..8
  281. copy_4_slots_unmasked          x = $1..4
  282. copy_slot_unmasked             $1 = ok
  283. copy_4_slots_unmasked          $2..5 = x
  284. copy_constant                  $6 = 0x00000003 (4.203895e-45)
  285. copy_constant                  $7 = 0x00000002 (2.802597e-45)
  286. copy_constant                  $8 = 0x00000002 (2.802597e-45)
  287. copy_constant                  $9 = 0x00000003 (4.203895e-45)
  288. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  289. bitwise_and_2_ints             $2..3 &= $4..5
  290. bitwise_and_int                $2 &= $3
  291. bitwise_and_int                $1 &= $2
  292. copy_slot_masked               ok = Mask($1)
  293. copy_4_slots_unmasked          $1..4 = inputGreen
  294. swizzle_4                      $1..4 = ($1..4).ywxz
  295. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  296. swizzle_4                      $5..8 = ($5..8).xxxx
  297. sub_4_ints                     $1..4 -= $5..8
  298. copy_4_slots_masked            x = Mask($1..4)
  299. copy_slot_unmasked             $1 = ok
  300. copy_4_slots_unmasked          $2..5 = x
  301. copy_constant                  $6 = 0xFFFFFFFF
  302. copy_constant                  $7 = 0xFFFFFFFF
  303. copy_constant                  $8 = 0xFFFFFFFE
  304. copy_constant                  $9 = 0xFFFFFFFE
  305. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  306. bitwise_and_2_ints             $2..3 &= $4..5
  307. bitwise_and_int                $2 &= $3
  308. bitwise_and_int                $1 &= $2
  309. copy_slot_masked               ok = Mask($1)
  310. copy_4_slots_unmasked          $1..4 = inputRed
  311. copy_slot_unmasked             $5 = inputGreen(1)
  312. swizzle_4                      $5..8 = ($5..8).xxxx
  313. add_4_ints                     $1..4 += $5..8
  314. copy_4_slots_masked            x = Mask($1..4)
  315. copy_slot_unmasked             $1 = ok
  316. copy_4_slots_unmasked          $2..5 = x
  317. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  318. copy_constant                  $7 = 0x00000001 (1.401298e-45)
  319. copy_constant                  $8 = 0x00000001 (1.401298e-45)
  320. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  321. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  322. bitwise_and_2_ints             $2..3 &= $4..5
  323. bitwise_and_int                $2 &= $3
  324. bitwise_and_int                $1 &= $2
  325. copy_slot_masked               ok = Mask($1)
  326. copy_4_slots_unmasked          $1..4 = inputGreen
  327. swizzle_3                      $1..3 = ($1..4).wyw
  328. copy_constant                  $4 = 0x00000009 (1.261169e-44)
  329. swizzle_3                      $4..6 = ($4..6).xxx
  330. mul_3_ints                     $1..3 *= $4..6
  331. copy_3_slots_masked            x(0..2) = Mask($1..3)
  332. copy_slot_unmasked             $1 = ok
  333. copy_4_slots_unmasked          $2..5 = x
  334. copy_constant                  $6 = 0x00000009 (1.261169e-44)
  335. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  336. copy_constant                  $8 = 0x00000009 (1.261169e-44)
  337. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  338. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  339. bitwise_and_2_ints             $2..3 &= $4..5
  340. bitwise_and_int                $2 &= $3
  341. bitwise_and_int                $1 &= $2
  342. copy_slot_masked               ok = Mask($1)
  343. copy_2_slots_unmasked          $1..2 = x(2..3)
  344. copy_constant                  $3 = 0x00000004 (5.605194e-45)
  345. copy_slot_unmasked             $4 = $3
  346. div_2_ints                     $1..2 /= $3..4
  347. copy_2_slots_masked            x(0..1) = Mask($1..2)
  348. copy_slot_unmasked             $1 = ok
  349. copy_4_slots_unmasked          $2..5 = x
  350. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  351. zero_slot_unmasked             $7 = 0
  352. copy_constant                  $8 = 0x00000009 (1.261169e-44)
  353. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  354. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  355. bitwise_and_2_ints             $2..3 &= $4..5
  356. bitwise_and_int                $2 &= $3
  357. bitwise_and_int                $1 &= $2
  358. copy_slot_masked               ok = Mask($1)
  359. copy_4_slots_unmasked          $1..4 = inputRed
  360. copy_constant                  $5 = 0x00000005 (7.006492e-45)
  361. swizzle_4                      $5..8 = ($5..8).xxxx
  362. mul_4_ints                     $1..4 *= $5..8
  363. swizzle_4                      $1..4 = ($1..4).yxwz
  364. copy_4_slots_masked            x = Mask($1..4)
  365. copy_slot_unmasked             $1 = ok
  366. copy_4_slots_unmasked          $2..5 = x
  367. zero_slot_unmasked             $6 = 0
  368. copy_constant                  $7 = 0x00000005 (7.006492e-45)
  369. copy_constant                  $8 = 0x00000005 (7.006492e-45)
  370. zero_slot_unmasked             $9 = 0
  371. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  372. bitwise_and_2_ints             $2..3 &= $4..5
  373. bitwise_and_int                $2 &= $3
  374. bitwise_and_int                $1 &= $2
  375. copy_slot_masked               ok = Mask($1)
  376. copy_constant                  $1 = 0x00000002 (2.802597e-45)
  377. swizzle_4                      $1..4 = ($1..4).xxxx
  378. copy_4_slots_unmasked          $5..8 = inputRed
  379. add_4_ints                     $1..4 += $5..8
  380. copy_4_slots_masked            x = Mask($1..4)
  381. copy_slot_unmasked             $1 = ok
  382. copy_4_slots_unmasked          $2..5 = x
  383. copy_constant                  $6 = 0x00000003 (4.203895e-45)
  384. copy_constant                  $7 = 0x00000002 (2.802597e-45)
  385. copy_constant                  $8 = 0x00000002 (2.802597e-45)
  386. copy_constant                  $9 = 0x00000003 (4.203895e-45)
  387. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  388. bitwise_and_2_ints             $2..3 &= $4..5
  389. bitwise_and_int                $2 &= $3
  390. bitwise_and_int                $1 &= $2
  391. copy_slot_masked               ok = Mask($1)
  392. copy_constant                  $1 = 0x0000000A (1.401298e-44)
  393. swizzle_4                      $1..4 = ($1..4).xxxx
  394. copy_4_slots_unmasked          $5..8 = inputGreen
  395. swizzle_4                      $5..8 = ($5..8).ywxz
  396. sub_4_ints                     $1..4 -= $5..8
  397. copy_4_slots_masked            x = Mask($1..4)
  398. copy_slot_unmasked             $1 = ok
  399. copy_4_slots_unmasked          $2..5 = x
  400. copy_constant                  $6 = 0x00000009 (1.261169e-44)
  401. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  402. copy_constant                  $8 = 0x0000000A (1.401298e-44)
  403. copy_constant                  $9 = 0x0000000A (1.401298e-44)
  404. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  405. bitwise_and_2_ints             $2..3 &= $4..5
  406. bitwise_and_int                $2 &= $3
  407. bitwise_and_int                $1 &= $2
  408. copy_slot_masked               ok = Mask($1)
  409. copy_slot_unmasked             $1 = inputRed(0)
  410. swizzle_4                      $1..4 = ($1..4).xxxx
  411. copy_4_slots_unmasked          $5..8 = inputGreen
  412. add_4_ints                     $1..4 += $5..8
  413. copy_4_slots_masked            x = Mask($1..4)
  414. copy_slot_unmasked             $1 = ok
  415. copy_4_slots_unmasked          $2..5 = x
  416. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  417. copy_constant                  $7 = 0x00000002 (2.802597e-45)
  418. copy_constant                  $8 = 0x00000001 (1.401298e-45)
  419. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  420. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  421. bitwise_and_2_ints             $2..3 &= $4..5
  422. bitwise_and_int                $2 &= $3
  423. bitwise_and_int                $1 &= $2
  424. copy_slot_masked               ok = Mask($1)
  425. copy_constant                  $1 = 0x00000008 (1.121039e-44)
  426. swizzle_3                      $1..3 = ($1..3).xxx
  427. copy_4_slots_unmasked          $4..7 = inputGreen
  428. swizzle_3                      $4..6 = ($4..7).wyw
  429. mul_3_ints                     $1..3 *= $4..6
  430. copy_3_slots_masked            x(0..2) = Mask($1..3)
  431. copy_slot_unmasked             $1 = ok
  432. copy_4_slots_unmasked          $2..5 = x
  433. copy_constant                  $6 = 0x00000008 (1.121039e-44)
  434. copy_constant                  $7 = 0x00000008 (1.121039e-44)
  435. copy_constant                  $8 = 0x00000008 (1.121039e-44)
  436. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  437. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  438. bitwise_and_2_ints             $2..3 &= $4..5
  439. bitwise_and_int                $2 &= $3
  440. bitwise_and_int                $1 &= $2
  441. copy_slot_masked               ok = Mask($1)
  442. copy_constant                  $1 = 0x00000024 (5.044674e-44)
  443. copy_slot_unmasked             $2 = $1
  444. copy_2_slots_unmasked          $3..4 = x(2..3)
  445. div_2_ints                     $1..2 /= $3..4
  446. copy_2_slots_masked            x(0..1) = Mask($1..2)
  447. copy_slot_unmasked             $1 = ok
  448. copy_4_slots_unmasked          $2..5 = x
  449. copy_constant                  $6 = 0x00000004 (5.605194e-45)
  450. copy_constant                  $7 = 0x00000012 (2.522337e-44)
  451. copy_constant                  $8 = 0x00000008 (1.121039e-44)
  452. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  453. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  454. bitwise_and_2_ints             $2..3 &= $4..5
  455. bitwise_and_int                $2 &= $3
  456. bitwise_and_int                $1 &= $2
  457. copy_slot_masked               ok = Mask($1)
  458. copy_constant                  $1 = 0x00000025 (5.184804e-44)
  459. swizzle_4                      $1..4 = ($1..4).xxxx
  460. copy_4_slots_unmasked          $5..8 = x
  461. div_4_ints                     $1..4 /= $5..8
  462. swizzle_4                      $1..4 = ($1..4).yxwz
  463. copy_4_slots_masked            x = Mask($1..4)
  464. copy_slot_unmasked             $1 = ok
  465. copy_4_slots_unmasked          $2..5 = x
  466. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  467. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  468. copy_constant                  $8 = 0x00000012 (2.522337e-44)
  469. copy_constant                  $9 = 0x00000004 (5.605194e-45)
  470. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  471. bitwise_and_2_ints             $2..3 &= $4..5
  472. bitwise_and_int                $2 &= $3
  473. bitwise_and_int                $1 &= $2
  474. copy_slot_masked               ok = Mask($1)
  475. copy_4_slots_unmasked          $1..4 = x
  476. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  477. swizzle_4                      $5..8 = ($5..8).xxxx
  478. add_4_ints                     $1..4 += $5..8
  479. copy_4_slots_masked            x = Mask($1..4)
  480. copy_4_slots_unmasked          $1..4 = x
  481. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  482. swizzle_4                      $5..8 = ($5..8).xxxx
  483. mul_4_ints                     $1..4 *= $5..8
  484. copy_4_slots_masked            x = Mask($1..4)
  485. copy_4_slots_unmasked          $1..4 = x
  486. copy_constant                  $5 = 0x00000004 (5.605194e-45)
  487. swizzle_4                      $5..8 = ($5..8).xxxx
  488. sub_4_ints                     $1..4 -= $5..8
  489. copy_4_slots_masked            x = Mask($1..4)
  490. copy_4_slots_unmasked          $1..4 = x
  491. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  492. swizzle_4                      $5..8 = ($5..8).xxxx
  493. div_4_ints                     $1..4 /= $5..8
  494. copy_4_slots_masked            x = Mask($1..4)
  495. copy_slot_unmasked             $1 = ok
  496. copy_4_slots_unmasked          $2..5 = x
  497. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  498. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  499. copy_constant                  $8 = 0x00000012 (2.522337e-44)
  500. copy_constant                  $9 = 0x00000004 (5.605194e-45)
  501. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  502. stack_rewind
  503. bitwise_and_2_ints             $2..3 &= $4..5
  504. bitwise_and_int                $2 &= $3
  505. bitwise_and_int                $1 &= $2
  506. copy_slot_masked               ok = Mask($1)
  507. copy_4_slots_unmasked          $1..4 = x
  508. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  509. swizzle_4                      $5..8 = ($5..8).xxxx
  510. add_4_ints                     $1..4 += $5..8
  511. copy_4_slots_masked            x = Mask($1..4)
  512. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  513. swizzle_4                      $5..8 = ($5..8).xxxx
  514. mul_4_ints                     $1..4 *= $5..8
  515. copy_4_slots_masked            x = Mask($1..4)
  516. copy_constant                  $5 = 0x00000004 (5.605194e-45)
  517. swizzle_4                      $5..8 = ($5..8).xxxx
  518. sub_4_ints                     $1..4 -= $5..8
  519. copy_4_slots_masked            x = Mask($1..4)
  520. copy_constant                  $5 = 0x00000002 (2.802597e-45)
  521. swizzle_4                      $5..8 = ($5..8).xxxx
  522. div_4_ints                     $1..4 /= $5..8
  523. copy_4_slots_masked            x = Mask($1..4)
  524. copy_slot_unmasked             $1 = ok
  525. copy_4_slots_unmasked          $2..5 = x
  526. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  527. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  528. copy_constant                  $8 = 0x00000012 (2.522337e-44)
  529. copy_constant                  $9 = 0x00000004 (5.605194e-45)
  530. cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
  531. bitwise_and_2_ints             $2..3 &= $4..5
  532. bitwise_and_int                $2 &= $3
  533. bitwise_and_int                $1 &= $2
  534. copy_slot_masked               ok = Mask($1)
  535. copy_slot_masked               [test_int].result = Mask($1)
  536. label                          label 0x00000002
  537. copy_slot_masked               $0 = Mask($1)
  538. label                          label 0x00000001
  539. load_condition_mask            CondMask = $12
  540. swizzle_4                      $0..3 = ($0..3).xxxx
  541. copy_4_constants               $4..7 = colorRed
  542. copy_4_constants               $8..11 = colorGreen
  543. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  544. copy_4_slots_unmasked          [main].result = $0..3
  545. load_src                       src.rgba = [main].result
