    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_4_constants               $0..3 = testInputs
    4. copy_4_slots_unmasked          v = $0..3
    5. zero_slot_unmasked             $0 = 0
    6. copy_4_slots_unmasked          $1..4 = v
    7. swizzle_3                      $1..3 = ($1..3).zyx
    8. copy_4_slots_unmasked          v = $0..3
    9. zero_2_slots_unmasked          $0..1 = 0
   10. copy_4_slots_unmasked          $2..5 = v
   11. swizzle_1                      $3 = ($3..5).z
   12. copy_4_slots_unmasked          v = $0..3
   13. copy_constant                  $0 = 0x3F800000 (1.0)
   14. copy_constant                  $1 = 0x3F800000 (1.0)
   15. copy_4_slots_unmasked          $2..5 = v
   16. swizzle_2                      $2..3 = ($2..5).wx
   17. copy_4_slots_unmasked          v = $0..3
   18. swizzle_2                      $0..1 = ($0..2).zy
   19. copy_constant                  $2 = 0x3F800000 (1.0)
   20. copy_constant                  $3 = 0x3F800000 (1.0)
   21. copy_4_slots_unmasked          v = $0..3
   22. swizzle_2                      $0..1 = ($0..1).xx
   23. copy_constant                  $2 = 0x3F800000 (1.0)
   24. copy_constant                  $3 = 0x3F800000 (1.0)
   25. copy_4_slots_unmasked          v = $0..3
   26. swizzle_4                      $0..3 = ($0..3).wzwz
   27. copy_4_slots_unmasked          v = $0..3
   28. store_return_mask              $0 = RetMask
   29. copy_4_slots_unmasked          $1..4 = v
   30. copy_4_slots_unmasked          v = $1..4
   31. copy_constant                  x = 0x00000001 (1.401298e-45)
   32. store_loop_mask                $1 = LoopMask
   33. jump                           jump +9 (label 1 at #42)
   34. label                          label 0x00000002
   35. copy_slot_unmasked             $2 = v(0)
   36. copy_slot_masked               [fn].result = Mask($2)
   37. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   38. copy_slot_unmasked             $2 = x
   39. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   40. add_int                        $2 += $3
   41. copy_slot_masked               x = Mask($2)
   42. label                          label 0x00000001
   43. copy_slot_unmasked             $2 = x
   44. copy_constant                  $3 = 0x00000002 (2.802597e-45)
   45. cmple_int                      $2 = lessThanEqual($2, $3)
   46. merge_loop_mask                LoopMask &= $2
   47. stack_rewind
   48. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 2 at #34)
   49. load_loop_mask                 LoopMask = $1
   50. load_return_mask               RetMask = $0
   51. copy_slot_unmasked             $0 = [fn].result
   52. label                          label 0x00000000
   53. copy_constant                  $1 = 0x42F60000 (123.0)
   54. copy_constant                  $2 = 0x43E40000 (456.0)
   55. swizzle_4                      $0..3 = ($0..3).yyzz
   56. copy_4_slots_unmasked          v = $0..3
   57. store_return_mask              $0 = RetMask
   58. copy_4_slots_unmasked          $1..4 = v
   59. copy_4_slots_unmasked          v = $1..4
   60. copy_constant                  x = 0x00000001 (1.401298e-45)
   61. store_loop_mask                $1 = LoopMask
   62. jump                           jump +9 (label 4 at #71)
   63. label                          label 0x00000005
   64. copy_slot_unmasked             $2 = v(0)
   65. copy_slot_masked               [fn].result = Mask($2)
   66. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   67. copy_slot_unmasked             $2 = x
   68. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   69. add_int                        $2 += $3
   70. copy_slot_masked               x = Mask($2)
   71. label                          label 0x00000004
   72. copy_slot_unmasked             $2 = x
   73. copy_constant                  $3 = 0x00000002 (2.802597e-45)
   74. cmple_int                      $2 = lessThanEqual($2, $3)
   75. merge_loop_mask                LoopMask &= $2
   76. stack_rewind
   77. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 5 at #63)
   78. load_loop_mask                 LoopMask = $1
   79. load_return_mask               RetMask = $0
   80. copy_slot_unmasked             $0 = [fn].result
   81. label                          label 0x00000003
   82. copy_constant                  $1 = 0x42F60000 (123.0)
   83. copy_constant                  $2 = 0x43E40000 (456.0)
   84. swizzle_4                      $0..3 = ($0..3).yyzz
   85. copy_4_slots_unmasked          v = $0..3
   86. copy_constant                  $0 = 0x42F60000 (123.0)
   87. copy_constant                  $1 = 0x43E40000 (456.0)
   88. copy_constant                  $2 = 0x43E40000 (456.0)
   89. store_return_mask              $3 = RetMask
   90. copy_4_slots_unmasked          $4..7 = v
   91. copy_4_slots_unmasked          v = $4..7
   92. copy_constant                  x = 0x00000001 (1.401298e-45)
   93. store_loop_mask                $4 = LoopMask
   94. jump                           jump +9 (label 7 at #103)
   95. label                          label 0x00000008
   96. copy_slot_unmasked             $5 = v(0)
   97. copy_slot_masked               [fn].result = Mask($5)
   98. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   99. copy_slot_unmasked             $5 = x
  100. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  101. add_int                        $5 += $6
  102. copy_slot_masked               x = Mask($5)
  103. label                          label 0x00000007
  104. copy_slot_unmasked             $5 = x
  105. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  106. cmple_int                      $5 = lessThanEqual($5, $6)
  107. merge_loop_mask                LoopMask &= $5
  108. stack_rewind
  109. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 8 at #95)
  110. load_loop_mask                 LoopMask = $4
  111. load_return_mask               RetMask = $3
  112. copy_slot_unmasked             $3 = [fn].result
  113. label                          label 0x00000006
  114. copy_4_slots_unmasked          v = $0..3
  115. copy_constant                  $0 = 0x42F60000 (123.0)
  116. copy_constant                  $1 = 0x43E40000 (456.0)
  117. copy_constant                  $2 = 0x43E40000 (456.0)
  118. store_return_mask              $3 = RetMask
  119. copy_4_slots_unmasked          $4..7 = v
  120. copy_4_slots_unmasked          v = $4..7
  121. copy_constant                  x = 0x00000001 (1.401298e-45)
  122. store_loop_mask                $4 = LoopMask
  123. jump                           jump +9 (label 10 at #132)
  124. label                          label 0x0000000B
  125. copy_slot_unmasked             $5 = v(0)
  126. copy_slot_masked               [fn].result = Mask($5)
  127. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  128. copy_slot_unmasked             $5 = x
  129. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  130. add_int                        $5 += $6
  131. copy_slot_masked               x = Mask($5)
  132. label                          label 0x0000000A
  133. copy_slot_unmasked             $5 = x
  134. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  135. cmple_int                      $5 = lessThanEqual($5, $6)
  136. merge_loop_mask                LoopMask &= $5
  137. stack_rewind
  138. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 11 at #124)
  139. load_loop_mask                 LoopMask = $4
  140. load_return_mask               RetMask = $3
  141. copy_slot_unmasked             $3 = [fn].result
  142. label                          label 0x00000009
  143. copy_4_slots_unmasked          v = $0..3
  144. store_return_mask              $0 = RetMask
  145. copy_4_slots_unmasked          $1..4 = v
  146. copy_4_slots_unmasked          v = $1..4
  147. copy_constant                  x = 0x00000001 (1.401298e-45)
  148. store_loop_mask                $1 = LoopMask
  149. jump                           jump +9 (label 13 at #158)
  150. label                          label 0x0000000E
  151. copy_slot_unmasked             $2 = v(0)
  152. copy_slot_masked               [fn].result = Mask($2)
  153. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  154. copy_slot_unmasked             $2 = x
  155. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  156. add_int                        $2 += $3
  157. copy_slot_masked               x = Mask($2)
  158. label                          label 0x0000000D
  159. copy_slot_unmasked             $2 = x
  160. copy_constant                  $3 = 0x00000002 (2.802597e-45)
  161. cmple_int                      $2 = lessThanEqual($2, $3)
  162. merge_loop_mask                LoopMask &= $2
  163. stack_rewind
  164. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 14 at #150)
  165. load_loop_mask                 LoopMask = $1
  166. load_return_mask               RetMask = $0
  167. copy_slot_unmasked             $0 = [fn].result
  168. label                          label 0x0000000C
  169. copy_constant                  $1 = 0x42F60000 (123.0)
  170. copy_constant                  $2 = 0x43E40000 (456.0)
  171. swizzle_4                      $0..3 = ($0..3).yxxz
  172. copy_4_slots_unmasked          v = $0..3
  173. store_return_mask              $0 = RetMask
  174. copy_4_slots_unmasked          $1..4 = v
  175. copy_4_slots_unmasked          v = $1..4
  176. copy_constant                  x = 0x00000001 (1.401298e-45)
  177. store_loop_mask                $1 = LoopMask
  178. jump                           jump +9 (label 16 at #187)
  179. label                          label 0x00000011
  180. copy_slot_unmasked             $2 = v(0)
  181. copy_slot_masked               [fn].result = Mask($2)
  182. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  183. copy_slot_unmasked             $2 = x
  184. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  185. add_int                        $2 += $3
  186. copy_slot_masked               x = Mask($2)
  187. label                          label 0x00000010
  188. copy_slot_unmasked             $2 = x
  189. copy_constant                  $3 = 0x00000002 (2.802597e-45)
  190. cmple_int                      $2 = lessThanEqual($2, $3)
  191. merge_loop_mask                LoopMask &= $2
  192. stack_rewind
  193. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (label 17 at #179)
  194. load_loop_mask                 LoopMask = $1
  195. load_return_mask               RetMask = $0
  196. copy_slot_unmasked             $0 = [fn].result
  197. label                          label 0x0000000F
  198. copy_constant                  $1 = 0x42F60000 (123.0)
  199. copy_constant                  $2 = 0x43E40000 (456.0)
  200. swizzle_4                      $0..3 = ($0..3).yxxz
  201. copy_4_slots_unmasked          v = $0..3
  202. copy_constant                  $0 = 0x3F800000 (1.0)
  203. copy_constant                  $1 = 0x3F800000 (1.0)
  204. copy_constant                  $2 = 0x40000000 (2.0)
  205. copy_constant                  $3 = 0x40400000 (3.0)
  206. copy_4_slots_unmasked          v = $0..3
  207. copy_3_constants               $0..2 = colorRed(0..2)
  208. copy_constant                  $3 = 0x3F800000 (1.0)
  209. copy_4_slots_unmasked          v = $0..3
  210. copy_constant                  $0 = colorRed(0)
  211. copy_constant                  $1 = 0x3F800000 (1.0)
  212. copy_2_constants               $2..3 = colorRed(1..2)
  213. copy_4_slots_unmasked          v = $0..3
  214. copy_slot_unmasked             v(3) = $0
  215. copy_slot_unmasked             v(2) = $1
  216. copy_slot_unmasked             v(1) = $2
  217. copy_slot_unmasked             v(0) = $3
  218. copy_2_slots_unmasked          $0..1 = v(1..2)
  219. copy_slot_unmasked             v(0) = $0
  220. copy_slot_unmasked             v(3) = $1
  221. copy_4_slots_unmasked          $0..3 = v
  222. swizzle_2                      $0..1 = ($0..3).ww
  223. copy_constant                  $2 = 0x3F800000 (1.0)
  224. copy_slot_unmasked             v(2) = $0
  225. copy_slot_unmasked             v(1) = $1
  226. copy_slot_unmasked             v(0) = $2
  227. store_condition_mask           $8 = CondMask
  228. copy_4_slots_unmasked          $9..12 = v
  229. copy_constant                  $13 = 0x3F800000 (1.0)
  230. swizzle_4                      $13..16 = ($13..16).xxxx
  231. cmpeq_4_floats                 $9..12 = equal($9..12, $13..16)
  232. bitwise_and_2_ints             $9..10 &= $11..12
  233. bitwise_and_int                $9 &= $10
  234. copy_4_constants               $0..3 = colorRed
  235. merge_condition_mask           CondMask = $8 & $9
  236. copy_4_constants               $4..7 = colorGreen
  237. copy_4_slots_masked            $0..3 = Mask($4..7)
  238. label                          label 0x00000012
  239. load_condition_mask            CondMask = $8
  240. copy_4_slots_unmasked          [main].result = $0..3
  241. load_src                       src.rgba = [main].result
